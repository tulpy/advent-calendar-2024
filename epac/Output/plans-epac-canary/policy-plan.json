{
  "pacOwnerId": "00000000-0000-0000-0000-000000000000",
  "policyDefinitions": {
    "numberOfChanges": 116,
    "numberUnchanged": 0,
    "new": {
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_BGPPeerStatus_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VPN Gateway BGP Peer Status Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_BGPPeerStatus_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "microsoft.network/vpngateways",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "microsoft.network/vpngateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "bgppeerstatus",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.network/vpngateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Total",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-bgppeerstatus-threshold-Override_'), field('tags._amba-bgppeerstatus-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-bgppeerstatus-threshold-Override_'), field('tags._amba-bgppeerstatus-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for VPN Gateway BGP peer status",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Total",
                                "operator": "LessThan",
                                "name": "bgppeerstatus",
                                "metricNamespace": "microsoft.network/vpngateways",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "bgppeerstatus"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-BGPPeerStatusAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_VPNGw_BGPPeerStatus_Alert",
        "displayName": "Deploy VPNG  BGP Peer Status Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_ComputeUnits_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.2.1",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Azure Application Gateway ComputeUnits Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_ComputeUnits_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "75",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/applicationgateways",
                "field": "type"
              },
              {
                "field": "Microsoft.Network/applicationgateways/sku.name",
                "In": [
                  "Standard_v2",
                  "WAF_v2"
                ]
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/applicationgateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "ComputeUnits",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/applicationgateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-ComputeUnits-threshold-Override_'), field('tags._amba-ComputeUnits-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-ComputeUnits-threshold-Override_'), field('tags._amba-ComputeUnits-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for App Gateway Compute Units",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "ComputeUnits",
                                "metricNamespace": "Microsoft.Network/applicationgateways",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "ComputeUnits"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-agComputeUnits')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_AG_ComputeUnits_Alert",
        "displayName": "Deploy AGW Compute Units Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_PacketsInDDoSAttack_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy PIP Packets in DDoS Attack Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_PacketsInDDoSAttack_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "4",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "40000",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/publicIPAddresses",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/publicIPAddresses",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "PacketsInDDoS",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/publicIPAddresses/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Total",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThanOrEqual",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-PacketsInDDoS-threshold-Override_'), field('tags._amba-PacketsInDDoS-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-PacketsInDDoS-threshold-Override_'), field('tags._amba-PacketsInDDoS-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Public IP Address Packets IN DDOS",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Total",
                                "operator": "GreaterThanOrEqual",
                                "name": "PacketsInDDoS",
                                "metricNamespace": "Microsoft.Network/publicIPAddresses",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "PacketsInDDoS"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-PacketsInDDosAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_PublicIp_PacketsInDDoSAttack_Alert",
        "displayName": "Deploy PIP Packets in DDoS Attack Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_OSDiskSpace_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Hybrid Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM OSDiskSpace Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_OSDiskSpace_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "computersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Array of Computer to be monitored",
              "displayName": "Computers to be included to be monitored"
            },
            "type": "array"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.HybridCompute/machines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-HybridVMLowOSDiskSpaceAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-FreeSpacePercentage-OS-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"FreeSpacePercentage\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk in (\"C:\",\"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-FreeSpacePercentage-OS-threshold-Override_\", tostring(tags.[\"_amba-FreeSpacePercentage-OS-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue < appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "computersToInclude": {
                      "value": "[parameters('computersToInclude')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "computersToInclude": {
                        "type": "array"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine OSDiskSpace",
                                  "displayName": "[concat(subscription().displayName, '-HybridVMLowOSDiskSpaceAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "computersToInclude": {
                                      "value": "[parameters('computersToInclude')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": "[parameters('computersToInclude')]"
                                          },
                                          {
                                            "operator": "Include",
                                            "name": "Disk",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-FreeSpacePercentage-OS-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"FreeSpacePercentage\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk in (\"C:\",\"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-FreeSpacePercentage-OS-threshold-Override_\", tostring(tags.[\"_amba-FreeSpacePercentage-OS-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue < appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.HybridCompute/machines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-HybridVMLowOSDiskSpaceAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "HybridVMOSDiskSpaceAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_Hybrid_VM_OSDiskSpace_Alert",
        "displayName": "Deploy Hybrid VM OS Disk Space Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_DDoSAttack_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy PIP DDoS Attack Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_DDoSAttack_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "0",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/publicIPAddresses",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/publicIPAddresses",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "ifunderddosattack",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/publicIPAddresses/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Maximum",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-ifunderddosattack-threshold-Override_'), field('tags._amba-ifunderddosattack-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-ifunderddosattack-threshold-Override_'), field('tags._amba-ifunderddosattack-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Public IP Address Under Attack",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Maximum",
                                "operator": "GreaterThan",
                                "name": "ifunderddosattack",
                                "metricNamespace": "Microsoft.Network/publicIPAddresses",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "ifunderddosattack"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-DDOS_Attack')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_PublicIp_DDoSAttack_Alert",
        "displayName": "Deploy PIP DDoS Attack Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERCIR_BgpAvailability_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy ExpressRoute Circuits Bgp Availability Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERCIR_BgpAvailability_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "90",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/expressRouteCircuits",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/expressRouteCircuits",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "BgpAvailability",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/expressRouteCircuits/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-BgpAvailability-threshold-Override_'), field('tags._amba-BgpAvailability-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-BgpAvailability-threshold-Override_'), field('tags._amba-BgpAvailability-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for ExpressRoute Circuit Bgp Availability",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "BgpAvailability",
                                "metricNamespace": "Microsoft.Network/expressRouteCircuits",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "BgpAvailability"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-BgpAvailability')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_ERCIR_BgpAvailability_Alert",
        "displayName": "Deploy ExpressRoute Circuits Bgp Availability Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_WSF_DiskQueueLength_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Web Services",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy App Service Plan Disk Queue Length Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_WSF_DiskQueueLength_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Web/serverfarms",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Web/serverfarms",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "DiskQueueLength",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator"
                  },
                  {
                    "equals": "Medium",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for App Service Plan Disk Queue Length",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "failingPeriods": {
                              "value": "[parameters('failingPeriods')]"
                            },
                            "evaluationPeriods": {
                              "value": "[parameters('evaluationPeriods')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                  "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                },
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "ServiceApiResult",
                                "metricNamespace": "Microsoft.Web/serverfarms",
                                "criterionType": "DynamicThresholdCriterion",
                                "metricName": "DiskQueueLength",
                                "alertSensitivity": "Medium"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-DiskQueueLengthAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_WSF_DiskQueueLength_Alert",
        "displayName": "Deploy App Service Plan Disk Queue Length Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FD_BackendRequestLatency_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Frontdoor Backend Request Latency Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FD_BackendRequestLatency_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/frontdoors",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/frontdoors",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "BackendRequestLatency",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/frontdoors/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator"
                  },
                  {
                    "equals": "Medium",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity"
                  },
                  {
                    "equals": 2,
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": 2,
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Frontdoor BackendRequestLatency",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": 2,
                                  "minFailingPeriodsToAlert": 2
                                },
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "ServiceApiResult",
                                "metricNamespace": "Microsoft.Network/frontdoors",
                                "criterionType": "DynamicThresholdCriterion",
                                "metricName": "BackendRequestLatency",
                                "alertSensitivity": "Medium"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-BackendRequestLatencyAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_FD_BackendRequestLatency_Alert",
        "displayName": "Deploy Frontdoor Backend Request Latency Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FrontDoorCDN_Percentage5XX_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy FrontDoor CDN Profile Percentage5XX Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FrontDoorCDN_Percentage5XX_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Cdn/profiles",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Cdn/profiles",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "Percentage5XX",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Cdn/profiles/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator"
                  },
                  {
                    "equals": "Medium",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Frontdoor CDN Origin Latency",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "failingPeriods": {
                              "value": "[parameters('failingPeriods')]"
                            },
                            "evaluationPeriods": {
                              "value": "[parameters('evaluationPeriods')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                  "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                },
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "ServiceApiResult",
                                "metricNamespace": "Microsoft.Cdn/profiles",
                                "criterionType": "DynamicThresholdCriterion",
                                "metricName": "Percentage5XX",
                                "alertSensitivity": "Medium"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-Percentage5XXAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_FrontDoorCDN_Percentage5XX_Alert",
        "displayName": "Deploy FrontDoor CDN Profile Percentage5XX Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERCIR_ArpAvailability_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy ExpressRoute Circuits Arp Availability Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERCIR_ArpAvailability_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "90",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/expressRouteCircuits",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/expressRouteCircuits",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "ArpAvailability",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/expressRouteCircuits/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-ArpAvailability-threshold-Override_'), field('tags._amba-ArpAvailability-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-ArpAvailability-threshold-Override_'), field('tags._amba-ArpAvailability-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for ExpressRoute Circuit Arp Availability",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "ArpAvailability",
                                "metricNamespace": "Microsoft.Network/expressRouteCircuits",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "ArpAvailability"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-ArpAvailability')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_ERCIR_ArpAvailability_Alert",
        "displayName": "Deploy ExpressRoute Circuits Arp Availability Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AFW_FirewallHealth_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Azure Firewall FirewallHealth Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AFW_FirewallHealth_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "90",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/azureFirewalls",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/azureFirewalls",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "FirewallHealth",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/azureFirewalls/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-FirewallHealth-threshold-Override_'), field('tags._amba-FirewallHealth-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-FirewallHealth-threshold-Override_'), field('tags._amba-FirewallHealth-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for AFW FirewallHealth",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "FirewallHealth",
                                "metricNamespace": "Microsoft.Network/azureFirewalls",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "FirewallHealth"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-FirewallHealth')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_AFW_FirewallHealth_Alert",
        "displayName": "Deploy AFW FirewallHealth Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_DNSZ_RegistrationCapacityUtil_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Private DNS Zone Registration Capacity Utilization Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_DNSZ_RegistrationCapacityUtil_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1H",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT1H",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "80",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/privateDnsZones",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/privateDnsZones",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "VirtualNetworkWithRegistrationCapacityUtilization",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/privateDnsZones/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Maximum",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThanOrEqual",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-VirtualNetworkWithRegistrationCapacityUtilization-threshold-Override_'), field('tags._amba-VirtualNetworkWithRegistrationCapacityUtilization-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-VirtualNetworkWithRegistrationCapacityUtilization-threshold-Override_'), field('tags._amba-VirtualNetworkWithRegistrationCapacityUtilization-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Private DNS Zone Registration Capacity Utilization",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Maximum",
                                "operator": "GreaterThanOrEqual",
                                "name": "VirtualNetworkWithRegistrationCapacityUtilization",
                                "metricNamespace": "Microsoft.Network/privateDnsZones",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "VirtualNetworkWithRegistrationCapacityUtilization"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-RequestsAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_DNSZ_RegistrationCapacityUtil_Alert",
        "displayName": "Deploy PDNSZ Registration Capacity Utilization Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_ServiceHealth_HealthAdvisory": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to Deploy Service Health Advisory Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_ServiceHealth_HealthAdvisory",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_amba": true
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "ALZMonitorActionGroupEmail": {
            "defaultValue": [],
            "metadata": {
              "description": "Email addresses to send alerts to",
              "displayName": "Action Group Email Addresses"
            },
            "type": "Array"
          },
          "BYOActionGroup": {
            "defaultValue": [],
            "metadata": {
              "description": "The Resource IDs of existing Action Groups currently deployed in the environment.",
              "displayName": "Customer defined Action Group Resource IDs"
            },
            "type": "array"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Resources/subscriptions",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/activityLogAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/ActivityLogAlerts/enabled"
                  },
                  {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "value": "[empty(parameters('BYOActionGroup'))]",
                            "equals": true
                          },
                          {
                            "field": "Microsoft.Insights/ActivityLogAlerts/actions.actionGroups[*].actionGroupId",
                            "contains": "ag-AMBA-SH-"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "value": "[empty(parameters('BYOActionGroup'))]",
                            "equals": false
                          },
                          {
                            "count": {
                              "field": "Microsoft.Insights/ActivityLogAlerts/actions.actionGroups[*]",
                              "where": {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Insights/ActivityLogAlerts/actions.actionGroups[*].actionGroupId",
                                    "in": "[parameters('BYOActionGroup')]"
                                  }
                                ]
                              }
                            },
                            "greaterOrEquals": 1
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "equals": 2,
                    "count": {
                      "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*]",
                      "where": {
                        "anyOf": [
                          {
                            "allOf": [
                              {
                                "equals": "category",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "ServiceHealth",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "equals": "properties.incidentType",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "ActionRequired",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "ALZMonitorActionGroupEmail": {
                      "value": "[parameters('ALZMonitorActionGroupEmail')]"
                    },
                    "BYOActionGroup": {
                      "value": "[parameters('BYOActionGroup')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "string"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "ALZMonitorActionGroupEmail": {
                        "type": "Array"
                      },
                      "BYOActionGroup": {
                        "type": "array"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {
                      "copy": [
                        {
                          "name": "varActionGroupIds",
                          "mode": "serial",
                          "count": "[length(parameters('BYOActionGroup'))]",
                          "input": {
                            "actionGroupId": "[trim(parameters('BYOActionGroup')[copyIndex('varActionGroupIds')])]"
                          }
                        }
                      ]
                    },
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "ALZMonitorActionGroupEmail": {
                              "value": "[parameters('ALZMonitorActionGroupEmail')]"
                            },
                            "BYOActionGroup": {
                              "value": "[parameters('BYOActionGroup')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "ALZMonitorActionGroupEmail": {
                                "type": "Array"
                              },
                              "BYOActionGroup": {
                                "type": "array"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "microsoft.insights/activityLogAlerts",
                                "properties": {
                                  "description": "Service Health Advisory Alert",
                                  "parameters": {
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    }
                                  },
                                  "enabled": "[parameters('enabled')]",
                                  "scopes": [
                                    "[subscription().id]"
                                  ],
                                  "condition": {
                                    "allOf": [
                                      {
                                        "equals": "ServiceHealth",
                                        "field": "category"
                                      },
                                      {
                                        "equals": "ActionRequired",
                                        "field": "properties.incidentType"
                                      }
                                    ]
                                  },
                                  "actions": {
                                    "actionGroups": [
                                      {
                                        "actionGroupId": "[concat(subscription().Id, '/resourceGroups/', parameters('alertResourceGroupName'), '/providers/microsoft.insights/actionGroups/', 'ag-AMBA-SH-', subscription().displayName, '-001')]"
                                      }
                                    ]
                                  }
                                },
                                "apiVersion": "2020-10-01",
                                "location": "Global",
                                "name": "ServiceHealthAdvisoryEvent",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "condition": "[empty(parameters('BYOActionGroup'))]"
                              },
                              {
                                "type": "microsoft.insights/activityLogAlerts",
                                "properties": {
                                  "description": "Service Health Advisory Alert",
                                  "parameters": {
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    }
                                  },
                                  "enabled": "[parameters('enabled')]",
                                  "scopes": [
                                    "[subscription().id]"
                                  ],
                                  "condition": {
                                    "allOf": [
                                      {
                                        "equals": "ServiceHealth",
                                        "field": "category"
                                      },
                                      {
                                        "equals": "ActionRequired",
                                        "field": "properties.incidentType"
                                      }
                                    ]
                                  },
                                  "actions": {
                                    "actionGroups": "[variables('varActionGroupIds')]"
                                  }
                                },
                                "apiVersion": "2020-10-01",
                                "location": "Global",
                                "name": "ServiceHealthAdvisoryEvent",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "condition": "[not(empty(parameters('BYOActionGroup')))]"
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "ServiceHealthHealth",
                        "dependsOn": [
                          "[resourceId('Microsoft.Resources/resourceGroups', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_activitylog_ServiceHealth_HealthAdvisory",
        "displayName": "Deploy Service Health Advisory Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERGw_ExpressRouteBitsOut_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy ER Gateway Connection BitsOutPerSecond Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERGw_ExpressRouteBitsOut_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/expressroutegateways",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/expressroutegateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "ERGatewayConnectionBitsOutPerSecond",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/expressroutegateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-ERGatewayConnectionBitsOutPerSecond-threshold-Override_'), field('tags._amba-ERGatewayConnectionBitsOutPerSecond-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-ERGatewayConnectionBitsOutPerSecond-threshold-Override_'), field('tags._amba-ERGatewayConnectionBitsOutPerSecond-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for ER Gateway Connection BitsOutPerSecond",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "ERGatewayConnectionBitsOutPerSecond",
                                "metricNamespace": "Microsoft.Network/expressroutegateways",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "ERGatewayConnectionBitsOutPerSecond"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-GatewayERBitsOutAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_ERGw_ExpressRouteBitsOut_Alert",
        "displayName": "Deploy ERG ExpressRoute Bits Out Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_WSF_MemoryPercentage_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.2.1",
          "category": "Web Services",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy App Service Plan Memory Percentage  Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_WSF_MemoryPercentage_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "85",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Web/serverfarms",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Web/serverfarms",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "MemoryPercentage",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-MemoryPercentage-threshold-Override_'), field('tags._amba-MemoryPercentage-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-MemoryPercentage-threshold-Override_'), field('tags._amba-MemoryPercentage-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for App Service Plan Memory Percentage",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "MemoryPercentage",
                                "metricNamespace": "Microsoft.Web/serverfarms",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "MemoryPercentage"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-MemoryPercentage')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_WSF_MemoryPercentage_Alert",
        "displayName": "Deploy App Service Plan Memory Percentage Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_OSDiskSpace_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.5.0",
          "category": "Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM OSDiskSpace Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_OSDiskSpace_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "computersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Array of Computer to be monitored",
              "displayName": "Computers to be included to be monitored"
            },
            "type": "array"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Compute/virtualMachines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-VMLowOSDiskSpaceAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-FreeSpacePercentage-OS-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | where _ResourceId !in~ (excludedVMSSNodes) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"FreeSpacePercentage\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk in (\"C:\",\"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-FreeSpacePercentage-OS-threshold-Override_\", tostring(tags.[\"_amba-FreeSpacePercentage-OS-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue < appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "computersToInclude": {
                      "value": "[parameters('computersToInclude')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "computersToInclude": {
                        "type": "array"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine OSDiskSpace",
                                  "displayName": "[concat(subscription().displayName, '-VMLowOSDiskSpaceAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "computersToInclude": {
                                      "value": "[parameters('computersToInclude')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": "[parameters('computersToInclude')]"
                                          },
                                          {
                                            "operator": "Include",
                                            "name": "Disk",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-FreeSpacePercentage-OS-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | where _ResourceId !in~ (excludedVMSSNodes) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"FreeSpacePercentage\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk in (\"C:\",\"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-FreeSpacePercentage-OS-threshold-Override_\", tostring(tags.[\"_amba-FreeSpacePercentage-OS-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue < appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.Compute/virtualMachines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-VMLowOSDiskSpaceAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "VMOSDiskSpaceAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_VM_OSDiskSpace_Alert",
        "displayName": "Deploy VM OS Disk Space Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AFW_SNATPortUtilization_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Azure Firewall SNATPortUtilization Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AFW_SNATPortUtilization_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "80",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/azureFirewalls",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/azureFirewalls",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "SNATPortUtilization",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/azureFirewalls/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-SNATPortUtilization-threshold-Override_'), field('tags._amba-SNATPortUtilization-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-SNATPortUtilization-threshold-Override_'), field('tags._amba-SNATPortUtilization-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for AFW SNATPortUtilization",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "SNATPortUtilization",
                                "metricNamespace": "Microsoft.Network/azureFirewalls",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "SNATPortUtilization"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-SNATPortUtilization')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_AFW_SNATPortUtilization_Alert",
        "displayName": "Deploy AFW SNATPortUtilization Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FD_BackendHealth_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.1.1",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy FrontDoor Backend Health Percentage  Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FD_BackendHealth_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "90",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/frontdoors",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/frontdoors",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "BackendHealthPercentage",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/frontdoors/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-BackendHealthPercentage-threshold-Override_'), field('tags._amba-BackendHealthPercentage-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-BackendHealthPercentage-threshold-Override_'), field('tags._amba-BackendHealthPercentage-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Frontdoor Backend Health Percentage",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "BackendHealthPercentage",
                                "metricNamespace": "Microsoft.Network/frontdoors",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "BackendHealthPercentage"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-BackendHealthPercentage')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_FD_BackendHealth_Alert",
        "displayName": "Deploy Frontdoor Backend Health Percentage Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_CPUUtilization_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.2.1",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Azure Application Gateway CPU Utilization Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_CPUUtilization_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "80",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/applicationgateways",
                "field": "type"
              },
              {
                "field": "Microsoft.Network/applicationgateways/sku.name",
                "notIn": [
                  "Standard_v2",
                  "WAF_v2"
                ]
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/applicationgateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "CpuUtilization",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/applicationgateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-CpuUtilization-threshold-Override_'), field('tags._amba-CpuUtilization-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-CpuUtilization-threshold-Override_'), field('tags._amba-CpuUtilization-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for App Gateway CPU Utilization",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "CpuUtilization",
                                "metricNamespace": "Microsoft.Network/applicationgateways",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "CpuUtilization"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-agCpuUtilization')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_AG_CPUUtilization_Alert",
        "displayName": "Deploy AGW CPU Utilization Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Suppression_AlertProcessing_Rule": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.1.0",
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to deploy empty and disabled suppression Alert Processing Rule for all AMBA alerts",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Suppression_AlertProcessing_Rule",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "ALZMonitorResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "ALZMonitorResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "ALZMonitorResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_amba": true
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Resources/subscriptions",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "deployIfNotExists",
            "details": {
              "type": "Microsoft.AlertsManagement/actionRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "AMBA Notification Assets - Suppression Alert Processing Rule for maintenance period for Subscription",
                    "field": "Microsoft.AlertsManagement/actionRules/description"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "ALZMonitorResourceGroupName": {
                      "value": "[parameters('ALZMonitorResourceGroupName')]"
                    },
                    "ALZMonitorResourceGroupLocation": {
                      "value": "[parameters('ALZMonitorResourceGroupLocation')]"
                    },
                    "ALZMonitorResourceGroupTags": {
                      "value": "[parameters('ALZMonitorResourceGroupTags')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "ALZMonitorResourceGroupName": {
                        "type": "string"
                      },
                      "ALZMonitorResourceGroupLocation": {
                        "type": "string"
                      },
                      "ALZMonitorResourceGroupTags": {
                        "type": "object"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('ALZMonitorResourceGroupLocation')]",
                        "name": "[parameters('ALZMonitorResourceGroupName')]",
                        "tags": "[parameters('ALZMonitorResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('ALZMonitorResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "ALZMonitorResourceGroupName": {
                              "value": "[parameters('ALZMonitorResourceGroupName')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "ALZMonitorResourceGroupName": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.AlertsManagement/actionRules",
                                "properties": {
                                  "description": "AMBA Notification Assets - Suppression Alert Processing Rule for maintenance period for Subscription",
                                  "enabled": false,
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "actions": [
                                    {
                                      "actionType": "RemoveAllActionGroups"
                                    }
                                  ]
                                },
                                "apiVersion": "2021-08-08",
                                "location": "Global",
                                "name": "[concat('apr-AMBA-',subscription().displayName, '-002')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "dependsOn": []
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "SuppressionRuleDeployment",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('ALZMonitorResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('ALZMonitorResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_Suppression_AlertProcessing_Rule",
        "displayName": "Deploy AMBA Notification Suppression Asset"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERGw_ExpressRouteCpuUtil_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy ER Gateway Express Route CPU Utilization Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERGw_ExpressRouteCpuUtil_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "80",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/expressroutegateways",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/expressroutegateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "ExpressRouteGatewayCpuUtilization",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/expressroutegateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-ExpressRouteGatewayCpuUtilization-threshold-Override_'), field('tags._amba-ExpressRouteGatewayCpuUtilization-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-ExpressRouteGatewayCpuUtilization-threshold-Override_'), field('tags._amba-ExpressRouteGatewayCpuUtilization-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for ER Gateway Express Route CPU Utilization",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "ExpressRouteGatewayCpuUtilization",
                                "metricNamespace": "Microsoft.Network/expressroutegateways",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "ExpressRouteGatewayCpuUtilization"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-GatewayERCPUAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_ERGw_ExpressRouteCpuUtil_Alert",
        "displayName": "Deploy ERG ExpressRoute CPU Utilization Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PDNSZ_CapacityUtil_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Private DNS Zone Capacity Utilization Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PDNSZ_CapacityUtil_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1H",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT1H",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "80",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/privateDnsZones",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/privateDnsZones",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "VirtualNetworkLinkCapacityUtilization",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/privateDnsZones/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Maximum",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThanOrEqual",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-VirtualNetworkLinkCapacityUtilization-threshold-Override_'), field('tags._amba-VirtualNetworkLinkCapacityUtilization-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-VirtualNetworkLinkCapacityUtilization-threshold-Override_'), field('tags._amba-VirtualNetworkLinkCapacityUtilization-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Private DNS Zone Virtual Network Link Capacity Utilization",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Maximum",
                                "operator": "GreaterThanOrEqual",
                                "name": "VirtualNetworkLinkCapacityUtilization",
                                "metricNamespace": "Microsoft.Network/privateDnsZones",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "VirtualNetworkLinkCapacityUtilization"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-CapacityUtilizationAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_PDNSZ_CapacityUtil_Alert",
        "displayName": "Deploy PDNSZ Capacity Utilization Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Capacity_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Key Vault",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy KeyVault Capacity Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Capacity_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "75",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "microsoft.keyvault/vaults",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "microsoft.keyvault/vaults",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "SaturationShoebox",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.keyvault/vaults/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-SaturationShoebox-threshold-Override_'), field('tags._amba-SaturationShoebox-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-SaturationShoebox-threshold-Override_'), field('tags._amba-SaturationShoebox-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for KeyVault Capacity",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "SaturationShoebox",
                                "metricNamespace": "microsoft.keyvault/vaults",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "SaturationShoebox"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-CapacityAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_KeyVault_Capacity_Alert",
        "displayName": "Deploy Key Vault Capacity Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Requests_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Key Vault",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy KeyVault Requests Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Requests_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "microsoft.keyvault/vaults",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "microsoft.keyvault/vaults",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "ServiceApiResult",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.keyvault/vaults/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator"
                  },
                  {
                    "equals": "Medium",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity"
                  },
                  {
                    "equals": 4,
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": 4,
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for KeyVault Requests",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": 4,
                                  "minFailingPeriodsToAlert": 4
                                },
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "ServiceApiResult",
                                "metricNamespace": "microsoft.keyvault/vaults",
                                "criterionType": "DynamicThresholdCriterion",
                                "metricName": "ServiceApiResult",
                                "alertSensitivity": "Medium"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-RequestsAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_KeyVault_Requests_Alert",
        "displayName": "Deploy Key Vault Requests Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_HeartBeat_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Hybrid Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM HeartBeat Alert for all VMs in the subscription",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_HeartBeat_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT6H",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "computersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Array of Computer to be monitored",
              "displayName": "Computers to be included to be monitored"
            },
            "type": "array"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.HybridCompute/machines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-HybridVMHeartBeatAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-Heartbeat-threshold-Override_\"); Heartbeat | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | summarize TimeGenerated=max(TimeGenerated) by Computer, _ResourceId | extend Duration = datetime_diff(\"minute\",now(),TimeGenerated) | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-Heartbeat-threshold-Override_\", tostring(tags.[\"_amba-Heartbeat-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where Duration > appliedThreshold | project TimeGenerated, Computer, _ResourceId, Duration', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "computersToInclude": {
                      "value": "[parameters('computersToInclude')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "computersToInclude": {
                        "type": "array"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine Heartbeat",
                                  "displayName": "[concat(subscription().displayName, '-HybridVMHeartBeatAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "computersToInclude": {
                                      "value": "[parameters('computersToInclude')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": "[parameters('computersToInclude')]"
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-Heartbeat-threshold-Override_\"); Heartbeat | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | summarize TimeGenerated=max(TimeGenerated) by Computer, _ResourceId | extend Duration = datetime_diff(\"minute\",now(),TimeGenerated) | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-Heartbeat-threshold-Override_\", tostring(tags.[\"_amba-Heartbeat-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where Duration > appliedThreshold | project TimeGenerated, Computer, _ResourceId, Duration', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.HybridCompute/machines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-HybridVMHeartBeatAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "HybridVMHeartBeatAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_Hybrid_VM_HeartBeat_Alert",
        "displayName": "Deploy Hybrid VM HeartBeat Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_TunnelEgressPacketDropMismatch_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VPN Gateway Egress Packet Drop Mismatch Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_TunnelEgressPacketDropMismatch_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "microsoft.network/vpngateways",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "microsoft.network/vpngateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "TunnelEgressPacketDropTSMismatch",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.network/vpngateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator"
                  },
                  {
                    "equals": "Medium",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for VPN Gateway tunnel TunnelEgressPacketDropTSMismatch",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "failingPeriods": {
                              "value": "[parameters('failingPeriods')]"
                            },
                            "evaluationPeriods": {
                              "value": "[parameters('evaluationPeriods')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                  "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                },
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "TunnelEgressPacketDropTSMismatch",
                                "metricNamespace": "microsoft.network/vpngateways",
                                "criterionType": "DynamicThresholdCriterion",
                                "metricName": "TunnelEgressPacketDropTSMismatch",
                                "alertSensitivity": "Medium"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-TunnelEgressPacketDropTSMismatchAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_VPNGw_TunnelEgressPacketDropMismatch_Alert",
        "displayName": "Deploy VPNG Egress Packet Drop Mismatch Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_Firewall_Delete": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.1.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to Deploy Activity Log Azure Firewall Delete Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_Firewall_Delete",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/azureFirewalls",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/activityLogAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/ActivityLogAlerts/enabled"
                  },
                  {
                    "equals": 2,
                    "count": {
                      "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*]",
                      "where": {
                        "anyOf": [
                          {
                            "allOf": [
                              {
                                "equals": "category",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "Administrative",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "equals": "operationName",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "Microsoft.Network/azureFirewalls/delete",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "name": "ActivityAzureFirewallDelete",
              "deployment": {
                "properties": {
                  "parameters": {
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "string"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2020-10-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "microsoft.insights/activityLogAlerts",
                                "properties": {
                                  "description": "Activity Log Firewall Delete",
                                  "parameters": {
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    }
                                  },
                                  "enabled": "[parameters('enabled')]",
                                  "scopes": [
                                    "[subscription().id]"
                                  ],
                                  "condition": {
                                    "allOf": [
                                      {
                                        "equals": "Administrative",
                                        "field": "category"
                                      },
                                      {
                                        "equals": "Microsoft.Network/azurefirewalls/delete",
                                        "field": "operationName"
                                      },
                                      {
                                        "field": "status",
                                        "containsAny": [
                                          "succeeded"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "apiVersion": "2020-10-01",
                                "location": "global",
                                "name": "ActivityAzureFirewallDelete",
                                "tags": {
                                  "_deployed_by_amba": true
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "ActivityAzureFirewallDelete",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_activitylog_Firewall_Delete",
        "displayName": "Deploy Activity Log Azure FireWall Delete Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Availability_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Key Vault",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy KeyVault Availability Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Availability_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "90",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "microsoft.keyvault/vaults",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "microsoft.keyvault/vaults",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "Availability",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.keyvault/vaults/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-Availability-threshold-Override_'), field('tags._amba-Availability-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-Availability-threshold-Override_'), field('tags._amba-Availability-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for KeyVault Availability",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "Availability",
                                "metricNamespace": "microsoft.keyvault/vaults",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "Availability"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-Availability')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_KeyVault_Availability_Alert",
        "displayName": "Deploy Key Vault Availability Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VNET_DDoSAttack_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Virtual Network DDoS Attack Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VNET_DDoSAttack_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "0",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/virtualNetworks",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/virtualNetworks",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "ifunderddosattack",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Maximum",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-ifunderddosattack-threshold-Override_'), field('tags._amba-ifunderddosattack-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-ifunderddosattack-threshold-Override_'), field('tags._amba-ifunderddosattack-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for VNet DDOS Attack",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Maximum",
                                "operator": "GreaterThan",
                                "name": "ifunderddosattack",
                                "metricNamespace": "Microsoft.Network/virtualNetworks",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "ifunderddosattack"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-DDOSAttackAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_VNET_DDoSAttack_Alert",
        "displayName": "Deploy VNet DDoS Attack Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_LAWorkspace_DailyCapLimitReached_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.1.0",
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy LA Workspace Daily Cap Limit Reached Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_LAWorkspace_DailyCapLimitReached_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT10M",
              "PT15M",
              "PT30M",
              "PT45M",
              "PT1H",
              "PT2H",
              "PT3H",
              "PT4H",
              "PT5H",
              "PT6H",
              "P1D"
            ],
            "defaultValue": "PT1H",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT10M",
              "PT15M",
              "PT30M",
              "PT45M",
              "PT1H",
              "PT2H",
              "PT3H",
              "PT4H",
              "PT5H",
              "PT6H",
              "P1D"
            ],
            "defaultValue": "P1D",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "0",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan",
              "GreaterThanOrEqual"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.OperationalInsights/workspaces",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationalInsights/workspaces/', field('fullName'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('threshold')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].threshold"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.OperationalInsights/workspaces\" | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\") | project customerId = tostring(properties.customerId)); let workspaceResources = (arg(\"\").resources | where type =~ \"Microsoft.OperationalInsights/workspaces\" | project id, customerId = tostring(properties.customerId), workspaceName = tostring(name)); Operation | where TenantId !in~ (excludedResources) | where OperationCategory == \"Data Collection Status\" | where Detail has_any(\"RespectQuota\", \"OverQuota\") | summarize arg_max(TimeGenerated, *) by TenantId | where Detail has \"OverQuota\" | join hint.remote=left kind=inner workspaceResources on $left.TenantId == $right.customerId | project TimeGenerated, id, workspaceName, workspaceId = TenantId, Detail', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceLocation": {
                      "value": "[field('location')]"
                    },
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceLocation": {
                        "metadata": {
                          "description": "Location of the resource",
                          "displayName": "resourceLocation"
                        },
                        "type": "String"
                      },
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/scheduledQueryRules",
                        "properties": {
                          "description": "Log Alert for Daily Cap Limit Reached",
                          "displayName": "[concat(parameters('resourceName'), '-DailyCapLimitReachedAlert')]",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "MonitorDisableTagValues": {
                              "value": "[parameters('MonitorDisableTagValues')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "MonitorDisableTagName": {
                              "value": "[parameters('MonitorDisableTagName')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            },
                            "failingPeriods": {
                              "value": "[parameters('failingPeriods')]"
                            },
                            "evaluationPeriods": {
                              "value": "[parameters('evaluationPeriods')]"
                            },
                            "timeAggregation": {
                              "value": "[parameters('timeAggregation')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            },
                            "operator": {
                              "value": "[parameters('operator')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                  "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                },
                                "timeAggregation": "[parameters('timeAggregation')]",
                                "operator": "[parameters('operator')]",
                                "resourceIdColumn": "id",
                                "dimensions": [
                                  {
                                    "operator": "Include",
                                    "name": "workspaceName",
                                    "values": [
                                      "*"
                                    ]
                                  }
                                ],
                                "query": "[format('let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.OperationalInsights/workspaces\" | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\") | project customerId = tostring(properties.customerId)); let workspaceResources = (arg(\"\").resources | where type =~ \"Microsoft.OperationalInsights/workspaces\" | project id, customerId = tostring(properties.customerId), workspaceName = tostring(name)); Operation | where TenantId !in~ (excludedResources) | where OperationCategory == \"Data Collection Status\" | where Detail has_any(\"RespectQuota\", \"OverQuota\") | summarize arg_max(TimeGenerated, *) by TenantId | where Detail has \"OverQuota\" | join hint.remote=left kind=inner workspaceResources on $left.TenantId == $right.customerId | project TimeGenerated, id, workspaceName, workspaceId = TenantId, Detail', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'))]"
                              }
                            ]
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2022-08-01-preview",
                        "location": "[parameters('resourceLocation')]",
                        "name": "[concat(parameters('resourceName'), '-DailyCapLimitReachedAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        },
                        "identity": {
                          "type": "UserAssigned",
                          "userAssignedIdentities": {
                            "[parameters('UAMIResourceId')]": {}
                          }
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_LAWorkspace_DailyCapLimitReached_Alert",
        "displayName": "Deploy LA Workspace Daily Cap Limit Reached Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_LAWorkspace_Delete": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.1.0",
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to Deploy Activity Log LA Workspace Delete Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_LAWorkspace_Delete",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_amba": true
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.OperationalInsights/workspaces",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/activityLogAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/ActivityLogAlerts/enabled"
                  },
                  {
                    "equals": 2,
                    "count": {
                      "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*]",
                      "where": {
                        "anyOf": [
                          {
                            "allOf": [
                              {
                                "equals": "category",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "Administrative",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "equals": "operationName",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "Microsoft.OperationalInsights/workspaces/delete",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "name": "ActivityLAWorkspaceDelete",
              "deployment": {
                "properties": {
                  "parameters": {
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "string"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "microsoft.insights/activityLogAlerts",
                                "properties": {
                                  "description": "Activity Log LA Workspace Delete",
                                  "parameters": {
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    }
                                  },
                                  "enabled": "[parameters('enabled')]",
                                  "scopes": [
                                    "[subscription().id]"
                                  ],
                                  "condition": {
                                    "allOf": [
                                      {
                                        "equals": "Administrative",
                                        "field": "category"
                                      },
                                      {
                                        "equals": "Microsoft.OperationalInsights/workspaces/delete",
                                        "field": "operationName"
                                      },
                                      {
                                        "field": "status",
                                        "containsAny": [
                                          "succeeded"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "apiVersion": "2020-10-01",
                                "location": "global",
                                "name": "ActivityLAWorkspaceDelete",
                                "tags": {
                                  "_deployed_by_amba": true
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "ActivityLAWorkspaceDelete",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourcegroup"
            }
          }
        },
        "name": "Deploy_activitylog_LAWorkspace_Delete",
        "displayName": "Deploy Activity Log LA Workspace Delete Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_OSDiskreadLatency_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Hybrid Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM OSDiskreadLatency Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_OSDiskreadLatency_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "30",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "computersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Array of Computer to be monitored",
              "displayName": "Computers to be included to be monitored"
            },
            "type": "array"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.HybridCompute/machines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-HybridVMHighOSDiskReadLatencyAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-ReadLatencyMs-OS-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"ReadLatencyMs\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk in (\"C:\",\"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-ReadLatencyMs-OS-threshold-Override_\", tostring(tags.[\"_amba-ReadLatencyMs-OS-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "computersToInclude": {
                      "value": "[parameters('computersToInclude')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "computersToInclude": {
                        "type": "array"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine OSDiskreadLatency",
                                  "displayName": "[concat(subscription().displayName, '-HybridVMHighOSDiskReadLatencyAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "computersToInclude": {
                                      "value": "[parameters('computersToInclude')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": "[parameters('computersToInclude')]"
                                          },
                                          {
                                            "operator": "Include",
                                            "name": "Disk",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-ReadLatencyMs-OS-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"ReadLatencyMs\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk in (\"C:\",\"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-ReadLatencyMs-OS-threshold-Override_\", tostring(tags.[\"_amba-ReadLatencyMs-OS-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.HybridCompute/machines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-HybridVMHighOSDiskReadLatencyAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "HybridVMOSDiskreadLatencyAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_Hybrid_VM_OSDiskreadLatency_Alert",
        "displayName": "Deploy Hybrid VM OS Disk Read Latency Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelEgressPacketDropCount_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.4.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Vnet Gateway Egress Packet Drop Count Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelEgressPacketDropCount_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "microsoft.network/virtualNetworkGateways",
                "field": "type"
              },
              {
                "equals": "VPN",
                "field": "Microsoft.Network/virtualNetworkGateways/gatewayType"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "microsoft.network/virtualNetworkGateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "TunnelEgressPacketDropCount",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.network/virtualNetworkGateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator"
                  },
                  {
                    "equals": "Medium",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Vnet Gateway tunnel TunnelEgressPacketDropCount",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "failingPeriods": {
                              "value": "[parameters('failingPeriods')]"
                            },
                            "evaluationPeriods": {
                              "value": "[parameters('evaluationPeriods')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                  "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                },
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "TunnelEgressPacketDropCount",
                                "metricNamespace": "microsoft.network/virtualNetworkGateways",
                                "criterionType": "DynamicThresholdCriterion",
                                "metricName": "TunnelEgressPacketDropCount",
                                "alertSensitivity": "Medium"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-TunnelEgressPacketDropCountAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_VnetGw_TunnelEgressPacketDropCount_Alert",
        "displayName": "Deploy VNetG Egress Packet Drop Count Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_dataDiskSpace_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.5.0",
          "category": "Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM data Disk Space Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_dataDiskSpace_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "computersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Array of Computer to be monitored",
              "displayName": "Computers to be included to be monitored"
            },
            "type": "array"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Compute/virtualMachines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-VMLowDataDiskSpaceAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-FreeSpacePercentage-Data-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | where _ResourceId !in~ (excludedVMSSNodes) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"FreeSpacePercentage\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk !in (\"C:\", \"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-FreeSpacePercentage-Data-threshold-Override_\", tostring(tags.[\"_amba-FreeSpacePercentage-Data-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue < appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "computersToInclude": {
                      "value": "[parameters('computersToInclude')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "computersToInclude": {
                        "type": "array"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine dataDiskSpace",
                                  "displayName": "[concat(subscription().displayName, '-VMLowDataDiskSpaceAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "computersToInclude": {
                                      "value": "[parameters('computersToInclude')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": "[parameters('computersToInclude')]"
                                          },
                                          {
                                            "operator": "Include",
                                            "name": "Disk",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-FreeSpacePercentage-Data-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | where _ResourceId !in~ (excludedVMSSNodes) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"FreeSpacePercentage\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk !in (\"C:\", \"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-FreeSpacePercentage-Data-threshold-Override_\", tostring(tags.[\"_amba-FreeSpacePercentage-Data-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue < appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.Compute/virtualMachines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-VMLowDataDiskSpaceAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "VMdataDiskSpaceAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_VM_dataDiskSpace_Alert",
        "displayName": "Deploy VM Data Disk Space Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_Memory_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.5.0",
          "category": "Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM Memory Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_Memory_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Compute/virtualMachines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-VMLowMemoryAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-AvailableMemoryPercentage-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | where _ResourceId !in~ (excludedVMSSNodes) | where Origin == \"vm.azm.ms\" | where Namespace == \"Memory\" and Name == \"AvailableMB\" | extend TotalMemory = toreal(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) | extend AvailableMemoryPercentage = (toreal(Val) / TotalMemory) * 100.0 | summarize AggregatedValue = avg(AvailableMemoryPercentage) by bin(TimeGenerated, 15m), Computer, _ResourceId | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-AvailableMemoryPercentage-threshold-Override_\", tostring(tags.[\"_amba-AvailableMemoryPercentage-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue < appliedThreshold | project TimeGenerated, Computer, _ResourceId, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine Memory",
                                  "displayName": "[concat(subscription().displayName, '-VMLowMemoryAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-AvailableMemoryPercentage-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | where _ResourceId !in~ (excludedVMSSNodes) | where Origin == \"vm.azm.ms\" | where Namespace == \"Memory\" and Name == \"AvailableMB\" | extend TotalMemory = toreal(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) | extend AvailableMemoryPercentage = (toreal(Val) / TotalMemory) * 100.0 | summarize AggregatedValue = avg(AvailableMemoryPercentage) by bin(TimeGenerated, 15m), Computer, _ResourceId | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-AvailableMemoryPercentage-threshold-Override_\", tostring(tags.[\"_amba-AvailableMemoryPercentage-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue < appliedThreshold | project TimeGenerated, Computer, _ResourceId, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.Compute/virtualMachines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-VMLowMemoryAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "VMMemoryAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_VM_Memory_Alert",
        "displayName": "Deploy VM Memory Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_LAWorkspace_KeyRegen": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.1.0",
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to Deploy Activity Log LA Workspace Regenerate Key Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_LAWorkspace_KeyRegen",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.OperationalInsights/workspaces",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/activityLogAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/ActivityLogAlerts/enabled"
                  },
                  {
                    "equals": 2,
                    "count": {
                      "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*]",
                      "where": {
                        "anyOf": [
                          {
                            "allOf": [
                              {
                                "equals": "category",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "Administrative",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "equals": "operationName",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "Microsoft.OperationalInsights/workspaces/regeneratesharedkey/action",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "name": "ActivityLAWorkspaceRegenKey",
              "deployment": {
                "properties": {
                  "parameters": {
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "string"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "microsoft.insights/activityLogAlerts",
                                "properties": {
                                  "description": "Activity Log LA Workspace Regenerate Key",
                                  "parameters": {
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    }
                                  },
                                  "enabled": "[parameters('enabled')]",
                                  "scopes": [
                                    "[subscription().id]"
                                  ],
                                  "condition": {
                                    "allOf": [
                                      {
                                        "equals": "Administrative",
                                        "field": "category"
                                      },
                                      {
                                        "equals": "Microsoft.OperationalInsights/workspaces/regeneratesharedkey/action",
                                        "field": "operationName"
                                      },
                                      {
                                        "field": "status",
                                        "containsAny": [
                                          "succeeded"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "apiVersion": "2020-10-01",
                                "location": "global",
                                "name": "ActivityLAWorkspaceRegenKey",
                                "tags": {
                                  "_deployed_by_amba": true
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "ActivityLAWorkspaceRegenKey",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_activitylog_LAWorkspace_KeyRegen",
        "displayName": "Deploy Activity Log LA Workspace Regenerate Key Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FrontDoorCDN_OriginLatency_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy FrontDoor CDN Profile Origin Latency Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FrontDoorCDN_OriginLatency_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Cdn/profiles",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Cdn/profiles",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "OriginLatency",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Cdn/profiles/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator"
                  },
                  {
                    "equals": "Medium",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Frontdoor CDN Origin Latency",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "failingPeriods": {
                              "value": "[parameters('failingPeriods')]"
                            },
                            "evaluationPeriods": {
                              "value": "[parameters('evaluationPeriods')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                  "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                },
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "ServiceApiResult",
                                "metricNamespace": "Microsoft.Cdn/profiles",
                                "criterionType": "DynamicThresholdCriterion",
                                "metricName": "OriginLatency",
                                "alertSensitivity": "Medium"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-OriginLatencyAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_FrontDoorCDN_OriginLatency_Alert",
        "displayName": "Deploy FrontDoor CDN Profile Origin Latency Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERP_ExpressRoutTxLightLevell_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.2.1",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy ER Direct TxLightLevel High Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERP_ExpressRoutTxLightLevell_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "0",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/expressRoutePorts",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/expressRoutePorts",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "TxLightLevel",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/expressRoutePorts/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-TxLightLevel-High-threshold-Override_'), field('tags._amba-TxLightLevel-High-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-TxLightLevel-High-threshold-Override_'), field('tags._amba-TxLightLevel-High-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for ER Direct Connection TxLightLevelHigh",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "TxLightLevel",
                                "metricNamespace": "Microsoft.Network/expressRoutePorts",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "TxLightLevel"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-DirectERTxLightLevelHighAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_ERP_ExpressRoutTxLightLevell_Alert",
        "displayName": "Deploy ER Direct ExpressRoute TxLightLevel High Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERCIR_QosDropBitsOutPerSecond_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy ExpressRoute Circuits QosDropBitsOutPerSecond Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERCIR_QosDropBitsOutPerSecond_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/expressRouteCircuits",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/expressRouteCircuits",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "QosDropBitsOutPerSecond",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/expressRouteCircuits/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator"
                  },
                  {
                    "equals": "Medium",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for ExpressRoute Circuit QosDropBitsOutPerSecond",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "failingPeriods": {
                              "value": "[parameters('failingPeriods')]"
                            },
                            "evaluationPeriods": {
                              "value": "[parameters('evaluationPeriods')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                  "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                },
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "QosDropBitsOutPerSecond",
                                "metricNamespace": "Microsoft.Network/expressRouteCircuits",
                                "criterionType": "DynamicThresholdCriterion",
                                "metricName": "QosDropBitsOutPerSecond",
                                "alertSensitivity": "Medium"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-QosDropBitsOutPerSecond')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_ERCIR_QosDropBitsOutPerSecond_Alert",
        "displayName": "Deploy ExpressRoute Circuits QosDropBitsOutPerSecond Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_BytesInDDoSAttack_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy PIP Bytes in DDoS Attack Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_BytesInDDoSAttack_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "4",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "8000000",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/publicIPAddresses",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/publicIPAddresses",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "bytesinddos",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/publicIPAddresses/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Maximum",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-bytesinddos-threshold-Override_'), field('tags._amba-bytesinddos-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-bytesinddos-threshold-Override_'), field('tags._amba-bytesinddos-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Public IP Address Bytes IN DDOS",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Maximum",
                                "operator": "GreaterThan",
                                "name": "bytesinddos",
                                "metricNamespace": "Microsoft.Network/publicIPAddresses",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "bytesinddos"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-BytesInDDOSAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_PublicIp_BytesInDDoSAttack_Alert",
        "displayName": "Deploy PIP Bytes in DDoS Attack Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERP_ExpressRoutRxLightLevel_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.2.0",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy ER Direct RxLightLevel High Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERP_ExpressRoutRxLightLevel_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "0",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/expressRoutePorts",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/expressRoutePorts",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "RxLightLevel",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/expressRoutePorts/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-RxLightLevel-High-threshold-Override_'), field('tags._amba-RxLightLevel-High-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-RxLightLevel-High-threshold-Override_'), field('tags._amba-RxLightLevel-High-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for ER Direct Connection RxLightLevelHigh",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "RxLightLevel",
                                "metricNamespace": "Microsoft.Network/expressRoutePorts",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "RxLightLevel"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-DirectERRxLightLevelHighAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_ERP_ExpressRoutRxLightLevel_Alert",
        "displayName": "Deploy ER Direct ExpressRoute RxLightLevel High Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ALB_UsedSNATPorts_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.2.1",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Azure Load Balancer Used SNAT Ports Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ALB_UsedSNATPorts_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "900",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/loadBalancers",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/loadBalancers",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "UsedSNATPorts",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-UsedSNATPorts-threshold-Override_'), field('tags._amba-UsedSNATPorts-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-UsedSNATPorts-threshold-Override_'), field('tags._amba-UsedSNATPorts-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for ALB Used SNAT Ports",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "UsedSNATPorts",
                                "metricNamespace": "Microsoft.Network/loadBalancers",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "UsedSNATPorts"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-ALBUsedSNATPorts')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_ALB_UsedSNATPorts_Alert",
        "displayName": "Deploy ALB Used SNAT Ports Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelEgressPacketDropMismatch_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.4.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Vnet Gateway Egress Packet Drop Mismatch Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelEgressPacketDropMismatch_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "microsoft.network/virtualNetworkGateways",
                "field": "type"
              },
              {
                "equals": "VPN",
                "field": "Microsoft.Network/virtualNetworkGateways/gatewayType"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "microsoft.network/virtualNetworkGateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "TunnelEgressPacketDropTSMismatch",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.network/virtualNetworkGateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator"
                  },
                  {
                    "equals": "Medium",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Vnet Gateway tunnel TunnelEgressPacketDropTSMismatch",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "failingPeriods": {
                              "value": "[parameters('failingPeriods')]"
                            },
                            "evaluationPeriods": {
                              "value": "[parameters('evaluationPeriods')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                  "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                },
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "TunnelEgressPacketDropTSMismatch",
                                "metricNamespace": "microsoft.network/virtualNetworkGateways",
                                "criterionType": "DynamicThresholdCriterion",
                                "metricName": "TunnelEgressPacketDropTSMismatch",
                                "alertSensitivity": "Medium"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-TunnelEgressPacketDropTSMismatchAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_VnetGw_TunnelEgressPacketDropMismatch_Alert",
        "displayName": "Deploy VNetG Egress Packet Drop Mismatch Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_NSG_Delete": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.1.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to Deploy Activity Log NSG Delete Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_NSG_Delete",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/networkSecurityGroups",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/activityLogAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/ActivityLogAlerts/enabled"
                  },
                  {
                    "equals": 2,
                    "count": {
                      "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*]",
                      "where": {
                        "anyOf": [
                          {
                            "allOf": [
                              {
                                "equals": "category",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "Administrative",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "equals": "operationName",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "Microsoft.Network/networkSecurityGroups/delete",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "name": "ActivityNSGDelete",
              "deployment": {
                "properties": {
                  "parameters": {
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "string"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "microsoft.insights/activityLogAlerts",
                                "properties": {
                                  "description": "Activity Log NSG Delete",
                                  "parameters": {
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    }
                                  },
                                  "enabled": "[parameters('enabled')]",
                                  "scopes": [
                                    "[subscription().id]"
                                  ],
                                  "condition": {
                                    "allOf": [
                                      {
                                        "equals": "Administrative",
                                        "field": "category"
                                      },
                                      {
                                        "equals": "Microsoft.Network/networkSecurityGroups/delete",
                                        "field": "operationName"
                                      },
                                      {
                                        "field": "status",
                                        "containsAny": [
                                          "succeeded"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "apiVersion": "2020-10-01",
                                "location": "global",
                                "name": "ActivityNSGDelete",
                                "tags": {
                                  "_deployed_by_amba": true
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "ActivityNSGDelete",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourcegroup"
            }
          }
        },
        "name": "Deploy_activitylog_NSG_Delete",
        "displayName": "Deploy Activity Log NSG Delete Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_WSF_CPUPercentage_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.2.1",
          "category": "Web Services",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy App Service Plan CPU Percentage  Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_WSF_CPUPercentage_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "90",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Web/serverfarms",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Web/serverfarms",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "CpuPercentage",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-CpuPercentage-threshold-Override_'), field('tags._amba-CpuPercentage-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-CpuPercentage-threshold-Override_'), field('tags._amba-CpuPercentage-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for App Service Plan CPU Percentage",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "CpuPercentage",
                                "metricNamespace": "Microsoft.Web/serverfarms",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "CpuPercentage"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-CpuPercentage')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_WSF_CPUPercentage_Alert",
        "displayName": "Deploy App Service Plan CPU Percentage Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_HeartBeat_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.5.0",
          "category": "Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM HeartBeat Alert for all VMs in the subscription",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_HeartBeat_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT6H",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "computersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Array of Computer to be monitored",
              "displayName": "Computers to be included to be monitored"
            },
            "type": "array"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Compute/virtualMachines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-VMHeartBeatAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-Heartbeat-threshold-Override_\"); Heartbeat | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | summarize TimeGenerated=max(TimeGenerated) by Computer, _ResourceId | extend Duration = datetime_diff(\"minute\",now(),TimeGenerated) | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-Heartbeat-threshold-Override_\", tostring(tags.[\"_amba-Heartbeat-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where Duration > appliedThreshold | project TimeGenerated, Computer, _ResourceId, Duration', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "computersToInclude": {
                      "value": "[parameters('computersToInclude')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "computersToInclude": {
                        "type": "array"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine Heartbeat",
                                  "displayName": "[concat(subscription().displayName, '-VMHeartBeatAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "computersToInclude": {
                                      "value": "[parameters('computersToInclude')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": "[parameters('computersToInclude')]"
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-Heartbeat-threshold-Override_\"); Heartbeat | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | summarize TimeGenerated=max(TimeGenerated) by Computer, _ResourceId | extend Duration = datetime_diff(\"minute\",now(),TimeGenerated) | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-Heartbeat-threshold-Override_\", tostring(tags.[\"_amba-Heartbeat-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where Duration > appliedThreshold | project TimeGenerated, Computer, _ResourceId, Duration', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.Compute/virtualMachines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-VMHeartBeatAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "HeartBeatAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_VM_HeartBeat_Alert",
        "displayName": "Deploy VM HeartBeat Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelIngress_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Virtual Network Gateway Tunnel Ingress Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelIngress_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/virtualNetworkGateways",
                "field": "type"
              },
              {
                "equals": "VPN",
                "field": "Microsoft.Network/virtualNetworkGateways/gatewayType"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/virtualNetworkGateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "TunnelIngressBytes",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworkGateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-TunnelIngressBytes-threshold-Override_'), field('tags._amba-TunnelIngressBytes-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-TunnelIngressBytes-threshold-Override_'), field('tags._amba-TunnelIngressBytes-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for VNet Gateway Tunnel ingress Bytes",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "TunnelIngressBytes",
                                "metricNamespace": "Microsoft.Network/virtualNetworkGateways",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "TunnelIngressBytes"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-TunnelIngressAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_VnetGw_TunnelIngress_Alert",
        "displayName": "Deploy VNetG Tunnel Ingress Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_ResponseStatus_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.3.1",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Azure Application Gateway ResponseStatus Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_ResponseStatus_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "alertSensitivity": {
            "allowedValues": [
              "Low",
              "Medium",
              "High"
            ],
            "defaultValue": "Medium",
            "metadata": {
              "description": "Alert Sensitivity for the alert",
              "displayName": "Alert Sensitivity"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/applicationgateways",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/applicationgateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "ResponseStatus",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/applicationgateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Total",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator"
                  },
                  {
                    "equals": "[parameters('alertSensitivity')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    },
                    "alertSensitivity": {
                      "value": "[parameters('alertSensitivity')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      },
                      "alertSensitivity": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for App Gateway ResponseStatus",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "failingPeriods": {
                              "value": "[parameters('failingPeriods')]"
                            },
                            "evaluationPeriods": {
                              "value": "[parameters('evaluationPeriods')]"
                            },
                            "alertSensitivity": {
                              "value": "[parameters('alertSensitivity')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                  "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                },
                                "timeAggregation": "Total",
                                "operator": "GreaterThan",
                                "name": "ResponseStatus",
                                "metricNamespace": "Microsoft.Network/applicationgateways",
                                "criterionType": "DynamicThresholdCriterion",
                                "metricName": "ResponseStatus",
                                "alertSensitivity": "[parameters('alertSensitivity')]",
                                "dimensions": [
                                  {
                                    "operator": "Include",
                                    "name": "HttpStatusGroup",
                                    "values": [
                                      "4xx",
                                      "5xx"
                                    ]
                                  }
                                ]
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-agResponseStatus')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_AG_ResponseStatus_Alert",
        "displayName": "Deploy AGW ResponseStatus Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERP_ExpressRouteBitsOut_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.2.1",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy ER Direct Connection BitsOutPerSecond Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERP_ExpressRouteBitsOut_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/expressRoutePorts",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/expressRoutePorts",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "PortBitsOutPerSecond",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/expressRoutePorts/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-PortBitsOutPerSecond-threshold-Override_'), field('tags._amba-PortBitsOutPerSecond-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-PortBitsOutPerSecond-threshold-Override_'), field('tags._amba-PortBitsOutPerSecond-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for ER Direct Connection BitsOutPerSecond",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "PortBitsOutPerSecond",
                                "metricNamespace": "Microsoft.Network/expressRoutePorts",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "PortBitsOutPerSecond"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-DirectERBitsOutAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_ERP_ExpressRouteBitsOut_Alert",
        "displayName": "Deploy ER Direct ExpressRoute Bits Out Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_NetworkIn_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Hybrid Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM Nework Read Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_NetworkIn_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "10000000",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "computersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Array of Computer to be monitored",
              "displayName": "Computers to be included to be monitored"
            },
            "type": "array"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.HybridCompute/machines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-HybridVMHighNetworkInAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-ReadBytesPerSecond-Data-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | where Origin == \"vm.azm.ms\" | where Namespace == \"Network\" and Name == \"ReadBytesPerSecond\" | extend NetworkInterface=tostring(todynamic(Tags)[\"vm.azm.ms/networkDeviceId\"]) | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, NetworkInterface | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-ReadBytesPerSecond-Data-threshold-Override_\", tostring(tags.[\"_amba-ReadBytesPerSecond-Data-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, NetworkInterface, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "computersToInclude": {
                      "value": "[parameters('computersToInclude')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "computersToInclude": {
                        "type": "array"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine NetworkIn",
                                  "displayName": "[concat(subscription().displayName, '-HybridVMHighNetworkInAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "computersToInclude": {
                                      "value": "[parameters('computersToInclude')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": "[parameters('computersToInclude')]"
                                          },
                                          {
                                            "operator": "Include",
                                            "name": "NetworkInterface",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-ReadBytesPerSecond-Data-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | where Origin == \"vm.azm.ms\" | where Namespace == \"Network\" and Name == \"ReadBytesPerSecond\" | extend NetworkInterface=tostring(todynamic(Tags)[\"vm.azm.ms/networkDeviceId\"]) | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, NetworkInterface | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-ReadBytesPerSecond-Data-threshold-Override_\", tostring(tags.[\"_amba-ReadBytesPerSecond-Data-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, NetworkInterface, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.HybridCompute/machines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-HybridVMHighNetworkInAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "HybridVMVMNetworkInAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_Hybrid_VM_NetworkIn_Alert",
        "displayName": "Deploy Hybrid VM Network Read Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_ServiceHealth_Incident": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to Deploy Service Health Incident Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_ServiceHealth_Incident",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_amba": true
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "ALZMonitorActionGroupEmail": {
            "defaultValue": [],
            "metadata": {
              "description": "Email addresses to send alerts to",
              "displayName": "Action Group Email Addresses"
            },
            "type": "Array"
          },
          "BYOActionGroup": {
            "defaultValue": [],
            "metadata": {
              "description": "The Resource IDs of existing Action Groups currently deployed in the environment.",
              "displayName": "Customer defined Action Group Resource IDs"
            },
            "type": "array"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Resources/subscriptions",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/activityLogAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/ActivityLogAlerts/enabled"
                  },
                  {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "value": "[empty(parameters('BYOActionGroup'))]",
                            "equals": true
                          },
                          {
                            "field": "Microsoft.Insights/ActivityLogAlerts/actions.actionGroups[*].actionGroupId",
                            "contains": "ag-AMBA-SH-"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "value": "[empty(parameters('BYOActionGroup'))]",
                            "equals": false
                          },
                          {
                            "count": {
                              "field": "Microsoft.Insights/ActivityLogAlerts/actions.actionGroups[*]",
                              "where": {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Insights/ActivityLogAlerts/actions.actionGroups[*].actionGroupId",
                                    "in": "[parameters('BYOActionGroup')]"
                                  }
                                ]
                              }
                            },
                            "greaterOrEquals": 1
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "equals": 2,
                    "count": {
                      "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*]",
                      "where": {
                        "anyOf": [
                          {
                            "allOf": [
                              {
                                "equals": "category",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "ServiceHealth",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "equals": "properties.incidentType",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "Incident",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "ALZMonitorActionGroupEmail": {
                      "value": "[parameters('ALZMonitorActionGroupEmail')]"
                    },
                    "BYOActionGroup": {
                      "value": "[parameters('BYOActionGroup')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "string"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "ALZMonitorActionGroupEmail": {
                        "type": "Array"
                      },
                      "BYOActionGroup": {
                        "type": "array"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {
                      "copy": [
                        {
                          "name": "varActionGroupIds",
                          "mode": "serial",
                          "count": "[length(parameters('BYOActionGroup'))]",
                          "input": {
                            "actionGroupId": "[trim(parameters('BYOActionGroup')[copyIndex('varActionGroupIds')])]"
                          }
                        }
                      ]
                    },
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "ALZMonitorActionGroupEmail": {
                              "value": "[parameters('ALZMonitorActionGroupEmail')]"
                            },
                            "BYOActionGroup": {
                              "value": "[parameters('BYOActionGroup')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "ALZMonitorActionGroupEmail": {
                                "type": "Array"
                              },
                              "BYOActionGroup": {
                                "type": "array"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "microsoft.insights/activityLogAlerts",
                                "properties": {
                                  "description": "Service Health Incident Alert",
                                  "parameters": {
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    }
                                  },
                                  "enabled": "[parameters('enabled')]",
                                  "scopes": [
                                    "[subscription().id]"
                                  ],
                                  "condition": {
                                    "allOf": [
                                      {
                                        "equals": "ServiceHealth",
                                        "field": "category"
                                      },
                                      {
                                        "equals": "Incident",
                                        "field": "properties.incidentType"
                                      }
                                    ]
                                  },
                                  "actions": {
                                    "actionGroups": [
                                      {
                                        "actionGroupId": "[concat(subscription().Id, '/resourceGroups/', parameters('alertResourceGroupName'), '/providers/microsoft.insights/actionGroups/', 'ag-AMBA-SH-', subscription().displayName, '-001')]"
                                      }
                                    ]
                                  }
                                },
                                "apiVersion": "2020-10-01",
                                "location": "global",
                                "name": "ServiceHealthIncident",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "condition": "[empty(parameters('BYOActionGroup'))]"
                              },
                              {
                                "type": "microsoft.insights/activityLogAlerts",
                                "properties": {
                                  "description": "Service Health Incident Alert",
                                  "parameters": {
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    }
                                  },
                                  "enabled": "[parameters('enabled')]",
                                  "scopes": [
                                    "[subscription().id]"
                                  ],
                                  "condition": {
                                    "allOf": [
                                      {
                                        "equals": "ServiceHealth",
                                        "field": "category"
                                      },
                                      {
                                        "equals": "Incident",
                                        "field": "properties.incidentType"
                                      }
                                    ]
                                  },
                                  "actions": {
                                    "actionGroups": "[variables('varActionGroupIds')]"
                                  }
                                },
                                "apiVersion": "2020-10-01",
                                "location": "global",
                                "name": "ServiceHealthIncident",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "condition": "[not(empty(parameters('BYOActionGroup')))]"
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "ServiceHealthIncident",
                        "dependsOn": [
                          "[resourceId('Microsoft.Resources/resourceGroups', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourcegroup"
            }
          }
        },
        "name": "Deploy_activitylog_ServiceHealth_Incident",
        "displayName": "Deploy Service Health Incident Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ServiceHealth_ActionGroups": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.4.0",
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to deploy action group for Service Health alerts",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ServiceHealth_ActionGroups",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "ALZMonitorActionGroupEmail": {
            "defaultValue": [],
            "metadata": {
              "description": "Email addresses to send alerts to",
              "displayName": "Action Group Email Addresses"
            },
            "type": "Array"
          },
          "ALZMonitorResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "BYOActionGroup": {
            "defaultValue": [],
            "metadata": {
              "description": "The Resource IDs of existing Action Groups currently deployed in the environment.",
              "displayName": "Customer defined Action Group Resource IDs"
            },
            "type": "array"
          },
          "ALZMonitorResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "ALZMonitorResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_amba": true
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "BYOAlertProcessingRule": {
            "defaultValue": "",
            "metadata": {
              "description": "The Resource ID of an existing Alert Processing Rule already deployed by the customer in his environment",
              "displayName": "Customer defined Alert Processing Rule Resource ID"
            },
            "type": "String"
          },
          "ALZLogicappCallbackUrl": {
            "defaultValue": "",
            "metadata": {
              "description": "Callback URL that triggers the Logic App",
              "displayName": "Logic App Callback URL"
            },
            "type": "String"
          },
          "ALZFunctionTriggerUrl": {
            "defaultValue": "",
            "metadata": {
              "description": "URL that triggers the Function",
              "displayName": "Function Trigger URL"
            },
            "type": "String"
          },
          "ALZFunctionResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "Function Resource Id for Action Group to send alerts to",
              "displayName": "Function Resource Id"
            },
            "type": "String"
          },
          "ALZLogicappResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "Logic App Resource Id for Action Group to send alerts to",
              "displayName": "Logic App Resource Id"
            },
            "type": "String"
          },
          "ALZEventHubResourceId": {
            "defaultValue": [],
            "metadata": {
              "description": "Event Hub resource Ids for action group to send alerts to",
              "displayName": "Event Hub resource Ids"
            },
            "type": "array"
          },
          "ALZWebhookServiceUri": {
            "defaultValue": [],
            "metadata": {
              "description": "Indicates the service uri(s) of the webhook to send alerts to",
              "displayName": "Webhook Service Uri(s)"
            },
            "type": "Array"
          },
          "ALZArmRoleId": {
            "defaultValue": [],
            "metadata": {
              "description": "Arm Built-in Role Ids for action group to send alerts to",
              "displayName": "Arm Role Ids"
            },
            "type": "array"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Resources/subscriptions",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              },
              {
                "value": "[empty(parameters('BYOActionGroup'))]",
                "equals": "true"
              }
            ]
          },
          "then": {
            "effect": "deployIfNotExists",
            "details": {
              "type": "Microsoft.Insights/actionGroups",
              "existenceCondition": {
                "allOf": [
                  {
                    "value": "[empty(parameters('BYOActionGroup'))]",
                    "equals": true
                  },
                  {
                    "equals": "SH-ActGrp",
                    "field": "Microsoft.Insights/actionGroups/groupShortName"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "ALZMonitorActionGroupEmail": {
                      "value": "[parameters('ALZMonitorActionGroupEmail')]"
                    },
                    "ALZMonitorResourceGroupName": {
                      "value": "[parameters('ALZMonitorResourceGroupName')]"
                    },
                    "BYOActionGroup": {
                      "value": "[parameters('BYOActionGroup')]"
                    },
                    "ALZMonitorResourceGroupLocation": {
                      "value": "[parameters('ALZMonitorResourceGroupLocation')]"
                    },
                    "ALZMonitorResourceGroupTags": {
                      "value": "[parameters('ALZMonitorResourceGroupTags')]"
                    },
                    "BYOAlertProcessingRule": {
                      "value": "[parameters('BYOAlertProcessingRule')]"
                    },
                    "ALZLogicappCallbackUrl": {
                      "value": "[parameters('ALZLogicappCallbackUrl')]"
                    },
                    "ALZFunctionTriggerUrl": {
                      "value": "[parameters('ALZFunctionTriggerUrl')]"
                    },
                    "ALZFunctionResourceId": {
                      "value": "[parameters('ALZFunctionResourceId')]"
                    },
                    "ALZLogicappResourceId": {
                      "value": "[parameters('ALZLogicappResourceId')]"
                    },
                    "ALZEventHubResourceId": {
                      "value": "[parameters('ALZEventHubResourceId')]"
                    },
                    "ALZWebhookServiceUri": {
                      "value": "[parameters('ALZWebhookServiceUri')]"
                    },
                    "ALZArmRoleId": {
                      "value": "[parameters('ALZArmRoleId')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "ALZMonitorActionGroupEmail": {
                        "type": "Array"
                      },
                      "ALZMonitorResourceGroupName": {
                        "type": "string"
                      },
                      "BYOActionGroup": {
                        "type": "array"
                      },
                      "ALZMonitorResourceGroupLocation": {
                        "type": "string"
                      },
                      "ALZMonitorResourceGroupTags": {
                        "type": "object"
                      },
                      "BYOAlertProcessingRule": {
                        "type": "String"
                      },
                      "ALZLogicappCallbackUrl": {
                        "type": "String"
                      },
                      "ALZFunctionTriggerUrl": {
                        "type": "String"
                      },
                      "ALZFunctionResourceId": {
                        "type": "string"
                      },
                      "ALZLogicappResourceId": {
                        "type": "string"
                      },
                      "ALZEventHubResourceId": {
                        "type": "array"
                      },
                      "ALZWebhookServiceUri": {
                        "type": "Array"
                      },
                      "ALZArmRoleId": {
                        "type": "array"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {
                      "varAzureFunctionReceivers": [
                        {
                          "name": "AlzFa-0",
                          "useCommonAlertSchema": true,
                          "functionAppResourceId": "[if(empty(parameters('ALZFunctionResourceId')), null(), split(trim(parameters('ALZFunctionResourceId')),'/functions/')[0])]",
                          "httpTriggerUrl": "[if(empty(parameters('ALZFunctionTriggerUrl')), null(), trim(parameters('ALZFunctionTriggerUrl')))]",
                          "functionName": "[if(empty(parameters('ALZFunctionResourceId')), null(), split(trim(parameters('ALZFunctionResourceId')),'/')[10])]"
                        }
                      ],
                      "copy": [
                        {
                          "name": "varEmailReceivers",
                          "mode": "serial",
                          "count": "[length(parameters('ALZMonitorActionGroupEmail'))]",
                          "input": {
                            "name": "[concat('AlzMail-', indexOf(parameters('ALZMonitorActionGroupEmail'), parameters('ALZMonitorActionGroupEmail')[copyIndex('varEmailReceivers')]))]",
                            "useCommonAlertSchema": true,
                            "emailAddress": "[trim(parameters('ALZMonitorActionGroupEmail')[copyIndex('varEmailReceivers')])]"
                          }
                        },
                        {
                          "name": "varArmRoleReceivers",
                          "mode": "serial",
                          "count": "[length(parameters('ALZArmRoleId'))]",
                          "input": {
                            "name": "[concat('AlzARM-', indexOf(parameters('ALZArmRoleId'), parameters('ALZArmRoleId')[copyIndex('varArmRoleReceivers')]))]",
                            "useCommonAlertSchema": true,
                            "roleId": "[trim(parameters('ALZArmRoleId')[copyIndex('varArmRoleReceivers')])]"
                          }
                        },
                        {
                          "name": "varEventHubReceivers",
                          "mode": "serial",
                          "count": "[length(parameters('ALZEventHubResourceId'))]",
                          "input": {
                            "tenantId": "[subscription().tenantId]",
                            "subscriptionId": "[if(empty(parameters('ALZEventHubResourceId')), null(), split(trim(parameters('ALZEventHubResourceId')[copyIndex('varEventHubReceivers')]),'/')[2])]",
                            "name": "[concat('AlzEH-', indexOf(parameters('ALZEventHubResourceId'), parameters('ALZEventHubResourceId')[copyIndex('varEventHubReceivers')]))]",
                            "useCommonAlertSchema": true,
                            "eventHubNameSpace": "[if(empty(parameters('ALZEventHubResourceId')), null(), split(trim(parameters('ALZEventHubResourceId')[copyIndex('varEventHubReceivers')]),'/')[8])]",
                            "eventHubName": "[if(empty(parameters('ALZEventHubResourceId')), null(), split(trim(parameters('ALZEventHubResourceId')[copyIndex('varEventHubReceivers')]),'/')[10])]"
                          }
                        },
                        {
                          "name": "varWebhookReceivers",
                          "mode": "serial",
                          "count": "[length(parameters('ALZWebhookServiceUri'))]",
                          "input": {
                            "tenantId": "null()",
                            "name": "[concat('AlzWh-', indexOf(parameters('ALZWebhookServiceUri'), parameters('ALZWebhookServiceUri')[copyIndex('varWebhookReceivers')]))]",
                            "useCommonAlertSchema": true,
                            "identifierUri": "null()",
                            "serviceUri": "[trim(parameters('ALZWebhookServiceUri')[copyIndex('varWebhookReceivers')])]",
                            "useAadAuth": "false",
                            "objectId": "null()"
                          }
                        }
                      ],
                      "varLogicAppReceivers": [
                        {
                          "resourceId": "[if(empty(parameters('ALZLogicappResourceId')), null(), trim(parameters('ALZLogicappResourceId')))]",
                          "name": "AlzLA-0",
                          "useCommonAlertSchema": true,
                          "callbackUrl": "[if(empty(parameters('ALZLogicappCallbackUrl')), null(), trim(parameters('ALZLogicappCallbackUrl')))]"
                        }
                      ]
                    },
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('ALZMonitorResourceGroupLocation')]",
                        "name": "[parameters('ALZMonitorResourceGroupName')]",
                        "tags": "[parameters('ALZMonitorResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('ALZMonitorResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "ALZMonitorActionGroupEmail": {
                              "value": "[parameters('ALZMonitorActionGroupEmail')]"
                            },
                            "ALZMonitorResourceGroupName": {
                              "value": "[parameters('ALZMonitorResourceGroupName')]"
                            },
                            "BYOActionGroup": {
                              "value": "[parameters('BYOActionGroup')]"
                            },
                            "BYOAlertProcessingRule": {
                              "value": "[parameters('BYOAlertProcessingRule')]"
                            },
                            "ALZLogicappCallbackUrl": {
                              "value": "[parameters('ALZLogicappCallbackUrl')]"
                            },
                            "ALZFunctionTriggerUrl": {
                              "value": "[parameters('ALZFunctionTriggerUrl')]"
                            },
                            "ALZFunctionResourceId": {
                              "value": "[parameters('ALZFunctionResourceId')]"
                            },
                            "ALZLogicappResourceId": {
                              "value": "[parameters('ALZLogicappResourceId')]"
                            },
                            "ALZEventHubResourceId": {
                              "value": "[parameters('ALZEventHubResourceId')]"
                            },
                            "ALZWebhookServiceUri": {
                              "value": "[parameters('ALZWebhookServiceUri')]"
                            },
                            "ALZArmRoleId": {
                              "value": "[parameters('ALZArmRoleId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "ALZMonitorActionGroupEmail": {
                                "type": "Array"
                              },
                              "ALZMonitorResourceGroupName": {
                                "type": "string"
                              },
                              "BYOActionGroup": {
                                "type": "array"
                              },
                              "BYOAlertProcessingRule": {
                                "type": "String"
                              },
                              "ALZLogicappCallbackUrl": {
                                "type": "string"
                              },
                              "ALZFunctionTriggerUrl": {
                                "type": "string"
                              },
                              "ALZFunctionResourceId": {
                                "type": "string"
                              },
                              "ALZLogicappResourceId": {
                                "type": "string"
                              },
                              "ALZEventHubResourceId": {
                                "type": "array"
                              },
                              "ALZWebhookServiceUri": {
                                "type": "Array"
                              },
                              "ALZArmRoleId": {
                                "type": "array"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/actionGroups",
                                "properties": {
                                  "enabled": true,
                                  "azureFunctionReceivers": "[if(empty(parameters('ALZFunctionResourceId')), null(), variables('varAzureFunctionReceivers'))]",
                                  "eventHubReceivers": "[if(empty(parameters('ALZEventHubResourceId')), null(), variables('varEventHubReceivers'))]",
                                  "logicAppReceivers": "[if(empty(parameters('ALZLogicappResourceId')), null(), variables('varLogicAppReceivers'))]",
                                  "webhookReceivers": "[if(empty(parameters('ALZWebhookServiceUri')), null(), variables('varWebhookReceivers'))]",
                                  "armRoleReceivers": "[if(empty(parameters('ALZArmRoleId')), null(), variables('varArmRoleReceivers'))]",
                                  "emailReceivers": "[if(empty(parameters('ALZMonitorActionGroupEmail')), null(), variables('varEmailReceivers'))]",
                                  "groupShortName": "SH-ActGrp"
                                },
                                "apiVersion": "2023-01-01",
                                "location": "Global",
                                "name": "[concat('ag-AMBA-SH-', subscription().displayName, '-001')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "condition": "[empty(parameters('BYOActionGroup'))]"
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "SH-ActionGroupDeployment",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('ALZMonitorResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('ALZMonitorResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_ServiceHealth_ActionGroups",
        "displayName": "Deploy Service Health Action Group"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_StorageAccount_Delete": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to Deploy Activity Log Storage Account Delete Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_StorageAccount_Delete",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring on resource. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_amba": true
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Storage/storageAccounts",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/activityLogAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/ActivityLogAlerts/enabled"
                  },
                  {
                    "equals": 2,
                    "count": {
                      "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*]",
                      "where": {
                        "anyOf": [
                          {
                            "allOf": [
                              {
                                "equals": "category",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "Administrative",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "equals": "operationName",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "Microsoft.Storage/storageAccounts/delete",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "name": "Activity Log Storage Account Delete",
              "deployment": {
                "properties": {
                  "parameters": {
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "string"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "microsoft.insights/activityLogAlerts",
                                "properties": {
                                  "description": "Activity Log Storage Account Delete",
                                  "parameters": {
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    }
                                  },
                                  "enabled": "[parameters('enabled')]",
                                  "scopes": [
                                    "[subscription().id]"
                                  ],
                                  "condition": {
                                    "allOf": [
                                      {
                                        "equals": "Administrative",
                                        "field": "category"
                                      },
                                      {
                                        "equals": "Microsoft.Storage/storageAccounts/delete",
                                        "field": "operationName"
                                      },
                                      {
                                        "field": "status",
                                        "containsAny": [
                                          "succeeded"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "apiVersion": "2020-10-01",
                                "location": "global",
                                "name": "Activity Log Storage Account Delete",
                                "tags": {
                                  "_deployed_by_amba": true
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "ActivitySADelete",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourcegroup"
            }
          }
        },
        "name": "Deploy_activitylog_StorageAccount_Delete",
        "displayName": "Deploy Activity Log Storage Account Delete Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_dataDiskWriteLatency_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.5.0",
          "category": "Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM dataDiskWriteLatency Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_dataDiskWriteLatency_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "30",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "computersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Array of Computer to be monitored",
              "displayName": "Computers to be included to be monitored"
            },
            "type": "array"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Compute/virtualMachines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-VMHighDataDiskWriteLatencyAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-WriteLatencyMs-Data-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | where _ResourceId !in~ (excludedVMSSNodes) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"WriteLatencyMs\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk !in (\"C:\",\"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-WriteLatencyMs-Data-threshold-Override_\", tostring(tags.[\"_amba-WriteLatencyMs-Data-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "computersToInclude": {
                      "value": "[parameters('computersToInclude')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "computersToInclude": {
                        "type": "array"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine dataDiskWriteLatency",
                                  "displayName": "[concat(subscription().displayName, '-VMHighDataDiskWriteLatencyAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "computersToInclude": {
                                      "value": "[parameters('computersToInclude')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": "[parameters('computersToInclude')]"
                                          },
                                          {
                                            "operator": "Include",
                                            "name": "Disk",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-WriteLatencyMs-Data-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | where _ResourceId !in~ (excludedVMSSNodes) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"WriteLatencyMs\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk !in (\"C:\",\"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-WriteLatencyMs-Data-threshold-Override_\", tostring(tags.[\"_amba-WriteLatencyMs-Data-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.Compute/virtualMachines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-VMHighDataDiskWriteLatencyAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "VMdataDiskWriteLatencyAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_VM_dataDiskWriteLatency_Alert",
        "displayName": "Deploy VM Data Disk Write Latency Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FrontDoorCDN_OriginHealthPercentage_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.2.2",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy FrontDoor Origin Health Percentage Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FrontDoorCDN_OriginHealthPercentage_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "90",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Cdn/profiles",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Cdn/profiles",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "OriginHealthPercentage",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Cdn/profiles/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-OriginHealthPercentage-threshold-Override_'), field('tags._amba-OriginHealthPercentage-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-OriginHealthPercentage-threshold-Override_'), field('tags._amba-OriginHealthPercentage-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Frontdoor Origin Health Percentage",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "OriginHealthPercentage",
                                "metricNamespace": "Microsoft.Cdn/profiles",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "OriginHealthPercentage"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-OriginHealthPercentage')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_FrontDoorCDN_OriginHealthPercentage_Alert",
        "displayName": "Deploy FrontDoor CDN Profile Origin Health Percentage Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_TunnelEgressPacketDropCount_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VPN Gateway Egress Packet Drop Count Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_TunnelEgressPacketDropCount_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "microsoft.network/vpngateways",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "microsoft.network/vpngateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "TunnelEgressPacketDropCount",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.network/vpngateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator"
                  },
                  {
                    "equals": "Medium",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for VPN Gateway tunnel TunnelEgressPacketDropCount",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "failingPeriods": {
                              "value": "[parameters('failingPeriods')]"
                            },
                            "evaluationPeriods": {
                              "value": "[parameters('evaluationPeriods')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                  "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                },
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "TunnelEgressPacketDropCount",
                                "metricNamespace": "microsoft.network/vpngateways",
                                "criterionType": "DynamicThresholdCriterion",
                                "metricName": "TunnelEgressPacketDropCount",
                                "alertSensitivity": "Medium"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-TunnelEgressPacketDropCountAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_VPNGw_TunnelEgressPacketDropCount_Alert",
        "displayName": "Deploy VPNG Egress Packet Drop Count Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ActivityLog_ManagedHSMs_Delete": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.0.0",
          "category": "Key Vault",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to Deploy Activity Log Managed HSMs Delete Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ActivityLog_ManagedHSMs_Delete",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_amba": true
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "microsoft.keyvault/managedHSMs",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/activityLogAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/ActivityLogAlerts/enabled"
                  },
                  {
                    "equals": 2,
                    "count": {
                      "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*]",
                      "where": {
                        "anyOf": [
                          {
                            "allOf": [
                              {
                                "equals": "category",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "Administrative",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "equals": "operationName",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "Microsoft.KeyVault/ManagedHSMs/delete",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "name": "ActivityManagedHSMDelete",
              "deployment": {
                "properties": {
                  "parameters": {
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "string"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "microsoft.insights/activityLogAlerts",
                                "properties": {
                                  "description": "Activity Log Managed HSM Delete",
                                  "parameters": {
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    }
                                  },
                                  "enabled": "[parameters('enabled')]",
                                  "scopes": [
                                    "[subscription().id]"
                                  ],
                                  "condition": {
                                    "allOf": [
                                      {
                                        "equals": "Administrative",
                                        "field": "category"
                                      },
                                      {
                                        "equals": "Microsoft.KeyVault/managedHSMs/delete",
                                        "field": "operationName"
                                      },
                                      {
                                        "field": "status",
                                        "containsAny": [
                                          "succeeded"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "apiVersion": "2020-10-01",
                                "location": "global",
                                "name": "ActivityManagedHSMDelete",
                                "tags": {
                                  "_deployed_by_amba": true
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "ActivityManagedHSMDelete",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourcegroup"
            }
          }
        },
        "name": "Deploy_ActivityLog_ManagedHSMs_Delete",
        "displayName": "Deploy Activity Log Managed HSMs Delete Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_CPU_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.5.0",
          "category": "Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM CPU Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_CPU_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "85",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Compute/virtualMachines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-VMHighCPUAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-UtilizationPercentage-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | where _ResourceId !in~ (excludedVMSSNodes) | where Origin == \"vm.azm.ms\" | where Namespace == \"Processor\" and Name == \"UtilizationPercentage\" | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-UtilizationPercentage-threshold-Override_\", tostring(tags.[\"_amba-UtilizationPercentage-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine CPU",
                                  "displayName": "[concat(subscription().displayName, '-VMHighCPUAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-UtilizationPercentage-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | where _ResourceId !in~ (excludedVMSSNodes) | where Origin == \"vm.azm.ms\" | where Namespace == \"Processor\" and Name == \"UtilizationPercentage\" | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-UtilizationPercentage-threshold-Override_\", tostring(tags.[\"_amba-UtilizationPercentage-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.Compute/virtualMachines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-VMHighCPUAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "VMCPUAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_VM_CPU_Alert",
        "displayName": "Deploy VM CPU Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERCIR_QosDropBitsInPerSecond_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy ExpressRoute Circuits QosDropBitsInPerSecond Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERCIR_QosDropBitsInPerSecond_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/expressRouteCircuits",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/expressRouteCircuits",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "QosDropBitsInPerSecond",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/expressRouteCircuits/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator"
                  },
                  {
                    "equals": "Medium",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for ExpressRoute Circuit QosDropBitsInPerSecond",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "failingPeriods": {
                              "value": "[parameters('failingPeriods')]"
                            },
                            "evaluationPeriods": {
                              "value": "[parameters('evaluationPeriods')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                  "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                },
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "QosDropBitsInPerSecond",
                                "metricNamespace": "Microsoft.Network/expressRouteCircuits",
                                "criterionType": "DynamicThresholdCriterion",
                                "metricName": "QosDropBitsInPerSecond",
                                "alertSensitivity": "Medium"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-QosDropBitsInPerSecond')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_ERCIR_QosDropBitsInPerSecond_Alert",
        "displayName": "Deploy ExpressRoute Circuits QosDropBitsInPerSecond Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_CapacityUnits_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.2.1",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Azure Application Gateway CapacityUnits Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_CapacityUnits_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "75",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/applicationgateways",
                "field": "type"
              },
              {
                "field": "Microsoft.Network/applicationgateways/sku.name",
                "In": [
                  "Standard_v2",
                  "WAF_v2"
                ]
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/applicationgateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "CapacityUnits",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/applicationgateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-CapacityUnits-threshold-Override_'), field('tags._amba-CapacityUnits-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-CapacityUnits-threshold-Override_'), field('tags._amba-CapacityUnits-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for App Gateway Capacity Units",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "CapacityUnits",
                                "metricNamespace": "Microsoft.Network/applicationgateways",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "CapacityUnits"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-agCapacityUnits')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_AG_CapacityUnits_Alert",
        "displayName": "Deploy AGW Capacity Units Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_TunnelIngressPacketDropMismatch_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VPN Gateway Ingress Packet Drop Mismatch Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_TunnelIngressPacketDropMismatch_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "microsoft.network/vpngateways",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "microsoft.network/vpngateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "TunnelIngressPacketDropTSMismatch",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.network/vpngateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator"
                  },
                  {
                    "equals": "Medium",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for VPN Gateway tunnel TunnelIngressPacketDropTSMismatch",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "failingPeriods": {
                              "value": "[parameters('failingPeriods')]"
                            },
                            "evaluationPeriods": {
                              "value": "[parameters('evaluationPeriods')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                  "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                },
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "TunnelIngressPacketDropTSMismatch",
                                "metricNamespace": "microsoft.network/vpngateways",
                                "criterionType": "DynamicThresholdCriterion",
                                "metricName": "TunnelIngressPacketDropTSMismatch",
                                "alertSensitivity": "Medium"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-TunnelIngressPacketDropTSMismatchAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_VPNGw_TunnelIngressPacketDropMismatch_Alert",
        "displayName": "Deploy VPNG Ingress Packet Drop Mismatch Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_NetworkOut_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Hybrid Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM Network Out Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_NetworkOut_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "10000000",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "computersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Array of Computer to be monitored",
              "displayName": "Computers to be included to be monitored"
            },
            "type": "array"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.HybridCompute/machines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-HybridVMHighNetworkOutAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-WriteBytesPerSecond-Data-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | where Origin == \"vm.azm.ms\" | where Namespace == \"Network\" and Name == \"WriteBytesPerSecond\" | extend NetworkInterface=tostring(todynamic(Tags)[\"vm.azm.ms/networkDeviceId\"]) | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, NetworkInterface | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-WriteBytesPerSecond-Data-threshold-Override_\", tostring(tags.[\"_amba-WriteBytesPerSecond-Data-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, NetworkInterface, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "computersToInclude": {
                      "value": "[parameters('computersToInclude')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "computersToInclude": {
                        "type": "array"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine NetworkOut",
                                  "displayName": "[concat(subscription().displayName, '-HybridVMHighNetworkOutAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "computersToInclude": {
                                      "value": "[parameters('computersToInclude')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": "[parameters('computersToInclude')]"
                                          },
                                          {
                                            "operator": "Include",
                                            "name": "NetworkInterface",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-WriteBytesPerSecond-Data-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | where Origin == \"vm.azm.ms\" | where Namespace == \"Network\" and Name == \"WriteBytesPerSecond\" | extend NetworkInterface=tostring(todynamic(Tags)[\"vm.azm.ms/networkDeviceId\"]) | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, NetworkInterface | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-WriteBytesPerSecond-Data-threshold-Override_\", tostring(tags.[\"_amba-WriteBytesPerSecond-Data-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, NetworkInterface, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.HybridCompute/machines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-HybridVMHighNetworkOutAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "HybridVMVMNetworkOutAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_Hybrid_VM_NetworkOut_Alert",
        "displayName": "Deploy Hybrid VM Network Write Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelEgress_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Virtual Network Gateway Tunnel Egress Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelEgress_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/virtualNetworkGateways",
                "field": "type"
              },
              {
                "equals": "VPN",
                "field": "Microsoft.Network/virtualNetworkGateways/gatewayType"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/virtualNetworkGateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "TunnelEgressBytes",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworkGateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-TunnelEgressBytes-threshold-Override_'), field('tags._amba-TunnelEgressBytes-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-TunnelEgressBytes-threshold-Override_'), field('tags._amba-TunnelEgressBytes-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for VNet Gateway Tunnel Egress Bytes",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "TunnelEgressBytes",
                                "metricNamespace": "Microsoft.Network/virtualNetworkGateways",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "TunnelEgressBytes"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-TunnelEgressAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_VnetGw_TunnelEgress_Alert",
        "displayName": "Deploy VNetG Tunnel Egress Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_Ingress_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VPN Gateway Ingress Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_Ingress_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "microsoft.network/vpngateways",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "microsoft.network/vpngateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "tunnelingressbytes",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.network/vpngateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-tunnelingressbytes-threshold-Override_'), field('tags._amba-tunnelingressbytes-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-tunnelingressbytes-threshold-Override_'), field('tags._amba-tunnelingressbytes-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for VPN Gateway tunnel ingress bytes",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "tunnelingressbytes",
                                "metricNamespace": "microsoft.network/vpngateways",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "tunnelingressbytes"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-TunnelIngressAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_VPNGw_Ingress_Alert",
        "displayName": "Deploy VPNG Ingress Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ALB_DataPathAvailability_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.2.1",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Azure Load Balancer Data Path Availability Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ALB_DataPathAvailability_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "90",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/loadBalancers",
                "field": "type"
              },
              {
                "field": "Microsoft.Network/loadBalancers/sku.name",
                "in": [
                  "Standard",
                  "Gateway"
                ]
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/loadBalancers",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "VipAvailability",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-VipAvailability-threshold-Override_'), field('tags._amba-VipAvailability-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-VipAvailability-threshold-Override_'), field('tags._amba-VipAvailability-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for ALB Data Path Availability",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "VipAvailability",
                                "metricNamespace": "Microsoft.Network/loadBalancers",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "VipAvailability"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-ALBDataPathAvailability')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_ALB_DataPathAvailability_Alert",
        "displayName": "Deploy ALB Data Path Availability Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_WSF_HttpQueueLength_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Web Services",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy App Service Plan Http Queue Length Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_WSF_HttpQueueLength_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Web/serverfarms",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Web/serverfarms",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "HttpQueueLength",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator"
                  },
                  {
                    "equals": "Medium",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for App Service Plan Http Queue Length",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "failingPeriods": {
                              "value": "[parameters('failingPeriods')]"
                            },
                            "evaluationPeriods": {
                              "value": "[parameters('evaluationPeriods')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                  "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                },
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "ServiceApiResult",
                                "metricNamespace": "Microsoft.Web/serverfarms",
                                "criterionType": "DynamicThresholdCriterion",
                                "metricName": "HttpQueueLength",
                                "alertSensitivity": "Medium"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-HttpQueueLengthAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_WSF_HttpQueueLength_Alert",
        "displayName": "Deploy App Service Plan Http Queue Length Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelIngressPacketDropCount_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.4.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Vnet Gateway Ingress Packet Drop Count Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelIngressPacketDropCount_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "microsoft.network/virtualNetworkGateways",
                "field": "type"
              },
              {
                "equals": "VPN",
                "field": "Microsoft.Network/virtualNetworkGateways/gatewayType"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "microsoft.network/virtualNetworkGateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "TunnelIngressPacketDropCount",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.network/virtualNetworkGateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator"
                  },
                  {
                    "equals": "Medium",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Vnet Gateway tunnel TunnelIngressPacketDropCount",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "failingPeriods": {
                              "value": "[parameters('failingPeriods')]"
                            },
                            "evaluationPeriods": {
                              "value": "[parameters('evaluationPeriods')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                  "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                },
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "TunnelIngressPacketDropCount",
                                "metricNamespace": "microsoft.network/virtualNetworkGateways",
                                "criterionType": "DynamicThresholdCriterion",
                                "metricName": "TunnelIngressPacketDropCount",
                                "alertSensitivity": "Medium"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-TunnelIngressPacketDropCountAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_VnetGw_TunnelIngressPacketDropCount_Alert",
        "displayName": "Deploy VNetG Ingress Packet Drop Count Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_RecoveryVault_BackupHealthMonitor_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.1.0",
          "category": "Site Recovery",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/update Recovery Vault Backup Health Alerting to Azure monitor alerts",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_RecoveryVault_BackupHealthMonitor_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "modify",
              "audit",
              "disabled"
            ],
            "defaultValue": "modify",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.RecoveryServices/Vaults",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              },
              {
                "field": "Microsoft.RecoveryServices/vaults/monitoringSettings.azureMonitorAlertSettings.alertsForAllJobFailures",
                "notEquals": "Enabled"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "conflictEffect": "audit",
              "operations": [
                {
                  "value": "Disabled",
                  "field": "Microsoft.RecoveryServices/vaults/monitoringSettings.classicAlertSettings.alertsForCriticalOperations",
                  "operation": "addOrReplace"
                },
                {
                  "value": "Enabled",
                  "field": "Microsoft.RecoveryServices/vaults/monitoringSettings.azureMonitorAlertSettings.alertsForAllJobFailures",
                  "operation": "addOrReplace"
                }
              ]
            }
          }
        },
        "name": "Deploy_RecoveryVault_BackupHealthMonitor_Alert",
        "displayName": "Deploy RV Backup Health Monitoring Alerts"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_Disconnected_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.5.0",
          "category": "Hybrid Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to Deploy Hybrid VM Disconnected Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_Disconnected_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT10M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT2H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT10M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT12H",
              "P1D"
            ],
            "defaultValue": "P1D",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "allowedValues": [
              "5m",
              "10m",
              "15m",
              "30m",
              "1h",
              "2h",
              "3h",
              "6h",
              "12h",
              "1d",
              "2d",
              "3d",
              "7d"
            ],
            "defaultValue": "10m",
            "metadata": {
              "description": "Threshold in timespan value for the Hybrid VM Disconnected alert",
              "displayName": "Hybrid VM Disconnected Threshold (expressed in timespan)"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.HybridCompute/machines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-HybridVMDisconnectedAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | where parse_json(tostring(tags.[\"{0}\"])) !in~ (\"{1}\") | where tostring(properties.status) == \"Disconnected\" | extend lastContactedDate = todatetime(properties.lastStatusChange) | where lastContactedDate <= ago(totimespan(policyThresholdString)) | extend status = tostring(properties.status) | project id, Computer=name, status, lastContactedDate', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Hybrid VM in disconnected state. Not being connected, prevents extensions to be correctly managed from the portal and Azure policies to be correctly applied. Ensure that both server the specific service (Azure Hybrid Instance Metadata Service on Windows or azcmagent on Linux) are running.",
                                  "displayName": "[concat(subscription().displayName, '-HybridVMDisconnectedAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "id",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | where parse_json(tostring(tags.[\"{0}\"])) !in~ (\"{1}\") | where tostring(properties.status) == \"Disconnected\" | extend lastContactedDate = todatetime(properties.lastStatusChange) | where lastContactedDate <= ago(totimespan(policyThresholdString)) | extend status = tostring(properties.status) | project id, Computer=name, status, lastContactedDate', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "targetResourceTypes": [
                                    "Microsoft.HybridCompute/machines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-HybridVMDisconnectedAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "HybridVMDisconnectedAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_Hybrid_VM_Disconnected_Alert",
        "displayName": "Deploy Hybrid VM Disconnected Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_NetworkIn_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.5.0",
          "category": "Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM Network Read Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_NetworkIn_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "10000000",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "computersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Array of Computer to be monitored",
              "displayName": "Computers to be included to be monitored"
            },
            "type": "array"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Compute/virtualMachines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-VMHighNetworkInAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-ReadBytesPerSecond-Data-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | where _ResourceId !in~ (excludedVMSSNodes) | where Origin == \"vm.azm.ms\" | where Namespace == \"Network\" and Name == \"ReadBytesPerSecond\" | extend NetworkInterface=tostring(todynamic(Tags)[\"vm.azm.ms/networkDeviceId\"]) | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, NetworkInterface | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-ReadBytesPerSecond-Data-threshold-Override_\", tostring(tags.[\"_amba-ReadBytesPerSecond-Data-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, NetworkInterface, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "computersToInclude": {
                      "value": "[parameters('computersToInclude')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "computersToInclude": {
                        "type": "array"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine NetworkIn",
                                  "displayName": "[concat(subscription().displayName, '-VMHighNetworkInAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "computersToInclude": {
                                      "value": "[parameters('computersToInclude')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": "[parameters('computersToInclude')]"
                                          },
                                          {
                                            "operator": "Include",
                                            "name": "NetworkInterface",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-ReadBytesPerSecond-Data-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | where _ResourceId !in~ (excludedVMSSNodes) | where Origin == \"vm.azm.ms\" | where Namespace == \"Network\" and Name == \"ReadBytesPerSecond\" | extend NetworkInterface=tostring(todynamic(Tags)[\"vm.azm.ms/networkDeviceId\"]) | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, NetworkInterface | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-ReadBytesPerSecond-Data-threshold-Override_\", tostring(tags.[\"_amba-ReadBytesPerSecond-Data-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, NetworkInterface, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.Compute/virtualMachines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-VMHighNetworkInAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "VMNetworkInAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_VM_NetworkIn_Alert",
        "displayName": "Deploy VM Network Read Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERGw_ExpressRouteBitsIn_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy ER Gateway Connection BitsInPerSecond Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERGw_ExpressRouteBitsIn_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/expressroutegateways",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/expressroutegateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "ERGatewayConnectionBitsInPerSecond",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/expressroutegateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-ERGatewayConnectionBitsInPerSecond-threshold-Override_'), field('tags._amba-ERGatewayConnectionBitsInPerSecond-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-ERGatewayConnectionBitsInPerSecond-threshold-Override_'), field('tags._amba-ERGatewayConnectionBitsInPerSecond-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for ER Gateway Connection BitsInPerSecond",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "ERGatewayConnectionBitsInPerSecond",
                                "metricNamespace": "Microsoft.Network/expressroutegateways",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "ERGatewayConnectionBitsInPerSecond"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-GatewayERBitsInAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_ERGw_ExpressRouteBitsIn_Alert",
        "displayName": "Deploy ERG ExpressRoute Bits In Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_VPNGateway_Delete": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.1.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to Deploy Activity Log VPN Gateway Delete Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_VPNGateway_Delete",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/vpnGateways",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/activityLogAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/ActivityLogAlerts/enabled"
                  },
                  {
                    "equals": 2,
                    "count": {
                      "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*]",
                      "where": {
                        "anyOf": [
                          {
                            "allOf": [
                              {
                                "equals": "category",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "Administrative",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "equals": "operationName",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "Microsoft.Network/vpnGateways/delete",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "string"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "microsoft.insights/activityLogAlerts",
                                "properties": {
                                  "description": "Activity Log VPN Gateway Delete",
                                  "parameters": {
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    }
                                  },
                                  "enabled": "[parameters('enabled')]",
                                  "scopes": [
                                    "[subscription().id]"
                                  ],
                                  "condition": {
                                    "allOf": [
                                      {
                                        "equals": "Administrative",
                                        "field": "category"
                                      },
                                      {
                                        "equals": "Microsoft.Network/vpnGateways/delete",
                                        "field": "operationName"
                                      },
                                      {
                                        "field": "status",
                                        "containsAny": [
                                          "succeeded"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "apiVersion": "2020-10-01",
                                "location": "global",
                                "name": "ActivityVPNGatewayDelete",
                                "tags": {
                                  "_deployed_by_amba": true
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "ActivityVPNGatewayDelete",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourcegroup"
            }
          }
        },
        "name": "Deploy_activitylog_VPNGateway_Delete",
        "displayName": "Deploy Activity Log VPN Gateway Delete Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERP_ExpressRoutRxLightLevellow_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.2.1",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy ER Direct RxLightLevel Low Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERP_ExpressRoutRxLightLevellow_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "-10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/expressRoutePorts",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/expressRoutePorts",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "RxLightLevel",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/expressRoutePorts/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-RxLightLevel-Low-threshold-Override_'), field('tags._amba-RxLightLevel-Low-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-RxLightLevel-Low-threshold-Override_'), field('tags._amba-RxLightLevel-Low-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for ER Direct Connection RxLightLevelLow",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "RxLightLevel",
                                "metricNamespace": "Microsoft.Network/expressRoutePorts",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "RxLightLevel"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-DirectERRxLightLevelLowAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_ERP_ExpressRoutRxLightLevellow_Alert",
        "displayName": "Deploy ER Direct ExpressRoute RxLightLevel Low Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PDNSZ_RecordSetCapacity_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Private DNS Zone Record Set Capacity Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PDNSZ_RecordSetCapacity_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1H",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT1H",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "80",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/privateDnsZones",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/privateDnsZones",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "RecordSetCapacityUtilization",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/privateDnsZones/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Maximum",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThanOrEqual",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-RecordSetCapacityUtilization-threshold-Override_'), field('tags._amba-RecordSetCapacityUtilization-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-RecordSetCapacityUtilization-threshold-Override_'), field('tags._amba-RecordSetCapacityUtilization-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Private DNS Zone Record Set Capacity Utilization",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Maximum",
                                "operator": "GreaterThanOrEqual",
                                "name": "RecordSetCapacityUtilization",
                                "metricNamespace": "Microsoft.Network/privateDnsZones",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "RecordSetCapacityUtilization"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-RecordSet_Capacity_Utilization')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_PDNSZ_RecordSetCapacity_Alert",
        "displayName": "Deploy PDNSZ Record Set Capacity Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_BandwidthUtil_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VPN Gateway Bandwidth Utilization Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_BandwidthUtil_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "microsoft.network/vpngateways",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "microsoft.network/vpngateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "tunnelaveragebandwidth",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.network/vpngateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-tunnelaveragebandwidth-threshold-Override_'), field('tags._amba-tunnelaveragebandwidth-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-tunnelaveragebandwidth-threshold-Override_'), field('tags._amba-tunnelaveragebandwidth-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for VPN Gateway Bandwidth Utilization",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "tunnelaveragebandwidth",
                                "metricNamespace": "microsoft.network/vpngateways",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "tunnelaveragebandwidth"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-GatewayBandwidthAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_VPNGw_BandwidthUtil_Alert",
        "displayName": "Deploy VPNG Bandwidth Utilization Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_TunnelIngressPacketDropCount_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VPN Gateway Ingress Packet Drop Count Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_TunnelIngressPacketDropCount_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "microsoft.network/vpngateways",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "microsoft.network/vpngateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "TunnelIngressPacketDropCount",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.network/vpngateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator"
                  },
                  {
                    "equals": "Medium",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for VPN Gateway tunnel TunnelIngressPacketDropCount",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "failingPeriods": {
                              "value": "[parameters('failingPeriods')]"
                            },
                            "evaluationPeriods": {
                              "value": "[parameters('evaluationPeriods')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                  "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                },
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "TunnelIngressPacketDropCount",
                                "metricNamespace": "microsoft.network/vpngateways",
                                "criterionType": "DynamicThresholdCriterion",
                                "metricName": "TunnelIngressPacketDropCount",
                                "alertSensitivity": "Medium"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-TunnelIngressPacketDropCountAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_VPNGw_TunnelIngressPacketDropCount_Alert",
        "displayName": "Deploy VPNG Ingress Packet Drop Count Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AlertProcessing_Rule": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.4.0",
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to deploy Action Group and Alert Processing Rule for all AMBA alerts",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AlertProcessing_Rule",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "ALZMonitorActionGroupEmail": {
            "defaultValue": [],
            "metadata": {
              "description": "Email addresses to send alerts to",
              "displayName": "Action Group Email Addresses"
            },
            "type": "Array"
          },
          "ALZMonitorResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "BYOActionGroup": {
            "defaultValue": [],
            "metadata": {
              "description": "The Resource IDs of existing Action Groups currently deployed in the environment.",
              "displayName": "Customer defined Action Group Resource IDs"
            },
            "type": "array"
          },
          "ALZMonitorResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "ALZMonitorResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_amba": true
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "BYOAlertProcessingRule": {
            "defaultValue": "",
            "metadata": {
              "description": "The Resource ID of an existing Alert Processing Rule already deployed by the customer in his environment",
              "displayName": "Customer defined Alert Processing Rule Resource ID"
            },
            "type": "String"
          },
          "ALZLogicappCallbackUrl": {
            "defaultValue": "",
            "metadata": {
              "description": "Callback URL that triggers the Logic App",
              "displayName": "Logic App Callback URL"
            },
            "type": "String"
          },
          "ALZFunctionTriggerUrl": {
            "defaultValue": "",
            "metadata": {
              "description": "URL that triggers the Function",
              "displayName": "Function Trigger URL"
            },
            "type": "String"
          },
          "ALZFunctionResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "Function Resource Id for Action Group to send alerts to",
              "displayName": "Function Resource Id"
            },
            "type": "String"
          },
          "ALZLogicappResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "Logic App Resource Id for Action Group to send alerts to",
              "displayName": "Logic App Resource Id"
            },
            "type": "String"
          },
          "ALZEventHubResourceId": {
            "defaultValue": [],
            "metadata": {
              "description": "Event Hub resource Ids for action group to send alerts to",
              "displayName": "Event Hub resource Ids"
            },
            "type": "array"
          },
          "ALZWebhookServiceUri": {
            "defaultValue": [],
            "metadata": {
              "description": "Indicates the service uri(s) of the webhook to send alerts to",
              "displayName": "Webhook Service Uri(s)"
            },
            "type": "Array"
          },
          "ALZArmRoleId": {
            "defaultValue": [],
            "metadata": {
              "description": "Arm Built-in Role Ids for action group to send alerts to",
              "displayName": "Arm Role Ids"
            },
            "type": "array"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Resources/subscriptions",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              },
              {
                "value": "[empty(parameters('BYOAlertProcessingRule'))]",
                "equals": "true"
              }
            ]
          },
          "then": {
            "effect": "deployIfNotExists",
            "details": {
              "type": "Microsoft.AlertsManagement/actionRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "AMBA Notification Assets - Alert Processing Rule for Subscription",
                    "field": "Microsoft.AlertsManagement/actionRules/description"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "ALZMonitorActionGroupEmail": {
                      "value": "[parameters('ALZMonitorActionGroupEmail')]"
                    },
                    "ALZMonitorResourceGroupName": {
                      "value": "[parameters('ALZMonitorResourceGroupName')]"
                    },
                    "BYOActionGroup": {
                      "value": "[parameters('BYOActionGroup')]"
                    },
                    "ALZMonitorResourceGroupLocation": {
                      "value": "[parameters('ALZMonitorResourceGroupLocation')]"
                    },
                    "ALZMonitorResourceGroupTags": {
                      "value": "[parameters('ALZMonitorResourceGroupTags')]"
                    },
                    "BYOAlertProcessingRule": {
                      "value": "[parameters('BYOAlertProcessingRule')]"
                    },
                    "ALZLogicappCallbackUrl": {
                      "value": "[parameters('ALZLogicappCallbackUrl')]"
                    },
                    "ALZFunctionTriggerUrl": {
                      "value": "[parameters('ALZFunctionTriggerUrl')]"
                    },
                    "ALZFunctionResourceId": {
                      "value": "[parameters('ALZFunctionResourceId')]"
                    },
                    "ALZLogicappResourceId": {
                      "value": "[parameters('ALZLogicappResourceId')]"
                    },
                    "ALZEventHubResourceId": {
                      "value": "[parameters('ALZEventHubResourceId')]"
                    },
                    "ALZWebhookServiceUri": {
                      "value": "[parameters('ALZWebhookServiceUri')]"
                    },
                    "ALZArmRoleId": {
                      "value": "[parameters('ALZArmRoleId')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "ALZMonitorActionGroupEmail": {
                        "type": "Array"
                      },
                      "ALZMonitorResourceGroupName": {
                        "type": "string"
                      },
                      "BYOActionGroup": {
                        "type": "array"
                      },
                      "ALZMonitorResourceGroupLocation": {
                        "type": "string"
                      },
                      "ALZMonitorResourceGroupTags": {
                        "type": "object"
                      },
                      "BYOAlertProcessingRule": {
                        "type": "String"
                      },
                      "ALZLogicappCallbackUrl": {
                        "type": "String"
                      },
                      "ALZFunctionTriggerUrl": {
                        "type": "String"
                      },
                      "ALZFunctionResourceId": {
                        "type": "string"
                      },
                      "ALZLogicappResourceId": {
                        "type": "string"
                      },
                      "ALZEventHubResourceId": {
                        "type": "array"
                      },
                      "ALZWebhookServiceUri": {
                        "type": "Array"
                      },
                      "ALZArmRoleId": {
                        "type": "array"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {
                      "varAzureFunctionReceivers": [
                        {
                          "name": "AlzFa-0",
                          "useCommonAlertSchema": true,
                          "functionAppResourceId": "[if(empty(parameters('ALZFunctionResourceId')), null(), split(trim(parameters('ALZFunctionResourceId')),'/functions/')[0])]",
                          "httpTriggerUrl": "[if(empty(parameters('ALZFunctionTriggerUrl')), null(), trim(parameters('ALZFunctionTriggerUrl')))]",
                          "functionName": "[if(empty(parameters('ALZFunctionResourceId')), null(), split(trim(parameters('ALZFunctionResourceId')),'/')[10])]"
                        }
                      ],
                      "copy": [
                        {
                          "name": "varEmailReceivers",
                          "mode": "serial",
                          "count": "[length(parameters('ALZMonitorActionGroupEmail'))]",
                          "input": {
                            "name": "[concat('AlzMail-', indexOf(parameters('ALZMonitorActionGroupEmail'), parameters('ALZMonitorActionGroupEmail')[copyIndex('varEmailReceivers')]))]",
                            "useCommonAlertSchema": true,
                            "emailAddress": "[trim(parameters('ALZMonitorActionGroupEmail')[copyIndex('varEmailReceivers')])]"
                          }
                        },
                        {
                          "name": "varArmRoleReceivers",
                          "mode": "serial",
                          "count": "[length(parameters('ALZArmRoleId'))]",
                          "input": {
                            "name": "[concat('AlzARM-', indexOf(parameters('ALZArmRoleId'), parameters('ALZArmRoleId')[copyIndex('varArmRoleReceivers')]))]",
                            "useCommonAlertSchema": true,
                            "roleId": "[trim(parameters('ALZArmRoleId')[copyIndex('varArmRoleReceivers')])]"
                          }
                        },
                        {
                          "name": "varEventHubReceivers",
                          "mode": "serial",
                          "count": "[length(parameters('ALZEventHubResourceId'))]",
                          "input": {
                            "tenantId": "[subscription().tenantId]",
                            "subscriptionId": "[if(empty(parameters('ALZEventHubResourceId')), null(), split(trim(parameters('ALZEventHubResourceId')[copyIndex('varEventHubReceivers')]),'/')[2])]",
                            "name": "[concat('AlzEH-', indexOf(parameters('ALZEventHubResourceId'), parameters('ALZEventHubResourceId')[copyIndex('varEventHubReceivers')]))]",
                            "useCommonAlertSchema": true,
                            "eventHubNameSpace": "[if(empty(parameters('ALZEventHubResourceId')), null(), split(trim(parameters('ALZEventHubResourceId')[copyIndex('varEventHubReceivers')]),'/')[8])]",
                            "eventHubName": "[if(empty(parameters('ALZEventHubResourceId')), null(), split(trim(parameters('ALZEventHubResourceId')[copyIndex('varEventHubReceivers')]),'/')[10])]"
                          }
                        },
                        {
                          "name": "varWebhookReceivers",
                          "mode": "serial",
                          "count": "[length(parameters('ALZWebhookServiceUri'))]",
                          "input": {
                            "tenantId": "null()",
                            "name": "[concat('AlzWh-', indexOf(parameters('ALZWebhookServiceUri'), parameters('ALZWebhookServiceUri')[copyIndex('varWebhookReceivers')]))]",
                            "useCommonAlertSchema": true,
                            "identifierUri": "null()",
                            "serviceUri": "[trim(parameters('ALZWebhookServiceUri')[copyIndex('varWebhookReceivers')])]",
                            "useAadAuth": "false",
                            "objectId": "null()"
                          }
                        },
                        {
                          "name": "varAGIds",
                          "mode": "serial",
                          "count": "[length(parameters('BYOActionGroup'))]",
                          "input": "[trim(parameters('BYOActionGroup')[copyIndex('varAGIds')])]"
                        }
                      ],
                      "varLogicAppReceivers": [
                        {
                          "resourceId": "[if(empty(parameters('ALZLogicappResourceId')), null(), trim(parameters('ALZLogicappResourceId')))]",
                          "name": "AlzLA-0",
                          "useCommonAlertSchema": true,
                          "callbackUrl": "[if(empty(parameters('ALZLogicappCallbackUrl')), null(), trim(parameters('ALZLogicappCallbackUrl')))]"
                        }
                      ],
                      "varBYOAlertProcessingRule": "[if(empty(parameters('BYOAlertProcessingRule')), null(), trim(parameters('BYOAlertProcessingRule')))]"
                    },
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('ALZMonitorResourceGroupLocation')]",
                        "name": "[parameters('ALZMonitorResourceGroupName')]",
                        "tags": "[parameters('ALZMonitorResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('ALZMonitorResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "ALZMonitorActionGroupEmail": {
                              "value": "[parameters('ALZMonitorActionGroupEmail')]"
                            },
                            "ALZMonitorResourceGroupName": {
                              "value": "[parameters('ALZMonitorResourceGroupName')]"
                            },
                            "BYOActionGroup": {
                              "value": "[parameters('BYOActionGroup')]"
                            },
                            "BYOAlertProcessingRule": {
                              "value": "[parameters('BYOAlertProcessingRule')]"
                            },
                            "ALZLogicappCallbackUrl": {
                              "value": "[parameters('ALZLogicappCallbackUrl')]"
                            },
                            "ALZFunctionTriggerUrl": {
                              "value": "[parameters('ALZFunctionTriggerUrl')]"
                            },
                            "ALZFunctionResourceId": {
                              "value": "[parameters('ALZFunctionResourceId')]"
                            },
                            "ALZLogicappResourceId": {
                              "value": "[parameters('ALZLogicappResourceId')]"
                            },
                            "ALZEventHubResourceId": {
                              "value": "[parameters('ALZEventHubResourceId')]"
                            },
                            "ALZWebhookServiceUri": {
                              "value": "[parameters('ALZWebhookServiceUri')]"
                            },
                            "ALZArmRoleId": {
                              "value": "[parameters('ALZArmRoleId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "ALZMonitorActionGroupEmail": {
                                "type": "Array"
                              },
                              "ALZMonitorResourceGroupName": {
                                "type": "string"
                              },
                              "BYOActionGroup": {
                                "type": "array"
                              },
                              "BYOAlertProcessingRule": {
                                "type": "string"
                              },
                              "ALZLogicappCallbackUrl": {
                                "type": "string"
                              },
                              "ALZFunctionTriggerUrl": {
                                "type": "string"
                              },
                              "ALZFunctionResourceId": {
                                "type": "string"
                              },
                              "ALZLogicappResourceId": {
                                "type": "string"
                              },
                              "ALZEventHubResourceId": {
                                "type": "array"
                              },
                              "ALZWebhookServiceUri": {
                                "type": "Array"
                              },
                              "ALZArmRoleId": {
                                "type": "array"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/actionGroups",
                                "properties": {
                                  "enabled": true,
                                  "azureFunctionReceivers": "[if(empty(parameters('ALZFunctionResourceId')), null(), variables('varAzureFunctionReceivers'))]",
                                  "eventHubReceivers": "[if(empty(parameters('ALZEventHubResourceId')), null(), variables('varEventHubReceivers'))]",
                                  "logicAppReceivers": "[if(empty(parameters('ALZLogicappResourceId')), null(), variables('varLogicAppReceivers'))]",
                                  "webhookReceivers": "[if(empty(parameters('ALZWebhookServiceUri')), null(), variables('varWebhookReceivers'))]",
                                  "armRoleReceivers": "[if(empty(parameters('ALZArmRoleId')), null(), variables('varArmRoleReceivers'))]",
                                  "emailReceivers": "[if(empty(parameters('ALZMonitorActionGroupEmail')), null(), variables('varEmailReceivers'))]",
                                  "groupShortName": "ActGrp"
                                },
                                "apiVersion": "2023-01-01",
                                "location": "Global",
                                "name": "[concat('ag-AMBA-', subscription().displayName, '-001')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "condition": "[and(empty(parameters('BYOActionGroup')), empty(parameters('BYOAlertProcessingRule')))]"
                              },
                              {
                                "type": "Microsoft.AlertsManagement/actionRules",
                                "properties": {
                                  "description": "AMBA Notification Assets - Alert Processing Rule for Subscription",
                                  "enabled": true,
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "actions": [
                                    {
                                      "actionType": "AddActionGroups",
                                      "actiongroupIds": "[if(empty(parameters('BYOActionGroup')), array(concat(subscription().Id, '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/microsoft.insights/actionGroups/', 'ag-AMBA-', subscription().displayName, '-001')), variables('varAGIds'))]"
                                    }
                                  ]
                                },
                                "apiVersion": "2021-08-08",
                                "location": "Global",
                                "name": "[concat('apr-AMBA-',subscription().displayName, '-001')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "dependsOn": [
                                  "[concat('ag-AMBA-', subscription().displayName, '-001')]"
                                ],
                                "condition": "[empty(parameters('BYOAlertProcessingRule'))]"
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "ActionGroupDeployment",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('ALZMonitorResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('ALZMonitorResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_AlertProcessing_Rule",
        "displayName": "Deploy AMBA Notification Assets"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_Memory_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Hybrid Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM Memory Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_Memory_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.HybridCompute/machines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-HybridVMLowMemoryAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-AvailableMemoryPercentage-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | where Origin == \"vm.azm.ms\" | where Namespace == \"Memory\" and Name == \"AvailableMB\" | extend TotalMemory = toreal(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) | extend AvailableMemoryPercentage = (toreal(Val) / TotalMemory) * 100.0 | summarize AggregatedValue = avg(AvailableMemoryPercentage) by bin(TimeGenerated, 15m), Computer, _ResourceId | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-AvailableMemoryPercentage-threshold-Override_\", tostring(tags.[\"_amba-AvailableMemoryPercentage-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue < appliedThreshold | project TimeGenerated, Computer, _ResourceId, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine Memory",
                                  "displayName": "[concat(subscription().displayName, '-HybridVMLowMemoryAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-AvailableMemoryPercentage-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | where Origin == \"vm.azm.ms\" | where Namespace == \"Memory\" and Name == \"AvailableMB\" | extend TotalMemory = toreal(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) | extend AvailableMemoryPercentage = (toreal(Val) / TotalMemory) * 100.0 | summarize AggregatedValue = avg(AvailableMemoryPercentage) by bin(TimeGenerated, 15m), Computer, _ResourceId | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-AvailableMemoryPercentage-threshold-Override_\", tostring(tags.[\"_amba-AvailableMemoryPercentage-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue < appliedThreshold | project TimeGenerated, Computer, _ResourceId, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.HybridCompute/machines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-HybridVMLowMemoryAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "HybridVMMemoryAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_Hybrid_VM_Memory_Alert",
        "displayName": "Deploy Hybrid VM Memory Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_ServiceHealth_SecurityAdvisory": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to Deploy Service Health Security Advisory Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_ServiceHealth_SecurityAdvisory",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_amba": true
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "ALZMonitorActionGroupEmail": {
            "defaultValue": [],
            "metadata": {
              "description": "Email addresses to send alerts to",
              "displayName": "Action Group Email Addresses"
            },
            "type": "Array"
          },
          "BYOActionGroup": {
            "defaultValue": [],
            "metadata": {
              "description": "The Resource IDs of existing Action Groups currently deployed in the environment.",
              "displayName": "Customer defined Action Group Resource IDs"
            },
            "type": "array"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Resources/subscriptions",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/activityLogAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/ActivityLogAlerts/enabled"
                  },
                  {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "value": "[empty(parameters('BYOActionGroup'))]",
                            "equals": true
                          },
                          {
                            "field": "Microsoft.Insights/ActivityLogAlerts/actions.actionGroups[*].actionGroupId",
                            "contains": "ag-AMBA-SH-"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "value": "[empty(parameters('BYOActionGroup'))]",
                            "equals": false
                          },
                          {
                            "count": {
                              "field": "Microsoft.Insights/ActivityLogAlerts/actions.actionGroups[*]",
                              "where": {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Insights/ActivityLogAlerts/actions.actionGroups[*].actionGroupId",
                                    "in": "[parameters('BYOActionGroup')]"
                                  }
                                ]
                              }
                            },
                            "greaterOrEquals": 1
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "equals": 2,
                    "count": {
                      "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*]",
                      "where": {
                        "anyOf": [
                          {
                            "allOf": [
                              {
                                "equals": "category",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "ServiceHealth",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "equals": "properties.incidentType",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "Security",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "ALZMonitorActionGroupEmail": {
                      "value": "[parameters('ALZMonitorActionGroupEmail')]"
                    },
                    "BYOActionGroup": {
                      "value": "[parameters('BYOActionGroup')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "string"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "ALZMonitorActionGroupEmail": {
                        "type": "Array"
                      },
                      "BYOActionGroup": {
                        "type": "array"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {
                      "copy": [
                        {
                          "name": "varActionGroupIds",
                          "mode": "serial",
                          "count": "[length(parameters('BYOActionGroup'))]",
                          "input": {
                            "actionGroupId": "[trim(parameters('BYOActionGroup')[copyIndex('varActionGroupIds')])]"
                          }
                        }
                      ]
                    },
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "ALZMonitorActionGroupEmail": {
                              "value": "[parameters('ALZMonitorActionGroupEmail')]"
                            },
                            "BYOActionGroup": {
                              "value": "[parameters('BYOActionGroup')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "ALZMonitorActionGroupEmail": {
                                "type": "Array"
                              },
                              "BYOActionGroup": {
                                "type": "array"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "microsoft.insights/activityLogAlerts",
                                "properties": {
                                  "description": "Service Health Security Alert",
                                  "parameters": {
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    }
                                  },
                                  "enabled": "[parameters('enabled')]",
                                  "scopes": [
                                    "[subscription().id]"
                                  ],
                                  "condition": {
                                    "allOf": [
                                      {
                                        "equals": "ServiceHealth",
                                        "field": "category"
                                      },
                                      {
                                        "equals": "Security",
                                        "field": "properties.incidentType"
                                      }
                                    ]
                                  },
                                  "actions": {
                                    "actionGroups": [
                                      {
                                        "actionGroupId": "[concat(subscription().Id, '/resourceGroups/', parameters('alertResourceGroupName'), '/providers/microsoft.insights/actionGroups/', 'ag-AMBA-SH-', subscription().displayName, '-001')]"
                                      }
                                    ]
                                  }
                                },
                                "apiVersion": "2020-10-01",
                                "location": "global",
                                "name": "ServiceHealthSecurityIncident",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "condition": "[empty(parameters('BYOActionGroup'))]"
                              },
                              {
                                "type": "microsoft.insights/activityLogAlerts",
                                "properties": {
                                  "description": "Service Health Security Alert",
                                  "parameters": {
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    }
                                  },
                                  "enabled": "[parameters('enabled')]",
                                  "scopes": [
                                    "[subscription().id]"
                                  ],
                                  "condition": {
                                    "allOf": [
                                      {
                                        "equals": "ServiceHealth",
                                        "field": "category"
                                      },
                                      {
                                        "equals": "Security",
                                        "field": "properties.incidentType"
                                      }
                                    ]
                                  },
                                  "actions": {
                                    "actionGroups": "[variables('varActionGroupIds')]"
                                  }
                                },
                                "apiVersion": "2020-10-01",
                                "location": "global",
                                "name": "ServiceHealthSecurityIncident",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "condition": "[not(empty(parameters('BYOActionGroup')))]"
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "ServiceSecurityIncident",
                        "dependsOn": [
                          "[resourceId('Microsoft.Resources/resourceGroups', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourcegroup"
            }
          }
        },
        "name": "Deploy_activitylog_ServiceHealth_SecurityAdvisory",
        "displayName": "Deploy Service Health Security Advisory Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_OSDiskwriteLatency_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Hybrid Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM OSDiskwriteLatency Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_OSDiskwriteLatency_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "30",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "computersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Array of Computer to be monitored",
              "displayName": "Computers to be included to be monitored"
            },
            "type": "array"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.HybridCompute/machines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-HybridVMHighOSDiskWriteLatencyAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-WriteLatencyMs-OS-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"WriteLatencyMs\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk in (\"C:\",\"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-WriteLatencyMs-OS-threshold-Override_\", tostring(tags.[\"_amba-WriteLatencyMs-OS-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "computersToInclude": {
                      "value": "[parameters('computersToInclude')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "computersToInclude": {
                        "type": "array"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine OSDiskwriteLatency",
                                  "displayName": "[concat(subscription().displayName, '-HybridVMHighOSDiskWriteLatencyAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "computersToInclude": {
                                      "value": "[parameters('computersToInclude')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": "[parameters('computersToInclude')]"
                                          },
                                          {
                                            "operator": "Include",
                                            "name": "Disk",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-WriteLatencyMs-OS-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"WriteLatencyMs\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk in (\"C:\",\"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-WriteLatencyMs-OS-threshold-Override_\", tostring(tags.[\"_amba-WriteLatencyMs-OS-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.HybridCompute/machines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-HybridVMHighOSDiskWriteLatencyAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "HybridVMOSDiskwriteLatencyAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_Hybrid_VM_OSDiskwriteLatency_Alert",
        "displayName": "Deploy Hybrid VM OS Disk Write Latency Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ALB_GlobalBackendAvailability_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.2.1",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Azure Load Balancer Global Backend Availability Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ALB_GlobalBackendAvailability_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "90",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/loadBalancers",
                "field": "type"
              },
              {
                "equals": "Global",
                "field": "Microsoft.Network/loadBalancers/sku.tier"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/loadBalancers",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "GlobalBackendAvailability",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-GlobalBackendAvailability-threshold-Override_'), field('tags._amba-GlobalBackendAvailability-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-GlobalBackendAvailability-threshold-Override_'), field('tags._amba-GlobalBackendAvailability-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Global Backend Availability",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "GlobalBackendAvailability",
                                "metricNamespace": "Microsoft.Network/loadBalancers",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "GlobalBackendAvailability"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-ALBGlobalBackendAvailability')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_ALB_GlobalBackendAvailability_Alert",
        "displayName": "Deploy ALB Global Backend Availability Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_dataDiskReadLatency_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Hybrid Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM dataDiskReadLatency Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_dataDiskReadLatency_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "30",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "computersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Array of Computer to be monitored",
              "displayName": "Computers to be included to be monitored"
            },
            "type": "array"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.HybridCompute/machines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-HybridVMHighDataDiskReadLatencyAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-ReadLatencyMs-Data-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"ReadLatencyMs\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk !in (\"C:\", \"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-ReadLatencyMs-Data-threshold-Override_\", tostring(tags.[\"_amba-ReadLatencyMs-Data-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "computersToInclude": {
                      "value": "[parameters('computersToInclude')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "computersToInclude": {
                        "type": "array"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine dataDiskReadLatency",
                                  "displayName": "[concat(subscription().displayName, '-HybridVMHighDataDiskReadLatencyAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "computersToInclude": {
                                      "value": "[parameters('computersToInclude')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": "[parameters('computersToInclude')]"
                                          },
                                          {
                                            "operator": "Include",
                                            "name": "Disk",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-ReadLatencyMs-Data-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"ReadLatencyMs\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk !in (\"C:\", \"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-ReadLatencyMs-Data-threshold-Override_\", tostring(tags.[\"_amba-ReadLatencyMs-Data-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.HybridCompute/machines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-HybridVMHighDataDiskReadLatencyAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "HybridVMdataDiskReadLatencyAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_Hybrid_VM_dataDiskReadLatency_Alert",
        "displayName": "Deploy Hybrid VM Data Disk Read Latency Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_KeyVault_Delete": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.1.0",
          "category": "Key Vault",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to Deploy Activity Log Key Vault Delete Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_KeyVault_Delete",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_amba": true
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "microsoft.keyvault/vaults",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/activityLogAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/ActivityLogAlerts/enabled"
                  },
                  {
                    "equals": 2,
                    "count": {
                      "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*]",
                      "where": {
                        "anyOf": [
                          {
                            "allOf": [
                              {
                                "equals": "category",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "Administrative",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "equals": "operationName",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "Microsoft.KeyVault/vaults/delete",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "name": "ActivityKeyVaultDelete",
              "deployment": {
                "properties": {
                  "parameters": {
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "string"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "microsoft.insights/activityLogAlerts",
                                "properties": {
                                  "description": "Activity Log Key Vault Delete",
                                  "parameters": {
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    }
                                  },
                                  "enabled": "[parameters('enabled')]",
                                  "scopes": [
                                    "[subscription().id]"
                                  ],
                                  "condition": {
                                    "allOf": [
                                      {
                                        "equals": "Administrative",
                                        "field": "category"
                                      },
                                      {
                                        "equals": "Microsoft.KeyVault/vaults/delete",
                                        "field": "operationName"
                                      },
                                      {
                                        "field": "status",
                                        "containsAny": [
                                          "succeeded"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "apiVersion": "2020-10-01",
                                "location": "global",
                                "name": "ActivityKeyVaultDelete",
                                "tags": {
                                  "_deployed_by_amba": true
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "ActivityKeyVaultDelete",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourcegroup"
            }
          }
        },
        "name": "Deploy_activitylog_KeyVault_Delete",
        "displayName": "Deploy Activity Log Key Vault Delete Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERP_ExpressRouteBitsIn_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.2.1",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy ER Direct Connection BitsInPerSecond Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERP_ExpressRouteBitsIn_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/expressRoutePorts",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/expressRoutePorts",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "PortBitsInPerSecond",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/expressRoutePorts/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-PortBitsInPerSecond-threshold-Override_'), field('tags._amba-PortBitsInPerSecond-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-PortBitsInPerSecond-threshold-Override_'), field('tags._amba-PortBitsInPerSecond-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for ER Direct Connection BitsInPerSecond",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "PortBitsInPerSecond",
                                "metricNamespace": "Microsoft.Network/expressRoutePorts",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "PortBitsInPerSecond"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-DirectERBitsInAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_ERP_ExpressRouteBitsIn_Alert",
        "displayName": "Deploy ER Direct ExpressRoute Bits In Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_OSDiskreadLatency_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.5.0",
          "category": "Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM OSDiskreadLatency Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_OSDiskreadLatency_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "30",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "computersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Array of Computer to be monitored",
              "displayName": "Computers to be included to be monitored"
            },
            "type": "array"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Compute/virtualMachines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-VMHighOSDiskReadLatencyAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-ReadLatencyMs-OS-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | where _ResourceId !in~ (excludedVMSSNodes) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"ReadLatencyMs\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk in (\"C:\",\"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-ReadLatencyMs-OS-threshold-Override_\", tostring(tags.[\"_amba-ReadLatencyMs-OS-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "computersToInclude": {
                      "value": "[parameters('computersToInclude')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "computersToInclude": {
                        "type": "array"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine OSDiskreadLatency",
                                  "displayName": "[concat(subscription().displayName, '-VMHighOSDiskReadLatencyAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "computersToInclude": {
                                      "value": "[parameters('computersToInclude')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": "[parameters('computersToInclude')]"
                                          },
                                          {
                                            "operator": "Include",
                                            "name": "Disk",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-ReadLatencyMs-OS-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | where _ResourceId !in~ (excludedVMSSNodes) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"ReadLatencyMs\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk in (\"C:\",\"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-ReadLatencyMs-OS-threshold-Override_\", tostring(tags.[\"_amba-ReadLatencyMs-OS-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.Compute/virtualMachines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-VMHighOSDiskReadLatencyAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "VMOSDiskreadLatencyAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_VM_OSDiskreadLatency_Alert",
        "displayName": "Deploy VM OS Disk Read Latency Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_dataDiskWriteLatency_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Hybrid Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM dataDiskWriteLatency Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_dataDiskWriteLatency_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "30",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "computersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Array of Computer to be monitored",
              "displayName": "Computers to be included to be monitored"
            },
            "type": "array"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.HybridCompute/machines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-HybridVMHighDataDiskWriteLatencyAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-WriteLatencyMs-Data-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"WriteLatencyMs\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk !in (\"C:\",\"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-WriteLatencyMs-Data-threshold-Override_\", tostring(tags.[\"_amba-WriteLatencyMs-Data-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "computersToInclude": {
                      "value": "[parameters('computersToInclude')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "computersToInclude": {
                        "type": "array"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine dataDiskWriteLatency",
                                  "displayName": "[concat(subscription().displayName, '-HybridVMHighDataDiskWriteLatencyAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "computersToInclude": {
                                      "value": "[parameters('computersToInclude')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": "[parameters('computersToInclude')]"
                                          },
                                          {
                                            "operator": "Include",
                                            "name": "Disk",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-WriteLatencyMs-Data-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"WriteLatencyMs\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk !in (\"C:\",\"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-WriteLatencyMs-Data-threshold-Override_\", tostring(tags.[\"_amba-WriteLatencyMs-Data-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.HybridCompute/machines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-HybridVMHighDataDiskWriteLatencyAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "HybridVMdataDiskWriteLatencyAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_Hybrid_VM_dataDiskWriteLatency_Alert",
        "displayName": "Deploy Hybrid VM Data Disk Write Latency Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PDNSZ_QueryVolume_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Private DNS Zone Query Volume Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PDNSZ_QueryVolume_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1H",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT1H",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "4",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "500",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/privateDnsZones",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/privateDnsZones",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "QueryVolume",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/privateDnsZones/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Total",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThanOrEqual",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-QueryVolume-threshold-Override_'), field('tags._amba-QueryVolume-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-QueryVolume-threshold-Override_'), field('tags._amba-QueryVolume-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Private DNS Query Volume",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Total",
                                "operator": "GreaterThanOrEqual",
                                "name": "QueryVolume",
                                "metricNamespace": "Microsoft.Network/privateDnsZones",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "QueryVolume"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-QueryVolumeAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_PDNSZ_QueryVolume_Alert",
        "displayName": "Deploy PDNSZ Query Volume Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_OSDiskwriteLatency_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.5.0",
          "category": "Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM OSDiskwriteLatency Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_OSDiskwriteLatency_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "30",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "computersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Array of Computer to be monitored",
              "displayName": "Computers to be included to be monitored"
            },
            "type": "array"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Compute/virtualMachines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-VMHighOSDiskWriteLatencyAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-WriteLatencyMs-OS-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | where _ResourceId !in~ (excludedVMSSNodes) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"WriteLatencyMs\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk in (\"C:\",\"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-WriteLatencyMs-OS-threshold-Override_\", tostring(tags.[\"_amba-WriteLatencyMs-OS-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "computersToInclude": {
                      "value": "[parameters('computersToInclude')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "computersToInclude": {
                        "type": "array"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine OSDiskwriteLatency",
                                  "displayName": "[concat(subscription().displayName, '-VMHighOSDiskWriteLatencyAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "computersToInclude": {
                                      "value": "[parameters('computersToInclude')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": "[parameters('computersToInclude')]"
                                          },
                                          {
                                            "operator": "Include",
                                            "name": "Disk",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-WriteLatencyMs-OS-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | where _ResourceId !in~ (excludedVMSSNodes) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"WriteLatencyMs\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk in (\"C:\",\"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-WriteLatencyMs-OS-threshold-Override_\", tostring(tags.[\"_amba-WriteLatencyMs-OS-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.Compute/virtualMachines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-VMHighOSDiskWriteLatencyAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "VMOSDiskwriteLatencyAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_VM_OSDiskwriteLatency_Alert",
        "displayName": "Deploy VM OS Disk Write Latency Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ManagedHSMs_Latency_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.1.0",
          "category": "Key Vault",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Managed HSMs Latency Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ManagedHSMs_Latency_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "1000",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "microsoft.keyvault/managedHSMs",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.KeyVault/managedHSMs",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "ServiceApiLatency",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.keyvault/managedHSMs', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-ServiceApiLatency-threshold-Override_'), field('tags._amba-ServiceApiLatency-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-ServiceApiLatency-threshold-Override_'), field('tags._amba-ServiceApiLatency-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for ManagedHSM Latency",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "ServiceApiLatency",
                                "metricNamespace": "Microsoft.KeyVault/managedHSMs",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "ServiceApiLatency"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-LatencyAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_ManagedHSMs_Latency_Alert",
        "displayName": "Deploy Managed HSMs Latency Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_CPU_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Hybrid Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM CPU Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_CPU_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "85",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.HybridCompute/machines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-HybridVMHighCPUAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-UtilizationPercentage-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | where Origin == \"vm.azm.ms\" | where Namespace == \"Processor\" and Name == \"UtilizationPercentage\" | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-UtilizationPercentage-threshold-Override_\", tostring(tags.[\"_amba-UtilizationPercentage-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine CPU",
                                  "displayName": "[concat(subscription().displayName, '-HybridVMHighCPUAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-UtilizationPercentage-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | where Origin == \"vm.azm.ms\" | where Namespace == \"Processor\" and Name == \"UtilizationPercentage\" | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-UtilizationPercentage-threshold-Override_\", tostring(tags.[\"_amba-UtilizationPercentage-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.HybridCompute/machines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-HybridVMHighCPUAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "HybridVMCPUAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_Hybrid_VM_CPU_Alert",
        "displayName": "Deploy Hybrid VM CPU Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_VIPAvailability_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy PIP VIP Availability Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_VIPAvailability_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "90",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/publicIPAddresses",
                "field": "type"
              },
              {
                "equals": "Standard",
                "field": "Microsoft.Network/publicIPAddresses/sku.name"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/publicIPAddresses",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "VipAvailability",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/publicIPAddresses/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-VipAvailability-threshold-Override_'), field('tags._amba-VipAvailability-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-VipAvailability-threshold-Override_'), field('tags._amba-VipAvailability-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Public IP Address VIP Availability",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "VipAvailability",
                                "metricNamespace": "Microsoft.Network/publicIPAddresses",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "VipAvailability"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-VIPAvailabityAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_PublicIp_VIPAvailability_Alert",
        "displayName": "Deploy PIP VIP Availability Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ManagedHSMs_Availability_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.0.0",
          "category": "Key Vault",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Managed HSMs Availability Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ManagedHSMs_Availability_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "90",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "microsoft.keyvault/managedHSMs",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.KeyVault/ManagedHSMs",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "Availability",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.keyvault/managedHSMs/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-Availability-threshold-Override_'), field('tags._amba-Availability-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-Availability-threshold-Override_'), field('tags._amba-Availability-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for ManagedHSM Availability",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "Availability",
                                "metricNamespace": "microsoft.keyvault/managedHSMs",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "Availability"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-Availability')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_ManagedHSMs_Availability_Alert",
        "displayName": "Deploy Managed HSMs Availability Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_FailedRequests_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.3.1",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Azure Application Gateway FailedRequests Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_FailedRequests_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "alertSensitivity": {
            "allowedValues": [
              "Low",
              "Medium",
              "High"
            ],
            "defaultValue": "Medium",
            "metadata": {
              "description": "Alert Sensitivity for the alert",
              "displayName": "Alert Sensitivity"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/applicationgateways",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/applicationgateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "FailedRequests",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/applicationgateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Total",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator"
                  },
                  {
                    "equals": "[parameters('alertSensitivity')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    },
                    "alertSensitivity": {
                      "value": "[parameters('alertSensitivity')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      },
                      "alertSensitivity": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for App Gateway FailedRequests",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "failingPeriods": {
                              "value": "[parameters('failingPeriods')]"
                            },
                            "evaluationPeriods": {
                              "value": "[parameters('evaluationPeriods')]"
                            },
                            "alertSensitivity": {
                              "value": "[parameters('alertSensitivity')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                  "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                },
                                "timeAggregation": "Total",
                                "operator": "GreaterThan",
                                "name": "FailedRequests",
                                "metricNamespace": "Microsoft.Network/applicationgateways",
                                "criterionType": "DynamicThresholdCriterion",
                                "metricName": "FailedRequests",
                                "alertSensitivity": "[parameters('alertSensitivity')]"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-agFailedRequests')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_AG_FailedRequests_Alert",
        "displayName": "Deploy AGW FailedRequests Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERP_ExpressRoutTxLightLevellow_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.2.1",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy ER Direct TxLightLevel Low Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERP_ExpressRoutTxLightLevellow_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "-10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/expressRoutePorts",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/expressRoutePorts",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "TxLightLevel",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/expressRoutePorts/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-TxLightLevel-Low-threshold-Override_'), field('tags._amba-TxLightLevel-Low-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-TxLightLevel-Low-threshold-Override_'), field('tags._amba-TxLightLevel-Low-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for ER Direct Connection TxLightLevelLow",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "TxLightLevel",
                                "metricNamespace": "Microsoft.Network/expressRoutePorts",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "TxLightLevel"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-DirectERTxLightLevelLowAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_ERP_ExpressRoutTxLightLevellow_Alert",
        "displayName": "Deploy ER Direct ExpressRoute TxLightLevel Low Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_ExpressRouteCpuUtil_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.1",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Virtual Network Gateway Express Route CPU Utilization Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_ExpressRouteCpuUtil_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "80",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/virtualNetworkGateways",
                "field": "type"
              },
              {
                "equals": "ExpressRoute",
                "field": "Microsoft.Network/virtualNetworkGateways/gatewayType"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/virtualNetworkGateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "ExpressRouteGatewayCpuUtilization",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworkGateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-ExpressRouteGatewayCpuUtilization-threshold-Override_'), field('tags._amba-ExpressRouteGatewayCpuUtilization-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-ExpressRouteGatewayCpuUtilization-threshold-Override_'), field('tags._amba-ExpressRouteGatewayCpuUtilization-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for VNet Gateway Express Route CPU Utilization",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "ExpressRouteGatewayCpuUtilization",
                                "metricNamespace": "Microsoft.Network/virtualNetworkGateways",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "ExpressRouteGatewayCpuUtilization"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-GatewayERCPUAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_VnetGw_ExpressRouteCpuUtil_Alert",
        "displayName": "Deploy VNetG ExpressRoute CPU Utilization Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelIngressPacketDropMismatch_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.4.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Vnet Gateway Ingress Packet Drop Mismatch Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelIngressPacketDropMismatch_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "microsoft.network/virtualNetworkGateways",
                "field": "type"
              },
              {
                "equals": "VPN",
                "field": "Microsoft.Network/virtualNetworkGateways/gatewayType"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "microsoft.network/virtualNetworkGateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "TunnelIngressPacketDropTSMismatch",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.network/virtualNetworkGateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator"
                  },
                  {
                    "equals": "Medium",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Vnet Gateway tunnel TunnelIngressPacketDropTSMismatch",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "failingPeriods": {
                              "value": "[parameters('failingPeriods')]"
                            },
                            "evaluationPeriods": {
                              "value": "[parameters('evaluationPeriods')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                  "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                },
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "TunnelIngressPacketDropTSMismatch",
                                "metricNamespace": "microsoft.network/virtualNetworkGateways",
                                "criterionType": "DynamicThresholdCriterion",
                                "metricName": "TunnelIngressPacketDropTSMismatch",
                                "alertSensitivity": "Medium"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-TunnelIngressPacketDropTSMismatchAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_VnetGw_TunnelIngressPacketDropMismatch_Alert",
        "displayName": "Deploy VNetG Ingress Packet Drop Mismatch Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_dataDiskSpace_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Hybrid Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM data Disk Space Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_dataDiskSpace_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "computersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Array of Computer to be monitored",
              "displayName": "Computers to be included to be monitored"
            },
            "type": "array"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.HybridCompute/machines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-HybridVMLowDataDiskSpaceAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-FreeSpacePercentage-Data-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"FreeSpacePercentage\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk !in (\"C:\",\"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-FreeSpacePercentage-Data-threshold-Override_\", tostring(tags.[\"_amba-FreeSpacePercentage-Data-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue < appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "computersToInclude": {
                      "value": "[parameters('computersToInclude')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "computersToInclude": {
                        "type": "array"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine dataDiskSpace",
                                  "displayName": "[concat(subscription().displayName, '-HybridVMLowDataDiskSpaceAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "computersToInclude": {
                                      "value": "[parameters('computersToInclude')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": "[parameters('computersToInclude')]"
                                          },
                                          {
                                            "operator": "Include",
                                            "name": "Disk",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.HybridCompute/machines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let overridenResource = (arg(\"\").resources | where type == \"microsoft.hybridcompute/machines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-FreeSpacePercentage-Data-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.HybridCompute/machines\" | where _ResourceId !in~ (excludedResources) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"FreeSpacePercentage\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk !in (\"C:\",\"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-FreeSpacePercentage-Data-threshold-Override_\", tostring(tags.[\"_amba-FreeSpacePercentage-Data-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue < appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.HybridCompute/machines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-HybridVMLowDataDiskSpaceAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "HybridVMdataDiskSpaceAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_Hybrid_VM_dataDiskSpace_Alert",
        "displayName": "Deploy Hybrid VM Data Disk Space Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_dataDiskReadLatency_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.5.0",
          "category": "Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM dataDiskReadLatency Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_dataDiskReadLatency_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "30",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "computersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Array of Computer to be monitored",
              "displayName": "Computers to be included to be monitored"
            },
            "type": "array"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Compute/virtualMachines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-VMHighDataDiskReadLatencyAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-ReadLatencyMs-Data-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | where _ResourceId !in~ (excludedVMSSNodes) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"ReadLatencyMs\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk !in (\"C:\", \"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-ReadLatencyMs-Data-threshold-Override_\", tostring(tags.[\"_amba-ReadLatencyMs-Data-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "computersToInclude": {
                      "value": "[parameters('computersToInclude')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "computersToInclude": {
                        "type": "array"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine dataDiskReadLatency",
                                  "displayName": "[concat(subscription().displayName, '-VMHighDataDiskReadLatencyAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "computersToInclude": {
                                      "value": "[parameters('computersToInclude')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": "[parameters('computersToInclude')]"
                                          },
                                          {
                                            "operator": "Include",
                                            "name": "Disk",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-ReadLatencyMs-Data-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | where _ResourceId !in~ (excludedVMSSNodes) | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"ReadLatencyMs\" | extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | where Disk !in (\"C:\", \"/\") | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-ReadLatencyMs-Data-threshold-Override_\", tostring(tags.[\"_amba-ReadLatencyMs-Data-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, Disk, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.Compute/virtualMachines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-VMHighDataDiskReadLatencyAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "VMdataDiskReadLatencyAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_VM_dataDiskReadLatency_Alert",
        "displayName": "Deploy VM Data Disk Read Latency Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_StorageAccount_Availability_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Storage",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy SA Availability Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_StorageAccount_Availability_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring resource. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "90",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Storage/storageAccounts",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Storage/storageAccounts",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "Availability",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Storage/storageAccounts/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-Availability-threshold-Override_'), field('tags._amba-Availability-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-Availability-threshold-Override_'), field('tags._amba-Availability-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Storage Account Availability",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "Availability",
                                "metricNamespace": "Microsoft.Storage/storageAccounts",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "Availability"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-AvailabilityAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_StorageAccount_Availability_Alert",
        "displayName": "Deploy SA Availability Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_Egress_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VPN Gateway Egress Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_Egress_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "microsoft.network/vpngateways",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "microsoft.network/vpngateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "tunnelegressbytes",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.network/vpngateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-tunnelegressbytes-threshold-Override_'), field('tags._amba-tunnelegressbytes-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-tunnelegressbytes-threshold-Override_'), field('tags._amba-tunnelegressbytes-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for VPN Gateway tunnel egress bytes",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "tunnelegressbytes",
                                "metricNamespace": "microsoft.network/vpngateways",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "tunnelegressbytes"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-TunnelEgressAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_VPNGw_Egress_Alert",
        "displayName": "Deploy VPNG Egress Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_ApplicationGatewayTotalTime_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.4.1",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Azure Application Gateway ApplicationGatewayTotalTime Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_ApplicationGatewayTotalTime_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "alertSensitivity": {
            "allowedValues": [
              "Low",
              "Medium",
              "High"
            ],
            "defaultValue": "Medium",
            "metadata": {
              "description": "Alert Sensitivity for the alert",
              "displayName": "Alert Sensitivity"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/applicationgateways",
                "field": "type"
              },
              {
                "field": "Microsoft.Network/applicationgateways/sku.name",
                "In": [
                  "Standard_v2",
                  "WAF_v2"
                ]
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/applicationgateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "ApplicationGatewayTotalTime",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/applicationgateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator"
                  },
                  {
                    "equals": "[parameters('alertSensitivity')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    },
                    "alertSensitivity": {
                      "value": "[parameters('alertSensitivity')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      },
                      "alertSensitivity": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for App Gateway ApplicationGatewayTotalTime",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "failingPeriods": {
                              "value": "[parameters('failingPeriods')]"
                            },
                            "evaluationPeriods": {
                              "value": "[parameters('evaluationPeriods')]"
                            },
                            "alertSensitivity": {
                              "value": "[parameters('alertSensitivity')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                  "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                },
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "ApplicationGatewayTotalTime",
                                "metricNamespace": "Microsoft.Network/applicationgateways",
                                "criterionType": "DynamicThresholdCriterion",
                                "metricName": "ApplicationGatewayTotalTime",
                                "alertSensitivity": "[parameters('alertSensitivity')]"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-agApplicationGatewayTotalTime')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_AG_ApplicationGatewayTotalTime_Alert",
        "displayName": "Deploy AGW ApplicationGatewayTotalTime Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_ResourceHealth_Unhealthy_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to Deploy Resource Health Unhealthy Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_ResourceHealth_Unhealthy_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_amba": true
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "BYOActionGroup": {
            "defaultValue": [],
            "metadata": {
              "description": "The Resource IDs of existing Action Groups currently deployed in the environment.",
              "displayName": "Customer defined Action Group Resource IDs"
            },
            "type": "array"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Resources/subscriptions",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/activityLogAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/ActivityLogAlerts/enabled"
                  },
                  {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "value": "[empty(parameters('BYOActionGroup'))]",
                            "equals": true
                          },
                          {
                            "field": "Microsoft.Insights/ActivityLogAlerts/actions.actionGroups[*].actionGroupId",
                            "contains": "ag-AMBA-SH-"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "value": "[empty(parameters('BYOActionGroup'))]",
                            "equals": false
                          },
                          {
                            "count": {
                              "field": "Microsoft.Insights/ActivityLogAlerts/actions.actionGroups[*]",
                              "where": {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Insights/ActivityLogAlerts/actions.actionGroups[*].actionGroupId",
                                    "in": "[parameters('BYOActionGroup')]"
                                  }
                                ]
                              }
                            },
                            "greaterOrEquals": 1
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "equals": 1,
                    "count": {
                      "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*]",
                      "where": {
                        "anyOf": [
                          {
                            "allOf": [
                              {
                                "equals": "category",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "ResourceHealth",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "BYOActionGroup": {
                      "value": "[parameters('BYOActionGroup')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "string"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "BYOActionGroup": {
                        "type": "array"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {
                      "copy": [
                        {
                          "name": "varActionGroupIds",
                          "mode": "serial",
                          "count": "[length(parameters('BYOActionGroup'))]",
                          "input": {
                            "actionGroupId": "[trim(parameters('BYOActionGroup')[copyIndex('varActionGroupIds')])]"
                          }
                        }
                      ]
                    },
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "BYOActionGroup": {
                              "value": "[parameters('BYOActionGroup')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "BYOActionGroup": {
                                "type": "array"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "microsoft.insights/activityLogAlerts",
                                "properties": {
                                  "description": "Resource Health Unhealthy Alert",
                                  "parameters": {
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    }
                                  },
                                  "enabled": "[parameters('enabled')]",
                                  "scopes": [
                                    "[subscription().id]"
                                  ],
                                  "condition": {
                                    "allOf": [
                                      {
                                        "equals": "ResourceHealth",
                                        "field": "category"
                                      },
                                      {
                                        "anyOf": [
                                          {
                                            "equals": "PlatformInitiated",
                                            "field": "properties.cause"
                                          },
                                          {
                                            "equals": "UserInitiated",
                                            "field": "properties.cause"
                                          }
                                        ]
                                      },
                                      {
                                        "anyOf": [
                                          {
                                            "equals": "Degraded",
                                            "field": "properties.currentHealthStatus"
                                          },
                                          {
                                            "equals": "Unavailable",
                                            "field": "properties.currentHealthStatus"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "actions": {
                                    "actionGroups": [
                                      {
                                        "actionGroupId": "[concat(subscription().Id, '/resourceGroups/', parameters('alertResourceGroupName'), '/providers/microsoft.insights/actionGroups/', 'ag-AMBA-SH-', subscription().displayName, '-001')]",
                                        "webhookProperties": {}
                                      }
                                    ]
                                  }
                                },
                                "apiVersion": "2020-10-01",
                                "location": "global",
                                "name": "ResourceHealthUnhealthyAlert",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "condition": "[empty(parameters('BYOActionGroup'))]"
                              },
                              {
                                "type": "microsoft.insights/activityLogAlerts",
                                "properties": {
                                  "description": "Resource Health Unhealthy Alert",
                                  "parameters": {
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    }
                                  },
                                  "enabled": "[parameters('enabled')]",
                                  "scopes": [
                                    "[subscription().id]"
                                  ],
                                  "condition": {
                                    "allOf": [
                                      {
                                        "equals": "ResourceHealth",
                                        "field": "category"
                                      },
                                      {
                                        "anyOf": [
                                          {
                                            "equals": "PlatformInitiated",
                                            "field": "properties.cause"
                                          },
                                          {
                                            "equals": "UserInitiated",
                                            "field": "properties.cause"
                                          }
                                        ]
                                      },
                                      {
                                        "anyOf": [
                                          {
                                            "equals": "Degraded",
                                            "field": "properties.currentHealthStatus"
                                          },
                                          {
                                            "equals": "Unavailable",
                                            "field": "properties.currentHealthStatus"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "actions": {
                                    "actionGroups": "[variables('varActionGroupIds')]"
                                  }
                                },
                                "apiVersion": "2020-10-01",
                                "location": "global",
                                "name": "ResourceHealthUnhealthyAlert",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "condition": "[not(empty(parameters('BYOActionGroup')))]"
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "ResourceHealtAlert",
                        "dependsOn": [
                          "[resourceId('Microsoft.Resources/resourceGroups', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_activitylog_ResourceHealth_Unhealthy_Alert",
        "displayName": "Deploy Resource Health Unhealthy Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_RouteTable_Update": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.1.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to Deploy Activity Log Route Table Update Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_RouteTable_Update",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/routeTables",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/activityLogAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/ActivityLogAlerts/enabled"
                  },
                  {
                    "equals": 2,
                    "count": {
                      "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*]",
                      "where": {
                        "anyOf": [
                          {
                            "allOf": [
                              {
                                "equals": "category",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "Administrative",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "equals": "operationName",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "Microsoft.Network/routeTables/routes/write",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "name": "ActivityUDRUpdate",
              "deployment": {
                "properties": {
                  "parameters": {
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "string"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "microsoft.insights/activityLogAlerts",
                                "properties": {
                                  "description": "Activity Log Route table update",
                                  "parameters": {
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    }
                                  },
                                  "enabled": "[parameters('enabled')]",
                                  "scopes": [
                                    "[subscription().id]"
                                  ],
                                  "condition": {
                                    "allOf": [
                                      {
                                        "equals": "Administrative",
                                        "field": "category"
                                      },
                                      {
                                        "equals": "Microsoft.Network/routeTables/routes/write",
                                        "field": "operationName"
                                      },
                                      {
                                        "field": "status",
                                        "containsAny": [
                                          "succeeded"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "apiVersion": "2020-10-01",
                                "location": "global",
                                "name": "ActivityUDRUpdate",
                                "tags": {
                                  "_deployed_by_amba": true
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "ActivityUDRUpdate",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourcegroup"
            }
          }
        },
        "name": "Deploy_activitylog_RouteTable_Update",
        "displayName": "Deploy Activity Log Route Table Update Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERP_ExpressRoutLineProtocol_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.2.1",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy ER Direct LineProtocol Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERP_ExpressRoutLineProtocol_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "0.9",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/expressRoutePorts",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/expressRoutePorts",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "LineProtocol",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/expressRoutePorts/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-LineProtocol-threshold-Override_'), field('tags._amba-LineProtocol-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-LineProtocol-threshold-Override_'), field('tags._amba-LineProtocol-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for ER Direct Connection LineProtocolPerSecond",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "LineProtocol",
                                "metricNamespace": "Microsoft.Network/expressRoutePorts",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "LineProtocol"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-DirectERLineProtocolAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_ERP_ExpressRoutLineProtocol_Alert",
        "displayName": "Deploy ER Direct ExpressRoute LineProtocol Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_BackendLastByteResponseTime_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.4.1",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Azure Application Gateway BackendLastByteResponseTime Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_BackendLastByteResponseTime_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "alertSensitivity": {
            "allowedValues": [
              "Low",
              "Medium",
              "High"
            ],
            "defaultValue": "Medium",
            "metadata": {
              "description": "Alert Sensitivity for the alert",
              "displayName": "Alert Sensitivity"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/applicationgateways",
                "field": "type"
              },
              {
                "field": "Microsoft.Network/applicationgateways/sku.name",
                "In": [
                  "Standard_v2",
                  "WAF_v2"
                ]
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/applicationgateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "BackendLastByteResponseTime",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/applicationgateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator"
                  },
                  {
                    "equals": "[parameters('alertSensitivity')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    },
                    "alertSensitivity": {
                      "value": "[parameters('alertSensitivity')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      },
                      "alertSensitivity": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for App Gateway BackendLastByteResponseTime",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "failingPeriods": {
                              "value": "[parameters('failingPeriods')]"
                            },
                            "evaluationPeriods": {
                              "value": "[parameters('evaluationPeriods')]"
                            },
                            "alertSensitivity": {
                              "value": "[parameters('alertSensitivity')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                  "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                },
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "BackendLastByteResponseTime",
                                "metricNamespace": "Microsoft.Network/applicationgateways",
                                "criterionType": "DynamicThresholdCriterion",
                                "metricName": "BackendLastByteResponseTime",
                                "alertSensitivity": "[parameters('alertSensitivity')]"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-agBackendLastByteResponseTime')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_AG_BackendLastByteResponseTime_Alert",
        "displayName": "Deploy AGW BackendLastByteResponseTime Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_ServiceHealth_Maintenance": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to Deploy Service Health Maintenance Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_ServiceHealth_Maintenance",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_amba": true
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "ALZMonitorActionGroupEmail": {
            "defaultValue": [],
            "metadata": {
              "description": "Email addresses to send alerts to",
              "displayName": "Action Group Email Addresses"
            },
            "type": "Array"
          },
          "BYOActionGroup": {
            "defaultValue": [],
            "metadata": {
              "description": "The Resource IDs of existing Action Groups currently deployed in the environment.",
              "displayName": "Customer defined Action Group Resource IDs"
            },
            "type": "array"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Resources/subscriptions",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/activityLogAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/ActivityLogAlerts/enabled"
                  },
                  {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "value": "[empty(parameters('BYOActionGroup'))]",
                            "equals": true
                          },
                          {
                            "field": "Microsoft.Insights/ActivityLogAlerts/actions.actionGroups[*].actionGroupId",
                            "contains": "ag-AMBA-SH-"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "value": "[empty(parameters('BYOActionGroup'))]",
                            "equals": false
                          },
                          {
                            "count": {
                              "field": "Microsoft.Insights/ActivityLogAlerts/actions.actionGroups[*]",
                              "where": {
                                "anyOf": [
                                  {
                                    "field": "Microsoft.Insights/ActivityLogAlerts/actions.actionGroups[*].actionGroupId",
                                    "in": "[parameters('BYOActionGroup')]"
                                  }
                                ]
                              }
                            },
                            "greaterOrEquals": 1
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "equals": 2,
                    "count": {
                      "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*]",
                      "where": {
                        "anyOf": [
                          {
                            "allOf": [
                              {
                                "equals": "category",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "ServiceHealth",
                                "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "equals": "properties.incidentType",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].field"
                              },
                              {
                                "equals": "Maintenance",
                                "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].equals"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "ALZMonitorActionGroupEmail": {
                      "value": "[parameters('ALZMonitorActionGroupEmail')]"
                    },
                    "BYOActionGroup": {
                      "value": "[parameters('BYOActionGroup')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "string"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "ALZMonitorActionGroupEmail": {
                        "type": "Array"
                      },
                      "BYOActionGroup": {
                        "type": "array"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {
                      "copy": [
                        {
                          "name": "varActionGroupIds",
                          "mode": "serial",
                          "count": "[length(parameters('BYOActionGroup'))]",
                          "input": {
                            "actionGroupId": "[trim(parameters('BYOActionGroup')[copyIndex('varActionGroupIds')])]"
                          }
                        }
                      ]
                    },
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "ALZMonitorActionGroupEmail": {
                              "value": "[parameters('ALZMonitorActionGroupEmail')]"
                            },
                            "BYOActionGroup": {
                              "value": "[parameters('BYOActionGroup')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "ALZMonitorActionGroupEmail": {
                                "type": "Array"
                              },
                              "BYOActionGroup": {
                                "type": "array"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "microsoft.insights/activityLogAlerts",
                                "properties": {
                                  "description": "Service Health Planned Maintenance Alert",
                                  "parameters": {
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    }
                                  },
                                  "enabled": "[parameters('enabled')]",
                                  "scopes": [
                                    "[subscription().id]"
                                  ],
                                  "condition": {
                                    "allOf": [
                                      {
                                        "equals": "ServiceHealth",
                                        "field": "category"
                                      },
                                      {
                                        "equals": "Maintenance",
                                        "field": "properties.incidentType"
                                      }
                                    ]
                                  },
                                  "actions": {
                                    "actionGroups": [
                                      {
                                        "actionGroupId": "[concat(subscription().Id, '/resourceGroups/', parameters('alertResourceGroupName'), '/providers/microsoft.insights/actionGroups/', 'ag-AMBA-SH-', subscription().displayName, '-001')]"
                                      }
                                    ]
                                  }
                                },
                                "apiVersion": "2020-10-01",
                                "location": "global",
                                "name": "ServiceHealthPlannedMaintenance",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "condition": "[empty(parameters('BYOActionGroup'))]"
                              },
                              {
                                "type": "microsoft.insights/activityLogAlerts",
                                "properties": {
                                  "description": "Service Health Planned Maintenance Alert",
                                  "parameters": {
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    }
                                  },
                                  "enabled": "[parameters('enabled')]",
                                  "scopes": [
                                    "[subscription().id]"
                                  ],
                                  "condition": {
                                    "allOf": [
                                      {
                                        "equals": "ServiceHealth",
                                        "field": "category"
                                      },
                                      {
                                        "equals": "Maintenance",
                                        "field": "properties.incidentType"
                                      }
                                    ]
                                  },
                                  "actions": {
                                    "actionGroups": "[variables('varActionGroupIds')]"
                                  }
                                },
                                "apiVersion": "2020-10-01",
                                "location": "global",
                                "name": "ServiceHealthPlannedMaintenance",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "condition": "[not(empty(parameters('BYOActionGroup')))]"
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "ServiceHealthMaintenance",
                        "dependsOn": [
                          "[resourceId('Microsoft.Resources/resourceGroups', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourcegroup"
            }
          }
        },
        "name": "Deploy_activitylog_ServiceHealth_Maintenance",
        "displayName": "Deploy Service Health Maintenance Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelBandwidth_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Virtual Network Gateway Tunnel Bandwidth Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelBandwidth_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/virtualNetworkGateways",
                "field": "type"
              },
              {
                "equals": "VPN",
                "field": "Microsoft.Network/virtualNetworkGateways/gatewayType"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/virtualNetworkGateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "TunnelAverageBandwidth",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworkGateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-TunnelAverageBandwidth-threshold-Override_'), field('tags._amba-TunnelAverageBandwidth-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-TunnelAverageBandwidth-threshold-Override_'), field('tags._amba-TunnelAverageBandwidth-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for VNet Gateway Tunnel Avg Bandwidth",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "TunnelAverageBandwidth",
                                "metricNamespace": "Microsoft.Network/virtualNetworkGateways",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "TunnelAverageBandwidth"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-TunnelBandwidthAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_VnetGw_TunnelBandwidth_Alert",
        "displayName": "Deploy VNetG Tunnel Bandwidth Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Latency_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Key Vault",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy KeyVault Latency Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Latency_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "1000",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "microsoft.keyvault/vaults",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "microsoft.keyvault/vaults",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "ServiceApiLatency",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/microsoft.keyvault/vaults/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-ServiceApiLatency-threshold-Override_'), field('tags._amba-ServiceApiLatency-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-ServiceApiLatency-threshold-Override_'), field('tags._amba-ServiceApiLatency-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for KeyVault Latency",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "ServiceApiLatency",
                                "metricNamespace": "microsoft.keyvault/vaults",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "ServiceApiLatency"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-LatencyAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_KeyVault_Latency_Alert",
        "displayName": "Deploy Key Vault Latency Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ALB_HealthProbeStatus_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.2.1",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Azure Load Balancer Health Probe Status Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ALB_HealthProbeStatus_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "90",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/loadBalancers",
                "field": "type"
              },
              {
                "field": "Microsoft.Network/loadBalancers/sku.name",
                "in": [
                  "Standard",
                  "Gateway"
                ]
              },
              {
                "equals": "Regional",
                "field": "Microsoft.Network/loadBalancers/sku.tier"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/loadBalancers",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "DipAvailability",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-DipAvailability-threshold-Override_'), field('tags._amba-DipAvailability-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-DipAvailability-threshold-Override_'), field('tags._amba-DipAvailability-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for ALB Health Probe Status",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "DipAvailability",
                                "metricNamespace": "Microsoft.Network/loadBalancers",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "DipAvailability"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-ALBHealthProbeStatus')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_ALB_HealthProbeStatus_Alert",
        "displayName": "Deploy ALB Health Probe Status Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_ExpressRouteBitsPerSecond_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.0",
          "category": "Network",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Virtual Network Gateway Express Route Bits Per Second Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_ExpressRouteBitsPerSecond_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/virtualNetworkGateways",
                "field": "type"
              },
              {
                "equals": "ExpressRoute",
                "field": "Microsoft.Network/virtualNetworkGateways/gatewayType"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/virtualNetworkGateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "ExpressRouteGatewayBitsPerSecond",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworkGateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-ExpressRouteGatewayBitsPerSecond-threshold-Override_'), field('tags._amba-ExpressRouteGatewayBitsPerSecond-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-ExpressRouteGatewayBitsPerSecond-threshold-Override_'), field('tags._amba-ExpressRouteGatewayBitsPerSecond-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for VNet Gateway Express Route Bits Per Second",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "ExpressRouteGatewayBitsPerSecond",
                                "metricNamespace": "Microsoft.Network/virtualNetworkGateways",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "ExpressRouteGatewayBitsPerSecond"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-GatewayERBitsAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_VnetGw_ExpressRouteBitsPerSecond_Alert",
        "displayName": "Deploy VNetG ExpressRoute Bits Per Second Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_NetworkOut_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.5.0",
          "category": "Compute",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy VM Network Out Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_NetworkOut_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "alertResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the Resource group the alert is placed in",
              "displayName": "Resource Group Location"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT24H"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "alertResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Resource group the alert is placed in",
              "displayName": "Resource Group Name"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "10000000",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "alertResourceGroupTags": {
            "defaultValue": {
              "Project": "amba-monitoring"
            },
            "metadata": {
              "description": "Tags on the Resource group the alert is placed in",
              "displayName": "Resource Group Tags"
            },
            "type": "Object"
          },
          "timeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "TimeAggregation"
            },
            "type": "String"
          },
          "UAMIResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity.",
              "displayName": "User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "operator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Operator"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          },
          "autoResolveTime": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve time for the alert in ISO 8601 format",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          },
          "computersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Array of Computer to be monitored",
              "displayName": "Computers to be included to be monitored"
            },
            "type": "array"
          },
          "autoResolve": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Auto Resolve"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Compute/virtualMachines",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "[concat(subscription().displayName, '-VMHighNetworkOutAlert')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/displayName"
                  },
                  {
                    "equals": "[subscription().id]",
                    "field": "Microsoft.Insights/scheduledQueryRules/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/autoMitigate"
                  },
                  {
                    "equals": "[parameters('operator')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator"
                  },
                  {
                    "equals": "[parameters('timeAggregation')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-WriteBytesPerSecond-Data-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | where _ResourceId !in~ (excludedVMSSNodes) | where Origin == \"vm.azm.ms\" | where Namespace == \"Network\" and Name == \"WriteBytesPerSecond\" | extend NetworkInterface=tostring(todynamic(Tags)[\"vm.azm.ms/networkDeviceId\"]) | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, NetworkInterface | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-WriteBytesPerSecond-Data-threshold-Override_\", tostring(tags.[\"_amba-WriteBytesPerSecond-Data-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, NetworkInterface, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query"
                  },
                  {
                    "field": "identity.userAssignedIdentities",
                    "containsKey": "[parameters('UAMIResourceId')]"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "MonitorDisableTagValues": {
                      "value": "[parameters('MonitorDisableTagValues')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "MonitorDisableTagName": {
                      "value": "[parameters('MonitorDisableTagName')]"
                    },
                    "alertResourceGroupLocation": {
                      "value": "[parameters('alertResourceGroupLocation')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "alertResourceGroupName": {
                      "value": "[parameters('alertResourceGroupName')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[parameters('threshold')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "alertResourceGroupTags": {
                      "value": "[parameters('alertResourceGroupTags')]"
                    },
                    "timeAggregation": {
                      "value": "[parameters('timeAggregation')]"
                    },
                    "UAMIResourceId": {
                      "value": "[parameters('UAMIResourceId')]"
                    },
                    "operator": {
                      "value": "[parameters('operator')]"
                    },
                    "autoResolveTime": {
                      "value": "[parameters('autoResolveTime')]"
                    },
                    "computersToInclude": {
                      "value": "[parameters('computersToInclude')]"
                    },
                    "autoResolve": {
                      "value": "[parameters('autoResolve')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "MonitorDisableTagValues": {
                        "type": "Array"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "MonitorDisableTagName": {
                        "type": "String"
                      },
                      "alertResourceGroupLocation": {
                        "type": "string"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "alertResourceGroupName": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "alertResourceGroupTags": {
                        "type": "object"
                      },
                      "timeAggregation": {
                        "type": "String"
                      },
                      "UAMIResourceId": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "String"
                      },
                      "autoResolveTime": {
                        "type": "String"
                      },
                      "computersToInclude": {
                        "type": "array"
                      },
                      "autoResolve": {
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Resources/resourceGroups",
                        "apiVersion": "2021-04-01",
                        "location": "[parameters('alertResourceGroupLocation')]",
                        "name": "[parameters('alertResourceGroupName')]",
                        "tags": "[parameters('alertResourceGroupTags')]"
                      },
                      {
                        "resourceGroup": "[parameters('alertResourceGroupName')]",
                        "type": "Microsoft.Resources/deployments",
                        "properties": {
                          "parameters": {
                            "alertResourceGroupLocation": {
                              "value": "[parameters('alertResourceGroupLocation')]"
                            },
                            "alertResourceGroupName": {
                              "value": "[parameters('alertResourceGroupName')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "UAMIResourceId": {
                              "value": "[parameters('UAMIResourceId')]"
                            }
                          },
                          "template": {
                            "parameters": {
                              "alertResourceGroupLocation": {
                                "type": "string"
                              },
                              "alertResourceGroupName": {
                                "type": "string"
                              },
                              "enabled": {
                                "type": "string"
                              },
                              "UAMIResourceId": {
                                "type": "string"
                              }
                            },
                            "contentVersion": "1.0.0.0",
                            "variables": {},
                            "resources": [
                              {
                                "type": "Microsoft.Insights/scheduledQueryRules",
                                "properties": {
                                  "description": "Log Alert for Virtual Machine NetworkOut",
                                  "displayName": "[concat(subscription().displayName, '-VMHighNetworkOutAlert')]",
                                  "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                  "parameters": {
                                    "evaluationFrequency": {
                                      "value": "[parameters('evaluationFrequency')]"
                                    },
                                    "MonitorDisableTagValues": {
                                      "value": "[parameters('MonitorDisableTagValues')]"
                                    },
                                    "autoMitigate": {
                                      "value": "[parameters('autoMitigate')]"
                                    },
                                    "MonitorDisableTagName": {
                                      "value": "[parameters('MonitorDisableTagName')]"
                                    },
                                    "alertResourceGroupLocation": {
                                      "value": "[parameters('alertResourceGroupLocation')]"
                                    },
                                    "windowSize": {
                                      "value": "[parameters('windowSize')]"
                                    },
                                    "alertResourceGroupName": {
                                      "value": "[parameters('alertResourceGroupName')]"
                                    },
                                    "enabled": {
                                      "value": "[parameters('enabled')]"
                                    },
                                    "severity": {
                                      "value": "[parameters('severity')]"
                                    },
                                    "threshold": {
                                      "value": "[parameters('threshold')]"
                                    },
                                    "failingPeriods": {
                                      "value": "[parameters('failingPeriods')]"
                                    },
                                    "evaluationPeriods": {
                                      "value": "[parameters('evaluationPeriods')]"
                                    },
                                    "UAMIResourceId": {
                                      "value": "[parameters('UAMIResourceId')]"
                                    },
                                    "autoResolveTime": {
                                      "value": "[parameters('autoResolveTime')]"
                                    },
                                    "computersToInclude": {
                                      "value": "[parameters('computersToInclude')]"
                                    },
                                    "autoResolve": {
                                      "value": "[parameters('autoResolve')]"
                                    }
                                  },
                                  "autoMitigate": "[parameters('autoMitigate')]",
                                  "windowSize": "[parameters('windowSize')]",
                                  "enabled": "[parameters('enabled')]",
                                  "severity": "[parameters('severity')]",
                                  "criteria": {
                                    "allOf": [
                                      {
                                        "threshold": 0,
                                        "failingPeriods": {
                                          "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                          "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                        },
                                        "timeAggregation": "[parameters('timeAggregation')]",
                                        "operator": "[parameters('operator')]",
                                        "resourceIdColumn": "_ResourceId",
                                        "dimensions": [
                                          {
                                            "operator": "Include",
                                            "name": "Computer",
                                            "values": "[parameters('computersToInclude')]"
                                          },
                                          {
                                            "operator": "Include",
                                            "name": "NetworkInterface",
                                            "values": [
                                              "*"
                                            ]
                                          }
                                        ],
                                        "query": "[format('let policyThresholdString = \"{2}\"; let excludedResources = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = id, tags | where parse_json(tostring(tags.[\"{0}\"])) in~ (\"{1}\")); let excludedVMSSNodes = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | extend isVMSS = isnotempty(properties.virtualMachineScaleSet) | where isVMSS | project id, name); let overridenResource = (arg(\"\").resources | where type =~ \"Microsoft.Compute/virtualMachines\" | project _ResourceId = tolower(id), tags | where tags contains \"_amba-WriteBytesPerSecond-Data-threshold-Override_\"); InsightsMetrics | where _ResourceId has \"Microsoft.Compute/virtualMachines\" | where _ResourceId !in~ (excludedResources) | where _ResourceId !in~ (excludedVMSSNodes) | where Origin == \"vm.azm.ms\" | where Namespace == \"Network\" and Name == \"WriteBytesPerSecond\" | extend NetworkInterface=tostring(todynamic(Tags)[\"vm.azm.ms/networkDeviceId\"]) | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, NetworkInterface | join hint.remote=left kind=leftouter overridenResource on _ResourceId | project-away _ResourceId1 | extend appliedThresholdString = iif(tags contains \"_amba-WriteBytesPerSecond-Data-threshold-Override_\", tostring(tags.[\"_amba-WriteBytesPerSecond-Data-threshold-Override_\"]), policyThresholdString) | extend appliedThreshold = toint(appliedThresholdString) | where AggregatedValue > appliedThreshold | project TimeGenerated, Computer, _ResourceId, NetworkInterface, AggregatedValue', parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\",\"'), parameters('threshold'))]"
                                      }
                                    ]
                                  },
                                  "scopes": [
                                    "[subscription().Id]"
                                  ],
                                  "ruleResolveConfiguration": {
                                    "timeToResolve": "[parameters('autoResolveTime')]",
                                    "autoResolved": "[parameters('autoResolve')]"
                                  },
                                  "targetResourceTypes": [
                                    "Microsoft.Compute/virtualMachines"
                                  ]
                                },
                                "apiVersion": "2022-08-01-preview",
                                "location": "[parameters('alertResourceGroupLocation')]",
                                "name": "[concat(subscription().displayName, '-VMHighNetworkOutAlert')]",
                                "tags": {
                                  "_deployed_by_amba": true
                                },
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[parameters('UAMIResourceId')]": {}
                                  }
                                }
                              }
                            ],
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                          },
                          "mode": "Incremental"
                        },
                        "apiVersion": "2019-10-01",
                        "name": "VMNetworkOutAlert",
                        "dependsOn": [
                          "[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                        ]
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                },
                "location": "australiaeast"
              },
              "resourceGroupName": "[parameters('alertResourceGroupName')]",
              "deploymentScope": "subscription",
              "existenceScope": "resourceGroup"
            }
          }
        },
        "name": "Deploy_VM_NetworkOut_Alert",
        "displayName": "Deploy VM Network Write Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AA_TotalJob_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.2.1",
          "category": "Automation",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Automation Account TotalJob Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AA_TotalJob_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name to disable monitoring. Set to true if monitoring should be disabled",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "0",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Automation/automationAccounts",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Automation/automationAccounts",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "TotalJob",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Automation/automationAccounts/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-TotalJob-threshold-Override_'), field('tags._amba-TotalJob-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-TotalJob-threshold-Override_'), field('tags._amba-TotalJob-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Automation Account TotalJob Alert",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "TotalJob",
                                "metricNamespace": "Microsoft.Automation/automationAccounts",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "TotalJob",
                                "dimensions": [
                                  {
                                    "operator": "Exclude",
                                    "name": "Status",
                                    "values": [
                                      "Completed"
                                    ]
                                  }
                                ]
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-TotalJob')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_AA_TotalJob_Alert",
        "displayName": "Deploy Automation Account TotalJob Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_RecoveryVault_ASRHealthMonitor_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.0.0",
          "category": "Site Recovery",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/update Recovery Vault ASR Health Alerting to Azure monitor alerts",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_RecoveryVault_ASRHealthMonitor_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "modify",
              "audit",
              "disabled"
            ],
            "defaultValue": "modify",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.RecoveryServices/Vaults",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              },
              {
                "anyOf": [
                  {
                    "field": "Microsoft.RecoveryServices/vaults/monitoringSettings.azureMonitorAlertSettings.alertsForAllReplicationIssues",
                    "notEquals": "Enabled"
                  },
                  {
                    "field": "Microsoft.RecoveryServices/vaults/monitoringSettings.azureMonitorAlertSettings.alertsForAllFailoverIssues",
                    "notEquals": "Enabled"
                  }
                ]
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "conflictEffect": "audit",
              "operations": [
                {
                  "value": "Disabled",
                  "field": "Microsoft.RecoveryServices/vaults/monitoringSettings.classicAlertSettings.emailNotificationsForSiteRecovery",
                  "operation": "addOrReplace"
                },
                {
                  "value": "Enabled",
                  "field": "Microsoft.RecoveryServices/vaults/monitoringSettings.azureMonitorAlertSettings.alertsForAllReplicationIssues",
                  "operation": "addOrReplace"
                },
                {
                  "value": "Enabled",
                  "field": "Microsoft.RecoveryServices/vaults/monitoringSettings.azureMonitorAlertSettings.alertsForAllFailoverIssues",
                  "operation": "addOrReplace"
                }
              ]
            }
          }
        },
        "name": "Deploy_RecoveryVault_ASRHealthMonitor_Alert",
        "displayName": "Deploy RV ASR Health Monitoring Alerts"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_TM_EndpointHealth_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.2.1",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy FTraffic Manager Endpoint Health Health Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_TM_EndpointHealth_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "0.9",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/trafficmanagerprofiles",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/trafficmanagerprofiles",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "ProbeAgentCurrentEndpointStateByProfileResourceId",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/trafficmanagerprofiles/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "LessThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-EndpointHealth-threshold-Override_'), field('tags._amba-EndpointHealth-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-EndpointHealth-threshold-Override_'), field('tags._amba-EndpointHealth-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Traffic Manager Endpoint Health",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "name": "EndpointHealth",
                                "metricNamespace": "Microsoft.Network/trafficmanagerprofiles",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "ProbeAgentCurrentEndpointStateByProfileResourceId",
                                "dimensions": [
                                  {
                                    "operator": "Include",
                                    "name": "EndpointName",
                                    "values": [
                                      "*"
                                    ]
                                  }
                                ]
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-EndpointHealthAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_TM_EndpointHealth_Alert",
        "displayName": "Deploy Traffic Manager Endpoint Health Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_UnhealthyHostCount_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "version": "1.2.1",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy Azure Application Gateway Unhealthy Host Count Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_UnhealthyHostCount_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "threshold": {
            "defaultValue": "20",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Threshold"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Network/applicationgateways",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/applicationgateways",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "UnhealthyHostCount",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/applicationgateways/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator"
                  },
                  {
                    "equals": "[if(contains(field('tags'), '_amba-UnhealthyHostCount-threshold-Override_'), field('tags._amba-UnhealthyHostCount-threshold-Override_'), parameters('threshold'))]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "threshold": {
                      "value": "[if(contains(field('tags'), '_amba-UnhealthyHostCount-threshold-Override_'), field('tags._amba-UnhealthyHostCount-threshold-Override_'), parameters('threshold'))]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "threshold": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for App Gateway Unhealthy Host Count",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "threshold": {
                              "value": "[parameters('threshold')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "threshold": "[parameters('threshold')]",
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "CpuUtilization",
                                "metricNamespace": "Microsoft.Network/applicationgateways",
                                "criterionType": "StaticThresholdCriterion",
                                "metricName": "UnhealthyHostCount"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-agUnhealthyHostCount')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_AG_UnhealthyHostCount_Alert",
        "displayName": "Deploy AGW Unhealthy Host Count Alert"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FrontDoorCDN_Percentage4XX_Alert": {
        "metadata": {
          "_deployed_by_amba": "True",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.0",
          "category": "Networking",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Policy to audit/deploy FrontDoor CDN Profile Percentage4XX Alert",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FrontDoorCDN_Percentage4XX_Alert",
        "mode": "All",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "evaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Evaluation Frequency"
            },
            "type": "String"
          },
          "MonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "autoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Auto Mitigate"
            },
            "type": "String"
          },
          "MonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "windowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Window Size"
            },
            "type": "String"
          },
          "enabled": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Alert State"
            },
            "type": "String"
          },
          "severity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Severity"
            },
            "type": "String"
          },
          "failingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Failing Periods"
            },
            "type": "String"
          },
          "evaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Evaluation Periods"
            },
            "type": "String"
          },
          "effect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Effect of the policy",
              "displayName": "Effect"
            },
            "type": "String"
          }
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.Cdn/profiles",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('MonitorDisableTagName'), ']')]",
                "notIn": "[parameters('MonitorDisableTagValues')]"
              }
            ]
          },
          "then": {
            "effect": "[parameters('effect')]",
            "details": {
              "type": "Microsoft.Insights/metricAlerts",
              "existenceCondition": {
                "allOf": [
                  {
                    "equals": "Microsoft.Cdn/profiles",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace"
                  },
                  {
                    "equals": "Percentage4XX",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName"
                  },
                  {
                    "equals": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Cdn/profiles/', field('fullName'))]",
                    "field": "Microsoft.Insights/metricalerts/scopes[*]"
                  },
                  {
                    "equals": "[parameters('enabled')]",
                    "field": "Microsoft.Insights/metricAlerts/enabled"
                  },
                  {
                    "equals": "[parameters('evaluationFrequency')]",
                    "field": "Microsoft.Insights/metricAlerts/evaluationFrequency"
                  },
                  {
                    "equals": "[parameters('windowSize')]",
                    "field": "Microsoft.Insights/metricAlerts/windowSize"
                  },
                  {
                    "equals": "[parameters('severity')]",
                    "field": "Microsoft.Insights/metricalerts/severity"
                  },
                  {
                    "equals": "[parameters('autoMitigate')]",
                    "field": "Microsoft.Insights/metricAlerts/autoMitigate"
                  },
                  {
                    "equals": "Average",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation"
                  },
                  {
                    "equals": "GreaterThan",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator"
                  },
                  {
                    "equals": "Medium",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity"
                  },
                  {
                    "equals": "[parameters('failingPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert"
                  },
                  {
                    "equals": "[parameters('evaluationPeriods')]",
                    "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods"
                  }
                ]
              },
              "roleDefinitionIds": [
                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
              ],
              "deployment": {
                "properties": {
                  "parameters": {
                    "resourceId": {
                      "value": "[field('id')]"
                    },
                    "evaluationFrequency": {
                      "value": "[parameters('evaluationFrequency')]"
                    },
                    "autoMitigate": {
                      "value": "[parameters('autoMitigate')]"
                    },
                    "windowSize": {
                      "value": "[parameters('windowSize')]"
                    },
                    "enabled": {
                      "value": "[parameters('enabled')]"
                    },
                    "severity": {
                      "value": "[parameters('severity')]"
                    },
                    "failingPeriods": {
                      "value": "[parameters('failingPeriods')]"
                    },
                    "evaluationPeriods": {
                      "value": "[parameters('evaluationPeriods')]"
                    },
                    "resourceName": {
                      "value": "[field('name')]"
                    }
                  },
                  "template": {
                    "parameters": {
                      "resourceId": {
                        "metadata": {
                          "description": "Resource ID of the resource emitting the metric that will be used for the comparison",
                          "displayName": "resourceId"
                        },
                        "type": "String"
                      },
                      "evaluationFrequency": {
                        "type": "String"
                      },
                      "autoMitigate": {
                        "type": "String"
                      },
                      "windowSize": {
                        "type": "String"
                      },
                      "enabled": {
                        "type": "String"
                      },
                      "severity": {
                        "type": "String"
                      },
                      "failingPeriods": {
                        "type": "String"
                      },
                      "evaluationPeriods": {
                        "type": "String"
                      },
                      "resourceName": {
                        "metadata": {
                          "description": "Name of the resource",
                          "displayName": "resourceName"
                        },
                        "type": "String"
                      }
                    },
                    "contentVersion": "1.0.0.0",
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Insights/metricAlerts",
                        "properties": {
                          "description": "Metric Alert for Frontdoor CDN Origin Latency",
                          "evaluationFrequency": "[parameters('evaluationFrequency')]",
                          "parameters": {
                            "evaluationFrequency": {
                              "value": "[parameters('evaluationFrequency')]"
                            },
                            "autoMitigate": {
                              "value": "[parameters('autoMitigate')]"
                            },
                            "windowSize": {
                              "value": "[parameters('windowSize')]"
                            },
                            "enabled": {
                              "value": "[parameters('enabled')]"
                            },
                            "severity": {
                              "value": "[parameters('severity')]"
                            },
                            "failingPeriods": {
                              "value": "[parameters('failingPeriods')]"
                            },
                            "evaluationPeriods": {
                              "value": "[parameters('evaluationPeriods')]"
                            }
                          },
                          "autoMitigate": "[parameters('autoMitigate')]",
                          "windowSize": "[parameters('windowSize')]",
                          "enabled": "[parameters('enabled')]",
                          "severity": "[parameters('severity')]",
                          "criteria": {
                            "allOf": [
                              {
                                "failingPeriods": {
                                  "numberOfEvaluationPeriods": "[parameters('evaluationPeriods')]",
                                  "minFailingPeriodsToAlert": "[parameters('failingPeriods')]"
                                },
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "name": "ServiceApiResult",
                                "metricNamespace": "Microsoft.Cdn/profiles",
                                "criterionType": "DynamicThresholdCriterion",
                                "metricName": "Percentage4XX",
                                "alertSensitivity": "Medium"
                              }
                            ],
                            "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                          },
                          "scopes": [
                            "[parameters('resourceId')]"
                          ]
                        },
                        "apiVersion": "2018-03-01",
                        "location": "global",
                        "name": "[concat(parameters('resourceName'), '-Percentage4XXAlert')]",
                        "tags": {
                          "_deployed_by_amba": true
                        }
                      }
                    ],
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                  },
                  "mode": "incremental"
                }
              }
            }
          }
        },
        "name": "Deploy_FrontDoorCDN_Percentage4XX_Alert",
        "displayName": "Deploy FrontDoor CDN Profile Percentage4XX Alert"
      }
    },
    "delete": {},
    "replace": {},
    "update": {}
  },
  "exemptions": {
    "replace": {},
    "update": {},
    "numberOfExpired": 0,
    "numberOfOrphans": 0,
    "delete": {},
    "numberUnchanged": 0,
    "numberOfChanges": 0,
    "new": {}
  },
  "policySetDefinitions": {
    "numberOfChanges": 14,
    "numberUnchanged": 0,
    "new": {
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-Connectivity": {
        "metadata": {
          "_deployed_by_amba": true,
          "version": "1.3.1",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "This initiative deploys Azure Monitor Baseline Alerts to monitor Network components such as Azure Firewalls, ExpressRoute, VPN, and Private DNS Zones.",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-Connectivity",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "ALZMonitorResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the resource group where the ALZ Monitor resources will be deployed",
              "displayName": "ALZ Monitor Resource Group Location"
            },
            "type": "String"
          },
          "ALZMonitorResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_alz_monitor": true
            },
            "metadata": {
              "description": "Tags to be applied to the resource group where the ALZ Monitor resources will be deployed",
              "displayName": "ALZ Monitor Resource Group Tags"
            },
            "type": "Object"
          },
          "ALZMonitorResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Name of the resource group where the ALZ Monitor resources will be deployed",
              "displayName": "ALZ Monitor Resource Group Name"
            },
            "type": "String"
          },
          "ALZMonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "ALZMonitorDisableTagName": {
            "defaultValue": "MonitorDisableTagName",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "LBGlobalBackendAvailabilityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "LB Global Backend Availability Evaluation Frequency"
            },
            "type": "string"
          },
          "LBDatapathAvailabilityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "LB Data path Availability Evaluation Frequency"
            },
            "type": "string"
          },
          "LBGlobalBackendAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "LB Global Backend Availability Alert Severity"
            },
            "type": "String"
          },
          "LBGlobalBackendAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "LB Global Backend Availability Policy Effect"
            },
            "type": "string"
          },
          "LBHealthProbeStatusEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "LB Health Probe Status Evaluation Frequency"
            },
            "type": "string"
          },
          "PIPVIPAvailabilityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "PIP VIP Availability Evaluation Frequency"
            },
            "type": "string"
          },
          "LBGlobalBackendAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "LB Global Backend Availability Window Size"
            },
            "type": "string"
          },
          "LBGlobalBackendAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "LB Global Backend Availability Alert State"
            },
            "type": "string"
          },
          "LBDatapathAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "LB Data path Availability Alert Severity"
            },
            "type": "String"
          },
          "PIPPacketsInDDoSEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "PIP Packets In DDoS Evaluation Frequency"
            },
            "type": "string"
          },
          "LBDatapathAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "LB Data path Availability Policy Effect"
            },
            "type": "string"
          },
          "LBUsedSNATPortsEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "LB Used SNAT Ports Evaluation Frequency"
            },
            "type": "string"
          },
          "PIPBytesInDDoSEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "PIP Bytes In DDoS Evaluation Frequency"
            },
            "type": "string"
          },
          "VNETDDOSAttackEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VNET DDoS Attack Evaluation Frequency"
            },
            "type": "string"
          },
          "LBDatapathAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "LB Data path Availability Window Size"
            },
            "type": "string"
          },
          "PIPDDoSAttackEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "PIP DDoS Attack Evaluation Frequency"
            },
            "type": "string"
          },
          "LBDatapathAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "LB Data path Availability Alert State"
            },
            "type": "string"
          },
          "LBHealthProbeStatusAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "LB Health Probe Status Alert Severity"
            },
            "type": "String"
          },
          "PIPVIPAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "PIP VIP Availability Alert Severity"
            },
            "type": "String"
          },
          "LBHealthProbeStatusPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "LB Health Probe Status Policy Effect"
            },
            "type": "string"
          },
          "PIPVIPAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "PIP VIP Availability Policy Effect"
            },
            "type": "string"
          },
          "LBHealthProbeStatusWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "LB Health Probe Status Window Size"
            },
            "type": "string"
          },
          "LBHealthProbeStatusAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "LB Health Probe Status Alert State"
            },
            "type": "string"
          },
          "PIPPacketsInDDoSAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "4",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "PIP Packets In DDoS Alert Severity"
            },
            "type": "String"
          },
          "PIPVIPAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "PIP VIP Availability Alert State"
            },
            "type": "string"
          },
          "PIPPacketsInDDoSPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "PIP Packets In DDoS Policy Effect"
            },
            "type": "string"
          },
          "LBUsedSNATPortsAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "LB Used SNAT Ports Alert Severity"
            },
            "type": "String"
          },
          "PIPVIPAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "PIP VIP Availability Window Size"
            },
            "type": "string"
          },
          "activityUDRUpdateAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Activity UDR Update Alert State"
            },
            "type": "string"
          },
          "activityNSGDeleteAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Activity NSG Delete Alert State"
            },
            "type": "string"
          },
          "PIPVIPAvailabilityThreshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "PIP VIP Availability Threshold"
            },
            "type": "string"
          },
          "VNETDDOSAttackAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "VNET DDoS Attack Alert Severity"
            },
            "type": "String"
          },
          "PIPBytesInDDoSAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "4",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "PIP Bytes In DDoS Alert Severity"
            },
            "type": "String"
          },
          "LBUsedSNATPortsPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "LB Used SNAT Ports Policy Effect"
            },
            "type": "string"
          },
          "VNETDDOSAttackPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "VNET DDoS Attack Policy Effect"
            },
            "type": "string"
          },
          "PIPPacketsInDDoSWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "PIP Packets In DDoS Window Size"
            },
            "type": "string"
          },
          "PIPDDoSAttackAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "PIP DDoS Attack Alert Severity"
            },
            "type": "String"
          },
          "PIPPacketsInDDoSAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "PIP Packets In DDoS Alert State"
            },
            "type": "string"
          },
          "PIPBytesInDDoSPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "PIP Bytes In DDoS Policy Effect"
            },
            "type": "string"
          },
          "PIPDDoSAttackPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "PIP DDoS Attack Policy Effect"
            },
            "type": "string"
          },
          "LBUsedSNATPortsAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "LB Used SNAT Ports Alert State"
            },
            "type": "string"
          },
          "LBUsedSNATPortsWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "LB Used SNAT Ports Window Size"
            },
            "type": "string"
          },
          "PIPPacketsInDDoSThreshold": {
            "defaultValue": "40000",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "PIP Packets In DDoS Threshold"
            },
            "type": "string"
          },
          "VNETDDOSAttackAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "VNET DDoS Attack Alert State"
            },
            "type": "string"
          },
          "PIPBytesInDDoSAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "PIP Bytes In DDoS Alert State"
            },
            "type": "string"
          },
          "PIPBytesInDDoSWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "PIP Bytes In DDoS Window Size"
            },
            "type": "string"
          },
          "VNETDDOSAttackWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VNET DDoS Attack Window Size"
            },
            "type": "string"
          },
          "PIPBytesInDDoSThreshold": {
            "defaultValue": "8000000",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "PIP Bytes In DDoS Threshold"
            },
            "type": "string"
          },
          "PIPDDoSAttackWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "PIP DDoS Attack Window Size"
            },
            "type": "string"
          },
          "PIPDDoSAttackAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "PIP DDoS Attack Alert State"
            },
            "type": "string"
          },
          "VNETDDOSAttackThreshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VNET DDoS Attack Threshold"
            },
            "type": "string"
          },
          "PIPDDoSAttackThreshold": {
            "defaultValue": "0",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "PIP DDoS Attack Threshold"
            },
            "type": "string"
          },
          "activityUDRUpdatePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "Activity UDR Update Policy Effect"
            },
            "type": "string"
          },
          "activityNSGDeletePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "Activity NSG Delete Policy Effect"
            },
            "type": "string"
          },
          "ERCIRQoSDropBitsinPerSecAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "ERC IRQoS Drop Bits in Per Sec Alert Severity"
            },
            "type": "String"
          },
          "ERCIRQoSDropBitsinPerSecWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "ERC IRQoS Drop Bits in Per Sec Window Size"
            },
            "type": "string"
          },
          "ERCIRQoSDropBitsinPerSecEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "ERC IRQoS Drop Bits in Per Sec Evaluation Frequency"
            },
            "type": "string"
          },
          "ERCIRQoSDropBitsinPerSecPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "ERC IRQoS Drop Bits in Per Sec Policy Effect"
            },
            "type": "string"
          },
          "ERCIRQoSDropBitsinPerSecAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "ERC IRQoS Drop Bits in Per Sec Alert State"
            },
            "type": "string"
          },
          "ERCIRQoSDropBitsinPerSecFailingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "ERC IRQoS Drop Bits in Per Sec Failing Periods"
            },
            "type": "string"
          },
          "ERCIRQoSDropBitsinPerSecEvaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "ERC IRQoS Drop Bits in Per Sec Evaluation Periods"
            },
            "type": "string"
          },
          "ERCIRQoSDropBitsoutPerSecAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "ERC IRQoS Drop Bits out Per Sec Alert Severity"
            },
            "type": "String"
          },
          "ERCIRQoSDropBitsoutPerSecWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "ERC IRQoS Drop Bits out Per Sec Window Size"
            },
            "type": "string"
          },
          "ERCIRQoSDropBitsoutPerSecEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "ERC IRQoS Drop Bits out Per Sec Evaluation Frequency"
            },
            "type": "string"
          },
          "ERCIRQoSDropBitsoutPerSecPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "ERC IRQoS Drop Bits out Per Sec Policy Effect"
            },
            "type": "string"
          },
          "ERCIRQoSDropBitsoutPerSecAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "ERC IRQoS Drop Bits out Per Sec Alert State"
            },
            "type": "string"
          },
          "ERCIRQoSDropBitsoutPerSecFailingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "ERC IRQoS Drop Bits out Per Sec Failing Periods"
            },
            "type": "string"
          },
          "ERCIRQoSDropBitsoutPerSecEvaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "ERC IRQoS Drop Bits out Per Sec Evaluation Periods"
            },
            "type": "string"
          },
          "VPNGwBGPPeerStatusAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "VPN Gw BGP Peer Status Alert Severity"
            },
            "type": "String"
          },
          "VPNGwBGPPeerStatusWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VPN Gw BGP Peer Status Window Size"
            },
            "type": "string"
          },
          "VPNGwBGPPeerStatusEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VPN Gw BGP Peer Status Evaluation Frequency"
            },
            "type": "string"
          },
          "VPNGwBGPPeerStatusPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "VPN Gw BGP Peer Status Policy Effect"
            },
            "type": "string"
          },
          "VPNGwBGPPeerStatusAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "VPN Gw BGP Peer Status Alert State"
            },
            "type": "string"
          },
          "VPNGwBGPPeerStatusThreshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VPN Gw BGP Peer Status Threshold"
            },
            "type": "string"
          },
          "VnetGwERCpuUtilAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "Vnet Gw ER Cpu Util Alert Severity"
            },
            "type": "String"
          },
          "VnetGwERCpuUtilWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Vnet Gw ER Cpu Util Window Size"
            },
            "type": "string"
          },
          "VnetGwERCpuUtilEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Vnet Gw ER Cpu Util Evaluation Frequency"
            },
            "type": "string"
          },
          "VnetGwERCpuUtilPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "Vnet Gw ER Cpu Util Policy Effect"
            },
            "type": "string"
          },
          "VnetGwERCpuUtilAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Vnet Gw ER Cpu Util Alert State"
            },
            "type": "string"
          },
          "VnetGwERCpuUtilThreshold": {
            "defaultValue": "80",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Vnet Gw ER Cpu Util Threshold"
            },
            "type": "string"
          },
          "VnetGwTunnelBWAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "Vnet Gw Tunnel BW Alert Severity"
            },
            "type": "String"
          },
          "VnetGwTunnelBWWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Vnet Gw Tunnel BW Window Size"
            },
            "type": "string"
          },
          "VnetGwTunnelBWEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Vnet Gw Tunnel BW Evaluation Frequency"
            },
            "type": "string"
          },
          "VnetGwTunnelBWPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "Vnet Gw Tunnel BW Policy Effect"
            },
            "type": "string"
          },
          "VnetGwTunnelBWAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Vnet Gw Tunnel BW Alert State"
            },
            "type": "string"
          },
          "VnetGwTunnelBWThreshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Vnet Gw Tunnel BW Threshold"
            },
            "type": "string"
          },
          "VnetGwTunnelEgressAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "Vnet Gw Tunnel Egress Alert Severity"
            },
            "type": "String"
          },
          "VnetGwTunnelEgressWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Vnet Gw Tunnel Egress Window Size"
            },
            "type": "string"
          },
          "VnetGwTunnelEgressEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Vnet Gw Tunnel Egress Evaluation Frequency"
            },
            "type": "string"
          },
          "VnetGwTunnelEgressPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "Vnet Gw Tunnel Egress Policy Effect"
            },
            "type": "string"
          },
          "VnetGwTunnelEgressAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Vnet Gw Tunnel Egress Alert State"
            },
            "type": "string"
          },
          "VnetGwTunnelEgressThreshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Vnet Gw Tunnel Egress Threshold"
            },
            "type": "string"
          },
          "VnetGwTunnelIngressAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "Vnet Gw Tunnel Ingress Alert Severity"
            },
            "type": "String"
          },
          "VnetGwTunnelIngressWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Vnet Gw Tunnel Ingress Window Size"
            },
            "type": "string"
          },
          "VnetGwTunnelIngressEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Vnet Gw Tunnel Ingress Evaluation Frequency"
            },
            "type": "string"
          },
          "VnetGwTunnelIngressPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "Vnet Gw Tunnel Ingress Policy Effect"
            },
            "type": "string"
          },
          "VnetGwTunnelIngressAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Vnet Gw Tunnel Ingress Alert State"
            },
            "type": "string"
          },
          "VnetGwTunnelIngressThreshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Vnet Gw Tunnel Ingress Threshold"
            },
            "type": "string"
          },
          "VPNGWBandWidthUtilAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "VPN GW Band Width Util Alert Severity"
            },
            "type": "String"
          },
          "VPNGWBandWidthUtilWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VPN GW Band Width Util Window Size"
            },
            "type": "string"
          },
          "VPNGWBandWidthUtilEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VPN GW Band Width Util Evaluation Frequency"
            },
            "type": "string"
          },
          "VPNGWBandWidthUtilPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "VPN GW Band Width Util Policy Effect"
            },
            "type": "string"
          },
          "VPNGWBandWidthUtilAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "VPN GW Band Width Util Alert State"
            },
            "type": "string"
          },
          "VPNGWBandWidthUtilThreshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VPN GW Band Width Util Threshold"
            },
            "type": "string"
          },
          "VPNGWEgressAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "VPN GW Egress Alert Severity"
            },
            "type": "String"
          },
          "VPNGWEgressWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VPN GW Egress Window Size"
            },
            "type": "string"
          },
          "VPNGWEgressEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VPN GW Egress Evaluation Frequency"
            },
            "type": "string"
          },
          "VPNGWEgressPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "VPN GW Egress Policy Effect"
            },
            "type": "string"
          },
          "VPNGWEgressAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "VPN GW Egress Alert State"
            },
            "type": "string"
          },
          "VPNGWEgressThreshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VPN GW Egress Threshold"
            },
            "type": "string"
          },
          "VPNGWTunnelEgressPacketDropCountAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "VPN GW Tunnel Egress Packet Drop Count Alert Severity"
            },
            "type": "String"
          },
          "VPNGWTunnelEgressPacketDropCountWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VPN GW Tunnel Egress Packet Drop Count Window Size"
            },
            "type": "string"
          },
          "VPNGWTunnelEgressPacketDropCountFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VPN GW Tunnel Egress Packet Drop Count Frequency"
            },
            "type": "string"
          },
          "VPNGWTunnelEgressPacketDropCountPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "VPN GW Tunnel Egress Packet Drop Count Policy Effect"
            },
            "type": "string"
          },
          "VPNGWTunnelEgressPacketDropCountAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "VPN GW Tunnel Egress Packet Drop Count Alert State"
            },
            "type": "string"
          },
          "VPNGWTunnelEgressPacketDropCountFailingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "VPN GW Tunnel Egress Packet Drop Count Failing Periods"
            },
            "type": "string"
          },
          "VPNGWTunnelEgressPacketDropCountEvaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "VPN GW Tunnel Egress Packet Drop Count Evaluation Periods"
            },
            "type": "string"
          },
          "VPNGWTunnelEgressPacketDropMismatchAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "VPN GW Tunnel Egress Packet Drop Mismatch Alert Severity"
            },
            "type": "String"
          },
          "VPNGWTunnelEgressPacketDropMismatchWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VPN GW Tunnel Egress Packet Drop Mismatch Window Size"
            },
            "type": "string"
          },
          "VPNGWTunnelEgressPacketDropMismatchFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VPN GW Tunnel Egress Packet Drop Mismatch Frequency"
            },
            "type": "string"
          },
          "VPNGWTunnelEgressPacketDropMismatchPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "VPN GW Tunnel Egress Packet Drop Mismatch Policy Effect"
            },
            "type": "string"
          },
          "VPNGWTunnelEgressPacketDropMismatchAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "VPN GW Tunnel Egress Packet Drop Mismatch Alert State"
            },
            "type": "string"
          },
          "VPNGWTunnelEgressPacketDropMismatchFailingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "VPN GW Tunnel Egress Packet Drop Mismatch Failing Periods"
            },
            "type": "string"
          },
          "VPNGWTunnelEgressPacketDropMismatchEvaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "VPN GW Tunnel Egress Packet Drop Mismatch Evaluation Periods"
            },
            "type": "string"
          },
          "VPNGWIngressAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "VPN GW Ingress Alert Severity"
            },
            "type": "string"
          },
          "VPNGWIngressWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VPN GW Ingress Window Size"
            },
            "type": "string"
          },
          "VPNGWIngressEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VPN GW Ingress Evaluation Frequency"
            },
            "type": "string"
          },
          "VPNGWIngressPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "VPN GW Ingress Policy Effect"
            },
            "type": "string"
          },
          "VPNGWIngressAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "VPN GW Ingress Alert State"
            },
            "type": "string"
          },
          "VPNGWIngressThreshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VPN GW Ingress Threshold"
            },
            "type": "string"
          },
          "VPNGWIngressAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VPN GW Ingress Auto Mitigate"
            },
            "type": "string"
          },
          "VPNGWTunnelIngressPacketDropCountAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "VPN GW Tunnel Ingress Packet Drop Count Alert Severity"
            },
            "type": "String"
          },
          "VPNGWTunnelIngressPacketDropCountWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VPN GW Tunnel Ingress Packet Drop Count Window Size"
            },
            "type": "string"
          },
          "VPNGWTunnelIngressPacketDropCountFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VPN GW Tunnel Ingress Packet Drop Count Frequency"
            },
            "type": "string"
          },
          "VPNGWTunnelIngressPacketDropCountPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "VPN GW Tunnel Ingress Packet Drop Count Policy Effect"
            },
            "type": "string"
          },
          "VPNGWTunnelIngressPacketDropCountAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "VPN GW Tunnel Ingress Packet Drop Count Alert State"
            },
            "type": "string"
          },
          "VPNGWTunnelIngressPacketDropCountFailingPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "VPN GW Tunnel Ingress Packet Drop Count Failing Periods"
            },
            "type": "string"
          },
          "VPNGWTunnelIngressPacketDropCountEvaluationPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "VPN GW Tunnel Ingress Packet Drop Count Evaluation Periods"
            },
            "type": "string"
          },
          "VPNGWTunnelIngressPacketDropMismatchAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "VPN GW Tunnel Ingress Packet Drop Mismatch Alert Severity"
            },
            "type": "String"
          },
          "VPNGWTunnelIngressPacketDropMismatchWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VPN GW Tunnel Ingress Packet Drop Mismatch Window Size"
            },
            "type": "string"
          },
          "VPNGWTunnelIngressPacketDropMismatchFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VPN GW Tunnel Ingress Packet Drop Mismatch Frequency"
            },
            "type": "string"
          },
          "VPNGWTunnelIngressPacketDropMismatchPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "VPN GW Tunnel Ingress Packet Drop Mismatch Policy Effect"
            },
            "type": "string"
          },
          "VPNGWTunnelIngressPacketDropMismatchAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "VPN GW Tunnel Ingress Packet Drop Mismatch Alert State"
            },
            "type": "string"
          },
          "VPNGWTunnelIngressPacketDropMismatchFailingPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "VPN GW Tunnel Ingress Packet Drop Mismatch Failing Periods"
            },
            "type": "string"
          },
          "VPNGWTunnelIngressPacketDropMismatchEvaluationPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "VPN GW Tunnel Ingress Packet Drop Mismatch Evaluation Periods"
            },
            "type": "string"
          },
          "PDNSZCapacityUtilAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "PDNSZ Capacity Util Alert Severity"
            },
            "type": "String"
          },
          "PDNSZCapacityUtilWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT1H",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "PDNSZ Capacity Util Window Size"
            },
            "type": "string"
          },
          "PDNSZCapacityUtilEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1H",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "PDNSZ Capacity Util Evaluation Frequency"
            },
            "type": "string"
          },
          "PDNSZCapacityUtilPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "PDNSZ Capacity Util Policy Effect"
            },
            "type": "string"
          },
          "PDNSZCapacityUtilAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "PDNSZ Capacity Util Alert State"
            },
            "type": "string"
          },
          "PDNSZCapacityUtilThreshold": {
            "defaultValue": "80",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "PDNSZ Capacity Util Threshold"
            },
            "type": "string"
          },
          "PDNSZQueryVolumeAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "4",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "PDNSZ Query Volume Alert Severity"
            },
            "type": "String"
          },
          "PDNSZQueryVolumeWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT1H",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "PDNSZ Query Volume Window Size"
            },
            "type": "string"
          },
          "PDNSZQueryVolumeEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1H",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "PDNSZ Query Volume Evaluation Frequency"
            },
            "type": "string"
          },
          "PDNSZQueryVolumePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "PDNSZ Query Volume Policy Effect"
            },
            "type": "string"
          },
          "PDNSZQueryVolumeAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "PDNSZ Query Volume Alert State"
            },
            "type": "string"
          },
          "PDNSZQueryVolumeThreshold": {
            "defaultValue": "500",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "PDNSZ Query Volume Threshold"
            },
            "type": "string"
          },
          "PDNSZRecordSetCapacityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "PDNSZ Record Set Capacity Alert Severity"
            },
            "type": "String"
          },
          "PDNSZRecordSetCapacityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT1H",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "PDNSZ Record Set Capacity Window Size"
            },
            "type": "string"
          },
          "PDNSZRecordSetCapacityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1H",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "PDNSZ Record Set Capacity Evaluation Frequency"
            },
            "type": "string"
          },
          "PDNSZRecordSetCapacityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "PDNSZ Record Set Capacity Policy Effect"
            },
            "type": "string"
          },
          "PDNSZRecordSetCapacityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "PDNSZ Record Set Capacity Alert State"
            },
            "type": "string"
          },
          "PDNSZRecordSetCapacityThreshold": {
            "defaultValue": "80",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "PDNSZ Record Set Capacity Threshold"
            },
            "type": "string"
          },
          "PDNSZRegistrationCapacityUtilAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "PDNSZ Registration Capacity Util Alert Severity"
            },
            "type": "String"
          },
          "PDNSZRegistrationCapacityUtilWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT1H",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "PDNSZ Registration Capacity Util Window Size"
            },
            "type": "string"
          },
          "PDNSZRegistrationCapacityUtilEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1H",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "PDNSZ Registration Capacity Util Evaluation Frequency"
            },
            "type": "string"
          },
          "PDNSZRegistrationCapacityUtilPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "PDNSZ Registration Capacity Util Policy Effect"
            },
            "type": "string"
          },
          "PDNSZRegistrationCapacityUtilAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "PDNSZ Registration Capacity Util Alert State"
            },
            "type": "string"
          },
          "PDNSZRegistrationCapacityUtilThreshold": {
            "defaultValue": "80",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "PDNSZ Registration Capacity Util Threshold"
            },
            "type": "string"
          },
          "ERGwExpressRouteBitsInAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "ER Gw Express Route Bits In Alert Severity"
            },
            "type": "String"
          },
          "ERGwExpressRouteBitsInWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "ER Gw Express Route Bits In Window Size"
            },
            "type": "string"
          },
          "ERGwExpressRouteBitsInEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "ER Gw Express Route Bits In Evaluation Frequency"
            },
            "type": "string"
          },
          "ERGwExpressRouteBitsInPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "ER Gw Express Route Bits In Policy Effect"
            },
            "type": "string"
          },
          "ERGwExpressRouteBitsInAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "ER Gw Express Route Bits In Alert State"
            },
            "type": "string"
          },
          "ERGwExpressRouteBitsInThreshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "ER Gw Express Route Bits In Threshold"
            },
            "type": "string"
          },
          "ERGwExpressRouteBitsOutAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "ER Gw Express Route Bits Out Alert Severity"
            },
            "type": "String"
          },
          "ERGwExpressRouteBitsOutWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "ER Gw Express Route Bits Out Window Size"
            },
            "type": "string"
          },
          "ERGwExpressRouteBitsOutEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "ER Gw Express Route Bits Out Evaluation Frequency"
            },
            "type": "string"
          },
          "ERGwExpressRouteBitsOutPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "ER Gw Express Route Bits Out Policy Effect"
            },
            "type": "string"
          },
          "ERGwExpressRouteBitsOutAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "ER Gw Express Route Bits Out Alert State"
            },
            "type": "string"
          },
          "ERGwExpressRouteBitsOutThreshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "ER Gw Express Route Bits Out Threshold"
            },
            "type": "string"
          },
          "ERGwExpressRouteCpuUtilAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "ER Gw Express Route Cpu Util Alert Severity"
            },
            "type": "String"
          },
          "ERGwExpressRouteCpuUtilWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "ER Gw Express Route Cpu Util Window Size"
            },
            "type": "string"
          },
          "ERGwExpressRouteCpuUtilEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "ER Gw Express Route Cpu Util Evaluation Frequency"
            },
            "type": "string"
          },
          "ERGwExpressRouteCpuUtilPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "ER Gw Express Route Cpu Util Policy Effect"
            },
            "type": "string"
          },
          "ERGwExpressRouteCpuUtilAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "ER Gw Express Route Cpu Util Alert State"
            },
            "type": "string"
          },
          "ERGwExpressRouteCpuUtilThreshold": {
            "defaultValue": "80",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "ER Gw Express Route Cpu Util Threshold"
            },
            "type": "string"
          },
          "VnetGwTunnelEgressPacketDropCountAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "Vnet Gw Tunnel Egress Packet Drop Count Alert Severity"
            },
            "type": "String"
          },
          "VnetGwTunnelEgressPacketDropCountWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Vnet Gw Tunnel Egress Packet Drop Count Window Size"
            },
            "type": "string"
          },
          "VnetGwTunnelEgressPacketDropCountEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Vnet Gw Tunnel Egress Packet Drop Count Evaluation Frequency"
            },
            "type": "string"
          },
          "VnetGwTunnelEgressPacketDropCountPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "Vnet Gw Tunnel Egress Packet Drop Count Policy Effect"
            },
            "type": "string"
          },
          "VnetGwTunnelEgressPacketDropCountAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Vnet Gw Tunnel Egress Packet Drop Count Alert State"
            },
            "type": "string"
          },
          "VnetGwTunnelEgressPacketDropCountFailingPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Vnet Gw Tunnel Egress Packet Drop Count Failing Periods"
            },
            "type": "string"
          },
          "VnetGwTunnelEgressPacketDropCountEvaluationPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Vnet Gw Tunnel Egress Packet Drop Count Evaluation Periods"
            },
            "type": "string"
          },
          "VnetGwTunnelEgressPacketDropMismatchAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "Vnet Gw Tunnel Egress Packet Drop Mismatch Alert Severity"
            },
            "type": "String"
          },
          "VnetGwTunnelEgressPacketDropMismatchWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Vnet Gw Tunnel Egress Packet Drop Mismatch Window Size"
            },
            "type": "string"
          },
          "VnetGwTunnelEgressPacketDropMismatchEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Vnet Gw Tunnel Egress Packet Drop Mismatch Evaluation Frequency"
            },
            "type": "string"
          },
          "VnetGwTunnelEgressPacketDropMismatchPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "Vnet Gw Tunnel Egress Packet Drop Mismatch Policy Effect"
            },
            "type": "string"
          },
          "VnetGwTunnelEgressPacketDropMismatchAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Vnet Gw Tunnel Egress Packet Drop Mismatch Alert State"
            },
            "type": "string"
          },
          "VnetGwTunnelEgressPacketDropMismatchFailingPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Vnet Gw Tunnel Egress Packet Drop Mismatch Failing Periods"
            },
            "type": "string"
          },
          "VnetGwTunnelEgressPacketDropMismatchEvaluationPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Vnet Gw Tunnel Egress Packet Drop Mismatch Evaluation Periods"
            },
            "type": "string"
          },
          "VnetGwExpressRouteBitsPerSecondAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "Vnet Gw Express Route Bits Per Second Alert Severity"
            },
            "type": "String"
          },
          "VnetGwExpressRouteBitsPerSecondWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Vnet Gw Express Route Bits Per Second Window Size"
            },
            "type": "string"
          },
          "VnetGwExpressRouteBitsPerSecondEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Vnet Gw Express Route Bits Per Second Evaluation Frequency"
            },
            "type": "string"
          },
          "VnetGwExpressRouteBitsPerSecondPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "Vnet Gw Express Route Bits Per Second Policy Effect"
            },
            "type": "string"
          },
          "VnetGwExpressRouteBitsPerSecondAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Vnet Gw Express Route Bits Per Second Alert State"
            },
            "type": "string"
          },
          "VnetGwExpressRouteBitsPerSecondThreshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Vnet Gw Express Route Bits Per Second Threshold"
            },
            "type": "string"
          },
          "VnetGwTunnelIngressPacketDropMismatchAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "Vnet Gw Tunnel Ingress Packet Drop Mismatch Alert Severity"
            },
            "type": "String"
          },
          "VnetGwTunnelIngressPacketDropMismatchWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Vnet Gw Tunnel Ingress Packet Drop Mismatch Window Size"
            },
            "type": "string"
          },
          "VnetGwTunnelIngressPacketDropMismatchEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Vnet Gw Tunnel Ingress Packet Drop Mismatch Evaluation Frequency"
            },
            "type": "string"
          },
          "VnetGwTunnelIngressPacketDropMismatchPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "Vnet Gw Tunnel Ingress Packet Drop Mismatch Policy Effect"
            },
            "type": "string"
          },
          "VnetGwTunnelIngressPacketDropMismatchAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Vnet Gw Tunnel Ingress Packet Drop Mismatch Alert State"
            },
            "type": "string"
          },
          "VnetGwTunnelIngressPacketDropMismatchFailingPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Vnet Gw Tunnel Ingress Packet Drop Mismatch Failing Periods"
            },
            "type": "string"
          },
          "VnetGwTunnelIngressPacketDropMismatchEvaluationPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Vnet Gw Tunnel Ingress Packet Drop Mismatch Evaluation Periods"
            },
            "type": "string"
          },
          "VnetGwTunnelIngressPacketDropCountAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "Vnet Gw Tunnel Ingress Packet Drop Count Alert Severity"
            },
            "type": "String"
          },
          "VnetGwTunnelIngressPacketDropCountWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Vnet Gw Tunnel Ingress Packet Drop Count Window Size"
            },
            "type": "string"
          },
          "VnetGwTunnelIngressPacketDropCountEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Vnet Gw Tunnel Ingress Packet Drop Count Evaluation Frequency"
            },
            "type": "string"
          },
          "VnetGwTunnelIngressPacketDropCountPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "Vnet Gw Tunnel Ingress Packet Drop Count Policy Effect"
            },
            "type": "string"
          },
          "VnetGwTunnelIngressPacketDropCountAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Vnet Gw Tunnel Ingress Packet Drop Count Alert State"
            },
            "type": "string"
          },
          "VnetGwTunnelIngressPacketDropCountFailingPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Vnet Gw Tunnel Ingress Packet Drop Count Failing Periods"
            },
            "type": "string"
          },
          "VnetGwTunnelIngressPacketDropCountEvaluationPeriods": {
            "defaultValue": "4",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Vnet Gw Tunnel Ingress Packet Drop Count Evaluation Periods"
            },
            "type": "string"
          },
          "ERCIRBgpAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "ERCIR Bgp Availability Alert Severity"
            },
            "type": "String"
          },
          "ERCIRBgpAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "ERCIR Bgp Availability Window Size"
            },
            "type": "string"
          },
          "ERCIRBgpAvailabilityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "ERCIR Bgp Availability Evaluation Frequency"
            },
            "type": "string"
          },
          "ERCIRBgpAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "ERCIR Bgp Availability Policy Effect"
            },
            "type": "string"
          },
          "ERCIRBgpAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "ERCIR Bgp Availability Alert State"
            },
            "type": "string"
          },
          "ERCIRBgpAvailabilityThreshold": {
            "defaultValue": "90",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "ERCIR Bgp Availability Threshold"
            },
            "type": "string"
          },
          "ERCIRArpAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "ERCIR Arp Availability Alert Severity"
            },
            "type": "String"
          },
          "ERCIRArpAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "ERCIR Arp Availability Window Size"
            },
            "type": "string"
          },
          "ERCIRArpAvailabilityFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "ERCIR Arp Availability Frequency"
            },
            "type": "string"
          },
          "ERCIRArpAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "ERCIR ARP Availability Policy Effect"
            },
            "type": "string"
          },
          "ERCIRArpAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "ERCIR Arp Availability Alert State"
            },
            "type": "string"
          },
          "ERCIRArpAvailabilityThreshold": {
            "defaultValue": "90",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "ERCIR Arp Availability Threshold"
            },
            "type": "string"
          },
          "AFWSNATPortUtilizationAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "AFW SNAT Port Utilization Alert Severity"
            },
            "type": "String"
          },
          "AFWSNATPortUtilizationWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "AFW SNAT Port Utilization Window Size"
            },
            "type": "string"
          },
          "AFWSNATPortUtilizationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "AFW SNAT Port Utilization Frequency"
            },
            "type": "string"
          },
          "AFWSNATPortUtilizationPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "AFW SNAT Port Utilization Policy Effect"
            },
            "type": "string"
          },
          "AFWSNATPortUtilizationAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "AFW SNAT Port Utilization Alert State"
            },
            "type": "string"
          },
          "AFWSNATPortUtilizationThreshold": {
            "defaultValue": "80",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "AFW SNAT Port Utilization Threshold"
            },
            "type": "string"
          },
          "FirewallHealthAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "Firewall Health Alert Severity"
            },
            "type": "String"
          },
          "FirewallHealthWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Firewall Health Window Size"
            },
            "type": "string"
          },
          "FirewallHealthEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Firewall Health Evaluation Frequency"
            },
            "type": "string"
          },
          "FirewallHealthPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "Firewall Health Policy Effect"
            },
            "type": "string"
          },
          "FirewallHealthAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Firewall Health Alert State"
            },
            "type": "string"
          },
          "FirewallHealthThreshold": {
            "defaultValue": "90",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Firewall Health Threshold"
            },
            "type": "string"
          },
          "activityFWDeletePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "Activity FW Delete Policy Effect"
            },
            "type": "string"
          },
          "activityFWDeleteAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Activity FW Delete Alert State"
            },
            "type": "string"
          },
          "activityVPNGWDeletePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "Activity VPN GW Delete Policy Effect"
            },
            "type": "string"
          },
          "activityVPNGWDeleteAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Activity VPN GW Delete Alert State"
            },
            "type": "string"
          },
          "ERPBitsInPerSecondAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "ERP Bits In Per Second Alert Severity"
            },
            "type": "String"
          },
          "ERPBitsInPerSecondWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "ERP Bits In Per Second Window Size"
            },
            "type": "string"
          },
          "ERPBitsInPerSecondEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "ERP Bits In Per Second Evaluation Frequency"
            },
            "type": "string"
          },
          "ERPBitsInPerSecondPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "ERP Bits In Per Second Policy Effect"
            },
            "type": "string"
          },
          "ERPBitsInPerSecondAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "ERP Bits In Per Second Alert State"
            },
            "type": "string"
          },
          "ERPBitsOutPerSecondAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "ERP Bits Out Per Second Alert Severity"
            },
            "type": "String"
          },
          "ERPBitsOutPerSecondWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "ERP Bits Out Per Second Window Size"
            },
            "type": "string"
          },
          "ERPBitsOutPerSecondEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "ERP Bits Out Per Second Evaluation Frequency"
            },
            "type": "string"
          },
          "ERPBitsOutPerSecondPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "ERP Bits Out Per Second Policy Effect"
            },
            "type": "string"
          },
          "ERPBitsOutPerSecondAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "ERP Bits Out Per Second Alert State"
            },
            "type": "string"
          },
          "ERPLineProtocolAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "ERP Line Protocol Alert Severity"
            },
            "type": "String"
          },
          "ERPLineProtocolWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "ERP Line Protocol Window Size"
            },
            "type": "string"
          },
          "ERPLineProtocolEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "ERP Line Protocol Evaluation Frequency"
            },
            "type": "string"
          },
          "ERPLineProtocolPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "ERP Line Protocol Policy Effect"
            },
            "type": "string"
          },
          "ERPLineProtocolAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "ERP Line Protocol Alert State"
            },
            "type": "string"
          },
          "ERPRxLightLevelHighAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "ERP Rx Light Level High Alert Severity"
            },
            "type": "String"
          },
          "ERPRxLightLevelHighWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "ERP Rx Light Level High Window Size"
            },
            "type": "string"
          },
          "ERPRxLightLevelHighEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "ERP Rx Light Level High Evaluation Frequency"
            },
            "type": "string"
          },
          "ERPRxLightLevelHighPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "ERP Rx Light Level High Policy Effect"
            },
            "type": "string"
          },
          "ERPRxLightLevelHighAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "ERP Rx Light Level High Alert State"
            },
            "type": "string"
          },
          "ERPRxLightLevelLowAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "ERP Rx Light Level Low Alert Severity"
            },
            "type": "String"
          },
          "ERPRxLightLevelLowWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "ERP Rx Light Level Low Window Size"
            },
            "type": "string"
          },
          "ERPRxLightLevelLowEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "ERP Rx Light Level Low Evaluation Frequency"
            },
            "type": "string"
          },
          "ERPRxLightLevelLowPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "ERP Rx Light Level Low Policy Effect"
            },
            "type": "string"
          },
          "ERPRxLightLevelLowAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "ERP Rx Light Level Low Alert State"
            },
            "type": "string"
          },
          "ERPTxLightLevelHighAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "ERP Tx Light Level High Alert Severity"
            },
            "type": "String"
          },
          "ERPTxLightLevelHighWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "ERP Tx Light Level High Window Size"
            },
            "type": "string"
          },
          "ERPTxLightLevelHighEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "ERP Tx Light Level High Evaluation Frequency"
            },
            "type": "string"
          },
          "ERPTxLightLevelHighPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "ERP Tx Light Level High Policy Effect"
            },
            "type": "string"
          },
          "ERPTxLightLevelHighAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "ERP Tx Light Level High Alert State"
            },
            "type": "string"
          },
          "ERPTxLightLevelLowAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "ERP Tx Light Level Low Alert Severity"
            },
            "type": "String"
          },
          "ERPTxLightLevelLowWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "ERP Tx Light Level Low Window Size"
            },
            "type": "string"
          },
          "ERPTxLightLevelLowEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "ERP Tx Light Level Low Evaluation Frequency"
            },
            "type": "string"
          },
          "ERPTxLightLevelLowPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "ERP Tx Light Level Low Policy Effect"
            },
            "type": "string"
          },
          "ERPTxLightLevelLowAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "ERP Tx Light Level Low Alert State"
            },
            "type": "string"
          }
        },
        "policyDefinitionGroups": null,
        "policyDefinitions": [
          {
            "policyDefinitionReferenceId": "ALZ_ERCIRQoSDropBitsinPerSec",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('ERCIRQoSDropBitsinPerSecEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('ERCIRQoSDropBitsinPerSecWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('ERCIRQoSDropBitsinPerSecAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('ERCIRQoSDropBitsinPerSecAlertState')]"
              },
              "failingPeriods": {
                "value": "[parameters('ERCIRQoSDropBitsinPerSecFailingPeriods')]"
              },
              "effect": {
                "value": "[parameters('ERCIRQoSDropBitsinPerSecPolicyEffect')]"
              },
              "evaluationperiods": {
                "value": "[parameters('ERCIRQoSDropBitsinPerSecEvaluationPeriods')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERCIR_QosDropBitsInPerSecond_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_ERCIRQoSDropBitsoutPerSec",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('ERCIRQoSDropBitsoutPerSecEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('ERCIRQoSDropBitsoutPerSecWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('ERCIRQoSDropBitsoutPerSecAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('ERCIRQoSDropBitsoutPerSecAlertState')]"
              },
              "failingPeriods": {
                "value": "[parameters('ERCIRQoSDropBitsoutPerSecFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('ERCIRQoSDropBitsoutPerSecEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('ERCIRQoSDropBitsoutPerSecPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERCIR_QosDropBitsOutPerSecond_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VPNGwBGPPeerStatus",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VPNGwBGPPeerStatusEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VPNGwBGPPeerStatusWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VPNGwBGPPeerStatusAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VPNGwBGPPeerStatusAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VPNGwBGPPeerStatusThreshold')]"
              },
              "effect": {
                "value": "[parameters('VPNGwBGPPeerStatusPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_BGPPeerStatus_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VnetGwERCpuUtil",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VnetGwERCpuUtilEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VnetGwERCpuUtilWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VnetGwERCpuUtilAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VnetGwERCpuUtilAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VnetGwERCpuUtilThreshold')]"
              },
              "effect": {
                "value": "[parameters('VnetGwERCpuUtilPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_ExpressRouteCpuUtil_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VnetGwTunnelBW",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VnetGwTunnelBWEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VnetGwTunnelBWWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VnetGwTunnelBWAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VnetGwTunnelBWAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VnetGwTunnelBWThreshold')]"
              },
              "effect": {
                "value": "[parameters('VnetGwTunnelBWPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelBandwidth_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VnetGwTunnelEgress",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VnetGwTunnelEgressEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VnetGwTunnelEgressWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VnetGwTunnelEgressAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VnetGwTunnelEgressAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VnetGwTunnelEgressThreshold')]"
              },
              "effect": {
                "value": "[parameters('VnetGwTunnelEgressPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelEgress_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VnetGwTunnelIngress",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VnetGwTunnelIngressEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VnetGwTunnelIngressWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VnetGwTunnelIngressAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VnetGwTunnelIngressAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VnetGwTunnelIngressThreshold')]"
              },
              "effect": {
                "value": "[parameters('VnetGwTunnelIngressPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelIngress_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VPNGWBandWidthUtil",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VPNGWBandWidthUtilEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VPNGWBandWidthUtilWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VPNGWBandWidthUtilAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VPNGWBandWidthUtilAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VPNGWBandWidthUtilThreshold')]"
              },
              "effect": {
                "value": "[parameters('VPNGWBandWidthUtilPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_BandwidthUtil_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VPNGWEgress",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VPNGWEgressEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VPNGWEgressWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VPNGWEgressAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VPNGWEgressAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VPNGWEgressThreshold')]"
              },
              "effect": {
                "value": "[parameters('VPNGWEgressPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_Egress_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VPNGWTunnelEgressPacketDropCount",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VPNGWTunnelEgressPacketDropCountFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VPNGWTunnelEgressPacketDropCountWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VPNGWTunnelEgressPacketDropCountAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VPNGWTunnelEgressPacketDropCountAlertState')]"
              },
              "failingPeriods": {
                "value": "[parameters('VPNGWTunnelEgressPacketDropCountFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VPNGWTunnelEgressPacketDropCountEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VPNGWTunnelEgressPacketDropCountPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_TunnelEgressPacketDropCount_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VPNGWTunnelEgressPacketDropMismatch",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VPNGWTunnelEgressPacketDropMismatchFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VPNGWTunnelEgressPacketDropMismatchWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VPNGWTunnelEgressPacketDropMismatchAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VPNGWTunnelEgressPacketDropMismatchAlertState')]"
              },
              "failingPeriods": {
                "value": "[parameters('VPNGWTunnelEgressPacketDropMismatchFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VPNGWTunnelEgressPacketDropMismatchEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VPNGWTunnelEgressPacketDropMismatchPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_TunnelEgressPacketDropMismatch_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VPNGWIngress",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VPNGWIngressEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VPNGWIngressWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VPNGWIngressAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VPNGWIngressAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VPNGWIngressAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VPNGWIngressThreshold')]"
              },
              "effect": {
                "value": "[parameters('VPNGWIngressPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_Ingress_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VPNGWTunnelIngressPacketDropCount",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VPNGWTunnelIngressPacketDropCountFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VPNGWTunnelIngressPacketDropCountWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VPNGWTunnelIngressPacketDropCountAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VPNGWTunnelIngressPacketDropCountAlertState')]"
              },
              "failingPeriods": {
                "value": "[parameters('VPNGWTunnelIngressPacketDropCountFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VPNGWTunnelIngressPacketDropCountEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VPNGWTunnelIngressPacketDropCountPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_TunnelIngressPacketDropCount_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VPNGWTunnelIngressPacketDropMismatch",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VPNGWTunnelIngressPacketDropMismatchFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VPNGWTunnelIngressPacketDropMismatchWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VPNGWTunnelIngressPacketDropMismatchAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VPNGWTunnelIngressPacketDropMismatchAlertState')]"
              },
              "failingPeriods": {
                "value": "[parameters('VPNGWTunnelIngressPacketDropMismatchFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VPNGWTunnelIngressPacketDropMismatchEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VPNGWTunnelIngressPacketDropMismatchPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_TunnelIngressPacketDropMismatch_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_PDNSZCapacityUtil",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('PDNSZCapacityUtilEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('PDNSZCapacityUtilWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('PDNSZCapacityUtilAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('PDNSZCapacityUtilAlertState')]"
              },
              "threshold": {
                "value": "[parameters('PDNSZCapacityUtilThreshold')]"
              },
              "effect": {
                "value": "[parameters('PDNSZCapacityUtilPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PDNSZ_CapacityUtil_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_PDNSZQueryVolume",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('PDNSZQueryVolumeEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('PDNSZQueryVolumeWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('PDNSZQueryVolumeAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('PDNSZQueryVolumeAlertState')]"
              },
              "threshold": {
                "value": "[parameters('PDNSZQueryVolumeThreshold')]"
              },
              "effect": {
                "value": "[parameters('PDNSZQueryVolumePolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PDNSZ_QueryVolume_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_PDNSZRecordSetCapacity",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('PDNSZRecordSetCapacityEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('PDNSZRecordSetCapacityWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('PDNSZRecordSetCapacityAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('PDNSZRecordSetCapacityAlertState')]"
              },
              "threshold": {
                "value": "[parameters('PDNSZRecordSetCapacityThreshold')]"
              },
              "effect": {
                "value": "[parameters('PDNSZRecordSetCapacityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PDNSZ_RecordSetCapacity_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_PDNSZRegistrationCapacityUtil",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('PDNSZRegistrationCapacityUtilEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('PDNSZRegistrationCapacityUtilWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('PDNSZRegistrationCapacityUtilAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('PDNSZRegistrationCapacityUtilAlertState')]"
              },
              "threshold": {
                "value": "[parameters('PDNSZRegistrationCapacityUtilThreshold')]"
              },
              "effect": {
                "value": "[parameters('PDNSZRegistrationCapacityUtilPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_DNSZ_RegistrationCapacityUtil_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_ERGwExpressRouteBitsIn",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('ERGwExpressRouteBitsInEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('ERGwExpressRouteBitsInWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('ERGwExpressRouteBitsInAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('ERGwExpressRouteBitsInAlertState')]"
              },
              "threshold": {
                "value": "[parameters('ERGwExpressRouteBitsInThreshold')]"
              },
              "effect": {
                "value": "[parameters('ERGwExpressRouteBitsInPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERGw_ExpressRouteBitsIn_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_ERGwExpressRouteBitsOut",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('ERGwExpressRouteBitsOutEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('ERGwExpressRouteBitsOutWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('ERGwExpressRouteBitsOutAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('ERGwExpressRouteBitsOutAlertState')]"
              },
              "threshold": {
                "value": "[parameters('ERGwExpressRouteBitsOutThreshold')]"
              },
              "effect": {
                "value": "[parameters('ERGwExpressRouteBitsOutPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERGw_ExpressRouteBitsOut_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_ERGwExpressRouteCpuUtil",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('ERGwExpressRouteCpuUtilEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('ERGwExpressRouteCpuUtilWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('ERGwExpressRouteCpuUtilAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('ERGwExpressRouteCpuUtilAlertState')]"
              },
              "threshold": {
                "value": "[parameters('ERGwExpressRouteCpuUtilThreshold')]"
              },
              "effect": {
                "value": "[parameters('ERGwExpressRouteCpuUtilPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERGw_ExpressRouteCpuUtil_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VnetGwTunnelEgressPacketDropCount",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VnetGwTunnelEgressPacketDropCountEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VnetGwTunnelEgressPacketDropCountWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VnetGwTunnelEgressPacketDropCountAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VnetGwTunnelEgressPacketDropCountAlertState')]"
              },
              "failingPeriods": {
                "value": "[parameters('VnetGwTunnelEgressPacketDropCountFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VnetGwTunnelEgressPacketDropCountEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VnetGwTunnelEgressPacketDropCountPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelEgressPacketDropCount_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VnetGwTunnelEgressPacketDropMismatch",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VnetGwTunnelEgressPacketDropMismatchEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VnetGwTunnelEgressPacketDropMismatchWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VnetGwTunnelEgressPacketDropMismatchAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VnetGwTunnelEgressPacketDropMismatchAlertState')]"
              },
              "failingPeriods": {
                "value": "[parameters('VnetGwTunnelEgressPacketDropMismatchFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VnetGwTunnelEgressPacketDropMismatchEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VnetGwTunnelEgressPacketDropMismatchPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelEgressPacketDropMismatch_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VnetGwExpressRouteBitsPerSecond",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VnetGwExpressRouteBitsPerSecondEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VnetGwExpressRouteBitsPerSecondWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VnetGwExpressRouteBitsPerSecondAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VnetGwExpressRouteBitsPerSecondAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VnetGwExpressRouteBitsPerSecondThreshold')]"
              },
              "effect": {
                "value": "[parameters('VnetGwExpressRouteBitsPerSecondPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_ExpressRouteBitsPerSecond_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VnetGwTunnelIngressPacketDropMismatch",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VnetGwTunnelIngressPacketDropMismatchEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VnetGwTunnelIngressPacketDropMismatchWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VnetGwTunnelIngressPacketDropMismatchAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VnetGwTunnelIngressPacketDropMismatchAlertState')]"
              },
              "failingPeriods": {
                "value": "[parameters('VnetGwTunnelIngressPacketDropMismatchFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VnetGwTunnelIngressPacketDropMismatchEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VnetGwTunnelIngressPacketDropMismatchPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelIngressPacketDropMismatch_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VnetGwTunnelIngressPacketDropCount",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VnetGwTunnelIngressPacketDropCountEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VnetGwTunnelIngressPacketDropCountWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VnetGwTunnelIngressPacketDropCountAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VnetGwTunnelIngressPacketDropCountAlertState')]"
              },
              "failingPeriods": {
                "value": "[parameters('VnetGwTunnelIngressPacketDropCountFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VnetGwTunnelIngressPacketDropCountEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VnetGwTunnelIngressPacketDropCountPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelIngressPacketDropCount_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_ERCIRBgpAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('ERCIRBgpAvailabilityEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('ERCIRBgpAvailabilityWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('ERCIRBgpAvailabilityAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('ERCIRBgpAvailabilityAlertState')]"
              },
              "threshold": {
                "value": "[parameters('ERCIRBgpAvailabilityThreshold')]"
              },
              "effect": {
                "value": "[parameters('ERCIRBgpAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERCIR_BgpAvailability_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_ERCIRArpAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('ERCIRArpAvailabilityFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('ERCIRArpAvailabilityWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('ERCIRArpAvailabilityAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('ERCIRArpAvailabilityAlertState')]"
              },
              "threshold": {
                "value": "[parameters('ERCIRArpAvailabilityThreshold')]"
              },
              "effect": {
                "value": "[parameters('ERCIRArpAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERCIR_ArpAvailability_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_AFWSNATPortUtilization",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('AFWSNATPortUtilizationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('AFWSNATPortUtilizationWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('AFWSNATPortUtilizationAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('AFWSNATPortUtilizationAlertState')]"
              },
              "threshold": {
                "value": "[parameters('AFWSNATPortUtilizationThreshold')]"
              },
              "effect": {
                "value": "[parameters('AFWSNATPortUtilizationPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AFW_SNATPortUtilization_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_PIPBytesInDDoSEvaluationFrequency",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('PIPBytesInDDoSEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('PIPBytesInDDoSWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('PIPBytesInDDoSAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('PIPBytesInDDoSAlertState')]"
              },
              "threshold": {
                "value": "[parameters('PIPBytesInDDoSThreshold')]"
              },
              "effect": {
                "value": "[parameters('PIPBytesInDDoSPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_BytesInDDoSAttack_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_PIPDDoSAttack",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('PIPDDoSAttackEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('PIPDDoSAttackWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('PIPDDoSAttackAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('PIPDDoSAttackAlertState')]"
              },
              "threshold": {
                "value": "[parameters('PIPDDoSAttackThreshold')]"
              },
              "effect": {
                "value": "[parameters('PIPDDoSAttackPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_DDoSAttack_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_PIPPacketsInDDoS",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('PIPPacketsInDDoSEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('PIPPacketsInDDoSWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('PIPPacketsInDDoSAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('PIPPacketsInDDoSAlertState')]"
              },
              "threshold": {
                "value": "[parameters('PIPPacketsInDDoSThreshold')]"
              },
              "effect": {
                "value": "[parameters('PIPPacketsInDDoSPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_PacketsInDDoSAttack_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_PIPVIPAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('PIPVIPAvailabilityEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('PIPVIPAvailabilityWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('PIPVIPAvailabilityAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('PIPVIPAvailabilityAlertState')]"
              },
              "threshold": {
                "value": "[parameters('PIPVIPAvailabilityThreshold')]"
              },
              "effect": {
                "value": "[parameters('PIPVIPAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_VIPAvailability_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VNETDDOSAttack",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VNETDDOSAttackEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VNETDDOSAttackWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VNETDDOSAttackAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VNETDDOSAttackAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VNETDDOSAttackThreshold')]"
              },
              "effect": {
                "value": "[parameters('VNETDDOSAttackPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VNET_DDoSAttack_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_FirewallHealth",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('FirewallHealthEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('FirewallHealthWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('FirewallHealthAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('FirewallHealthAlertState')]"
              },
              "threshold": {
                "value": "[parameters('FirewallHealthThreshold')]"
              },
              "effect": {
                "value": "[parameters('FirewallHealthPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AFW_FirewallHealth_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_activityFWDelete",
            "parameters": {
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('activityFWDeleteAlertState')]"
              },
              "effect": {
                "value": "[parameters('activityFWDeletePolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_Firewall_Delete"
          },
          {
            "policyDefinitionReferenceId": "ALZ_activityNSGDelete",
            "parameters": {
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('activityNSGDeleteAlertState')]"
              },
              "effect": {
                "value": "[parameters('activityNSGDeletePolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_NSG_Delete"
          },
          {
            "policyDefinitionReferenceId": "ALZ_activityUDRUpdate",
            "parameters": {
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('activityUDRUpdateAlertState')]"
              },
              "effect": {
                "value": "[parameters('activityUDRUpdatePolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_RouteTable_Update"
          },
          {
            "policyDefinitionReferenceId": "ALZ_activityVPNGWDelete",
            "parameters": {
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('activityVPNGWDeleteAlertState')]"
              },
              "effect": {
                "value": "[parameters('activityVPNGWDeletePolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_VPNGateway_Delete"
          },
          {
            "policyDefinitionReferenceId": "ALZ_LBDataPathAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('LBDataPathAvailabilityEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('LBDataPathAvailabilityWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('LBDataPathAvailabilityAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('LBDataPathAvailabilityAlertState')]"
              },
              "effect": {
                "value": "[parameters('LBDataPathAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ALB_DataPathAvailability_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_LBGlobalBackendAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('LBGlobalBackendAvailabilityEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('LBGlobalBackendAvailabilityWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('LBGlobalBackendAvailabilityAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('LBGlobalBackendAvailabilityAlertState')]"
              },
              "effect": {
                "value": "[parameters('LBGlobalBackendAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ALB_GlobalBackendAvailability_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_LBHealthProbeStatus",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('LBHealthProbeStatusEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('LBHealthProbeStatusWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('LBHealthProbeStatusAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('LBHealthProbeStatusAlertState')]"
              },
              "effect": {
                "value": "[parameters('LBHealthProbeStatusPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ALB_HealthProbeStatus_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_LBUsedSNATPorts",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('LBUsedSNATPortsEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('LBUsedSNATPortsWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('LBUsedSNATPortsAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('LBUsedSNATPortsAlertState')]"
              },
              "effect": {
                "value": "[parameters('LBUsedSNATPortsPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ALB_UsedSNATPorts_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_ERPBitsInPerSecond",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('ERPBitsInPerSecondEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('ERPBitsInPerSecondWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('ERPBitsInPerSecondAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('ERPBitsInPerSecondAlertState')]"
              },
              "effect": {
                "value": "[parameters('ERPBitsInPerSecondPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERP_ExpressRouteBitsIn_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_ERPBitsOutPerSecond",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('ERPBitsOutPerSecondEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('ERPBitsOutPerSecondWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('ERPBitsOutPerSecondAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('ERPBitsOutPerSecondAlertState')]"
              },
              "effect": {
                "value": "[parameters('ERPBitsOutPerSecondPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERP_ExpressRouteBitsOut_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_ERPLineProtocol",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('ERPLineProtocolEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('ERPLineProtocolWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('ERPLineProtocolAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('ERPLineProtocolAlertState')]"
              },
              "effect": {
                "value": "[parameters('ERPLineProtocolPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERP_ExpressRoutLineProtocol_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_ERPRxLightLevelHigh",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('ERPRxLightLevelHighEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('ERPRxLightLevelHighWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('ERPRxLightLevelHighAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('ERPRxLightLevelHighAlertState')]"
              },
              "effect": {
                "value": "[parameters('ERPRxLightLevelHighPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERP_ExpressRoutRxLightLevel_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_ERPRxLightLevelLow",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('ERPRxLightLevelLowEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('ERPRxLightLevelLowWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('ERPRxLightLevelLowAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('ERPRxLightLevelLowAlertState')]"
              },
              "effect": {
                "value": "[parameters('ERPRxLightLevelLowPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERP_ExpressRoutRxLightLevellow_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_ERPTxLightLevelHigh",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('ERPTxLightLevelHighEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('ERPTxLightLevelHighWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('ERPTxLightLevelHighAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('ERPTxLightLevelHighAlertState')]"
              },
              "effect": {
                "value": "[parameters('ERPTxLightLevelHighPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERP_ExpressRoutTxLightLevell_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_ERPTxLightLevelLow",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('ERPTxLightLevelLowEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('ERPTxLightLevelLowWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('ERPTxLightLevelLowAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('ERPTxLightLevelLowAlertState')]"
              },
              "effect": {
                "value": "[parameters('ERPTxLightLevelLowPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERP_ExpressRoutTxLightLevellow_Alert"
          }
        ],
        "name": "Alerting-Connectivity",
        "displayName": "Deploy Azure Monitor Baseline Alerts for Connectivity"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-LoadBalancing": {
        "metadata": {
          "_deployed_by_amba": true,
          "version": "1.1.0",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "This initiative deploys Azure Monitor Baseline Alerts to monitor Load Balancing Services such as Load Balancer, Application Gateway, Traffic Manager, and Azure Front Door.",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-LoadBalancing",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "ALZMonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "ALZMonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "LBGlobalBackendAvailabilityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "LB Global Backend Availability Evaluation Frequency"
            },
            "type": "string"
          },
          "LBDatapathAvailabilityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "LB Data path Availability Evaluation Frequency"
            },
            "type": "string"
          },
          "LBGlobalBackendAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "LB Global Backend Availability Alert Severity"
            },
            "type": "String"
          },
          "LBGlobalBackendAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "LB Global Backend Availability Policy Effect"
            },
            "type": "string"
          },
          "LBHealthProbeStatusEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "LB Health Probe Status Evaluation Frequency"
            },
            "type": "string"
          },
          "PIPVIPAvailabilityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "PIP VIP Availability Evaluation Frequency"
            },
            "type": "string"
          },
          "LBGlobalBackendAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "LB Global Backend Availability Window Size"
            },
            "type": "string"
          },
          "LBGlobalBackendAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "LB Global Backend Availability Alert State"
            },
            "type": "string"
          },
          "LBDatapathAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "LB Data path Availability Alert Severity"
            },
            "type": "String"
          },
          "PIPPacketsInDDoSEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "PIP Packets In DDoS Evaluation Frequency"
            },
            "type": "string"
          },
          "LBDatapathAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "LB Data path Availability Policy Effect"
            },
            "type": "string"
          },
          "LBUsedSNATPortsEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "LB Used SNAT Ports Evaluation Frequency"
            },
            "type": "string"
          },
          "PIPBytesInDDoSEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "PIP Bytes In DDoS Evaluation Frequency"
            },
            "type": "string"
          },
          "VNETDDOSAttackEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VNET DDoS Attack Evaluation Frequency"
            },
            "type": "string"
          },
          "LBDatapathAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "LB Data path Availability Window Size"
            },
            "type": "string"
          },
          "PIPDDoSAttackEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "PIP DDoS Attack Evaluation Frequency"
            },
            "type": "string"
          },
          "LBDatapathAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "LB Data path Availability Alert State"
            },
            "type": "string"
          },
          "LBHealthProbeStatusAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "LB Health Probe Status Alert Severity"
            },
            "type": "String"
          },
          "PIPVIPAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert for PIP VIP Availability",
              "displayName": "PIP VIP Availability Alert Severity"
            },
            "type": "String"
          },
          "LBHealthProbeStatusPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "LB Health Probe Status Policy Effect"
            },
            "type": "string"
          },
          "PIPVIPAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "PIP VIP Availability Policy Effect"
            },
            "type": "string"
          },
          "LBHealthProbeStatusWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "LB Health Probe Status Window Size"
            },
            "type": "string"
          },
          "LBHealthProbeStatusAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "LB Health Probe Status Alert State"
            },
            "type": "string"
          },
          "PIPPacketsInDDoSAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "4",
            "metadata": {
              "description": "Severity of the alert for PIP Packets In DDoS",
              "displayName": "PIP Packets In DDoS Alert Severity"
            },
            "type": "String"
          },
          "PIPVIPAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "PIP VIP Availability Alert State"
            },
            "type": "string"
          },
          "PIPPacketsInDDoSPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "PIP Packets In DDoS Policy Effect"
            },
            "type": "string"
          },
          "LBUsedSNATPortsAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "LB Used SNAT Ports Alert Severity"
            },
            "type": "String"
          },
          "PIPVIPAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "PIP VIP Availability Window Size"
            },
            "type": "string"
          },
          "PIPVIPAvailabilityThreshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "PIP VIP Availability Threshold"
            },
            "type": "string"
          },
          "VNETDDOSAttackAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert for VNET DDoS Attack",
              "displayName": "VNET DDoS Attack Alert Severity"
            },
            "type": "String"
          },
          "PIPBytesInDDoSAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "4",
            "metadata": {
              "description": "Severity of the alert for PIP Bytes In DDoS",
              "displayName": "PIP Bytes In DDoS Alert Severity"
            },
            "type": "String"
          },
          "LBUsedSNATPortsPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "LB Used SNAT Ports Policy Effect"
            },
            "type": "string"
          },
          "VNETDDOSAttackPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VNET DDoS Attack Policy Effect"
            },
            "type": "string"
          },
          "PIPPacketsInDDoSWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "PIP Packets In DDoS Window Size"
            },
            "type": "string"
          },
          "PIPDDoSAttackAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert for PIP DDoS Attack",
              "displayName": "PIP DDoS Attack Alert Severity"
            },
            "type": "String"
          },
          "PIPPacketsInDDoSAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "PIP Packets In DDoS Alert State"
            },
            "type": "string"
          },
          "PIPBytesInDDoSPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "PIP Bytes In DDoS Policy Effect"
            },
            "type": "string"
          },
          "PIPDDoSAttackPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "PIP DDoS Attack Policy Effect"
            },
            "type": "string"
          },
          "LBUsedSNATPortsAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "LB Used SNAT Ports Alert State"
            },
            "type": "string"
          },
          "LBUsedSNATPortsWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "LB Used SNAT Ports Window Size"
            },
            "type": "string"
          },
          "PIPPacketsInDDoSThreshold": {
            "defaultValue": "40000",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "PIP Packets In DDoS Threshold"
            },
            "type": "string"
          },
          "AGWApplicationGatewayTotalTimeEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "AGW Total Time Evaluation Frequency"
            },
            "type": "string"
          },
          "AGWBackendLastByteResponseTimeEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "AGW Backend Last Byte Response Time Evaluation Frequency"
            },
            "type": "string"
          },
          "VNETDDOSAttackAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "VNET DDoS Attack Alert State"
            },
            "type": "string"
          },
          "PIPBytesInDDoSAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "PIP Bytes In DDoS Alert State"
            },
            "type": "string"
          },
          "PIPBytesInDDoSWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "PIP Bytes In DDoS Window Size"
            },
            "type": "string"
          },
          "VNETDDOSAttackWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VNET DDoS Attack Window Size"
            },
            "type": "string"
          },
          "PIPBytesInDDoSThreshold": {
            "defaultValue": "8000000",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "PIP Bytes In DDoS Threshold"
            },
            "type": "string"
          },
          "AGWApplicationGatewayTotalTimeAlertSensitivity": {
            "allowedValues": [
              "Low",
              "Medium",
              "High"
            ],
            "defaultValue": "Medium",
            "metadata": {
              "description": "Dynamic Sensitivity of the alert",
              "displayName": "AGW Total Time Dynamic Alert Sensitivity"
            },
            "type": "String"
          },
          "PIPDDoSAttackWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "PIP DDoS Attack Window Size"
            },
            "type": "string"
          },
          "PIPDDoSAttackAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "PIP DDoS Attack Alert State"
            },
            "type": "string"
          },
          "VNETDDOSAttackThreshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VNET DDoS Attack Threshold"
            },
            "type": "string"
          },
          "AGWBackendLastByteResponseTimeAlertSensitivity": {
            "allowedValues": [
              "Low",
              "Medium",
              "High"
            ],
            "defaultValue": "Medium",
            "metadata": {
              "description": "Dynamic Severity of the alert",
              "displayName": "AGW Backend Last Byte Response Time Dynamic Alert Sensitivity"
            },
            "type": "String"
          },
          "CDNPOriginHealthPercentageEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "CDN Origin Health Percentage Evaluation Frequency"
            },
            "type": "string"
          },
          "PIPDDoSAttackThreshold": {
            "defaultValue": "0",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "PIP DDoS Attack Threshold"
            },
            "type": "string"
          },
          "AGWBackendLastByteResponseTimeAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "AGW Backend Last Byte Response Time Alert Severity"
            },
            "type": "String"
          },
          "AGWApplicationGatewayTotalTimeAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "AGW Total Time Alert Severity"
            },
            "type": "String"
          },
          "FDBackendRequestLatencyEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "FD Backend Request Latency Evaluation Frequency"
            },
            "type": "string"
          },
          "AGWBackendLastByteResponseTimePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "AGW Backend Last Byte Response Time Policy Effect"
            },
            "type": "string"
          },
          "AGWApplicationGatewayTotalTimePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "AGW Total Time Policy Effect"
            },
            "type": "string"
          },
          "AGWApplicationGatewayTotalTimeWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "AGW Total Time Window Size"
            },
            "type": "string"
          },
          "AGWApplicationGatewayTotalTimeAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "AGW Total Time Alert State"
            },
            "type": "string"
          },
          "AGWBackendLastByteResponseTimeAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "AGW Backend Last Byte Response Time Alert State"
            },
            "type": "string"
          },
          "AGWBackendLastByteResponseTimeWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "AGW Backend Last Byte Response Time Window Size"
            },
            "type": "string"
          },
          "AGWUnhealthyHostCountEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "AGW Unhealthy Host Count Evaluation Frequency"
            },
            "type": "string"
          },
          "CDNPOriginHealthPercentageAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "CDN Origin Health Percentage Alert Severity"
            },
            "type": "String"
          },
          "CDNPOriginHealthPercentagePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "CDN Origin Health Percentage Policy Effect"
            },
            "type": "string"
          },
          "CDNPOriginHealthPercentageAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "CDN Origin Health Percentage Alert State"
            },
            "type": "string"
          },
          "AGWFailedRequestsEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "AGW Failed Requests Evaluation Frequency"
            },
            "type": "string"
          },
          "CDNPOriginLatencyEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "CDN Origin Latency Evaluation Frequency"
            },
            "type": "string"
          },
          "AGWResponseStatusEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "AGW Response Status Evaluation Frequency"
            },
            "type": "string"
          },
          "CDNPPercentage4XXEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "CDN Percentage 4XX Evaluation Frequency"
            },
            "type": "string"
          },
          "CDNPOriginHealthPercentageWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "CDN Origin Health Percentage Window Size"
            },
            "type": "string"
          },
          "FDBackendRequestLatencyAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "FD Backend Request Latency Alert Severity"
            },
            "type": "String"
          },
          "CDNPPercentage5XXEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "CDN Percentage 5XX Evaluation Frequency"
            },
            "type": "string"
          },
          "AGWCapacityUnitsEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "AGW Capacity Units Evaluation Frequency"
            },
            "type": "string"
          },
          "FDBackendRequestLatencyPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "FD Backend Request Latency Policy Effect"
            },
            "type": "string"
          },
          "TMEndpointHealthEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "TM Enpoint Health Evaluation Frequency"
            },
            "type": "string"
          },
          "AGWUnhealthyHostCountAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "AGW Unhealthy Host Count Alert Severity"
            },
            "type": "String"
          },
          "AGWComputeUnitsEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "AGW Compute Units Evaluation Frequency"
            },
            "type": "string"
          },
          "FDBackendHealthEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "FD Backend Health Evaluation Frequency"
            },
            "type": "string"
          },
          "AGWUnhealthyHostCountPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "AGW Unhealthy Host Count Policy Effect"
            },
            "type": "string"
          },
          "AGWFailedRequestsAlertSensitivity": {
            "allowedValues": [
              "Low",
              "Medium",
              "High"
            ],
            "defaultValue": "Medium",
            "metadata": {
              "description": "Dynamic Sensitivity of the alert",
              "displayName": "AGW Failed Requests Dynamic Alert Sensitivity"
            },
            "type": "String"
          },
          "AGWResponseStatusAlertSensitivity": {
            "allowedValues": [
              "Low",
              "Medium",
              "High"
            ],
            "defaultValue": "Medium",
            "metadata": {
              "description": "Dynamic Sensitivity of the alert",
              "displayName": "AGW Response Status Dynamic Alert Sensitivity"
            },
            "type": "String"
          },
          "FDBackendRequestLatencyWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "FD Backend Request Latency Window Size"
            },
            "type": "string"
          },
          "FDBackendRequestLatencyAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "FD Backend Request Latency Alert State"
            },
            "type": "string"
          },
          "AGWUnhealthyHostCountAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "AGW Unhealthy Host Count Alert State"
            },
            "type": "string"
          },
          "AGWUnhealthyHostCountWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "AGW Unhealthy Host Count Window Size"
            },
            "type": "string"
          },
          "CDNPPercentage4XXAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "CDN Percentage 4XX Alert Severity"
            },
            "type": "String"
          },
          "CDNPPercentage5XXAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "CDN Percentage 5XX Alert Severity"
            },
            "type": "String"
          },
          "AGWResponseStatusAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "AGW Response Status Alert Severity"
            },
            "type": "String"
          },
          "CDNPOriginLatencyAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "CDN Origin Latancy Alert Severity"
            },
            "type": "String"
          },
          "AGWFailedRequestsAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "AGW Failed Requests Alert Severity"
            },
            "type": "String"
          },
          "AGWResponseStatusPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "AGW Response Status Policy Effect"
            },
            "type": "string"
          },
          "AGWFailedRequestsPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "AGW Failed Requests Policy Effect"
            },
            "type": "string"
          },
          "AGWCPUUtilEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "AGW CPU Util Evaluation Frequency"
            },
            "type": "string"
          },
          "AGWCapacityUnitsAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "AGW Capacity Units Alert Severity"
            },
            "type": "String"
          },
          "CDNPOriginLatencyPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "CDN Origin Latency Policy Effect"
            },
            "type": "string"
          },
          "CDNPPercentage5XXPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "CDN Percentage 5XX Policy Effect"
            },
            "type": "string"
          },
          "CDNPPercentage4XXPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "CDN Percentage 4XX Policy Effect"
            },
            "type": "string"
          },
          "TMEndpointHealthAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "TM Enpoint Health Alert Severity"
            },
            "type": "String"
          },
          "AGWCapacityUnitsPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "AGW Capacity Units Policy Effect"
            },
            "type": "string"
          },
          "TMEndpointHealthPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "TM Enpoint Health Policy Effect"
            },
            "type": "string"
          },
          "FDBackendHealthAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "FD Backend Health Alert Severity"
            },
            "type": "String"
          },
          "AGWComputeUnitsAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "AGW Compute Units Alert Severity"
            },
            "type": "String"
          },
          "CDNPPercentage5XXWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "CDN Percentage 5XX Window Size"
            },
            "type": "string"
          },
          "CDNPOriginLatencyAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "CDN Origin Latency Alert State"
            },
            "type": "string"
          },
          "CDNPPercentage4XXAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "CDN Percentage 4XX Alert State"
            },
            "type": "string"
          },
          "AGWResponseStatusAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "AGW Response Status Alert State"
            },
            "type": "string"
          },
          "CDNPPercentage4XXWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "CDN Percentage 4XX Window Size"
            },
            "type": "string"
          },
          "CDNPOriginLatencyWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "CDN Origin Latency Window Size"
            },
            "type": "string"
          },
          "FDBackendHealthPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "FD Backend Health Policy Effect"
            },
            "type": "string"
          },
          "AGWResponseStatusWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "AGW Response Status Window Size"
            },
            "type": "string"
          },
          "CDNPPercentage5XXAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "CDN Percentage 5XX Alert State"
            },
            "type": "string"
          },
          "AGWFailedRequestsAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "AGW Failed Requests Alert State"
            },
            "type": "string"
          },
          "AGWFailedRequestsWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "AGW Failed Requests Window Size"
            },
            "type": "string"
          },
          "AGWComputeUnitsPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "AGW Compute Units Policy Effect"
            },
            "type": "string"
          },
          "AGWCapacityUnitsWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "AGW Capacity Units Window Size"
            },
            "type": "string"
          },
          "TMEndpointHealthWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "TM Enpoint Health Window Size"
            },
            "type": "string"
          },
          "TMEndpointHealthAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "TM Enpoint Health Alert State"
            },
            "type": "string"
          },
          "AGWCapacityUnitsAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "AGW Capacity Units Alert State"
            },
            "type": "string"
          },
          "FDBackendHealthAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "FD Backend Health Alert State"
            },
            "type": "string"
          },
          "AGWComputeUnitsWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "AGW Compute Units Window Size"
            },
            "type": "string"
          },
          "AGWComputeUnitsAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "AGW Compute Units Alert State"
            },
            "type": "string"
          },
          "FDBackendHealthWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "FD Backend Health Window Size"
            },
            "type": "string"
          },
          "AGWCPUUtilAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "AGW CPU Util Alert Severity"
            },
            "type": "String"
          },
          "AGWCPUUtilPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "AGW CPU Util Policy Effect"
            },
            "type": "string"
          },
          "AGWCPUUtilWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "AGW CPU Util Window Size"
            },
            "type": "string"
          },
          "AGWCPUUtilAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "AGW CPU Util Alert State"
            },
            "type": "string"
          },
          "AGWApplicationGatewayTotalTimeFailingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "AGW Total Time Failing Periods"
            },
            "type": "string"
          },
          "AGWApplicationGatewayTotalTimeEvaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "AGW Total Time Evaluation Periods"
            },
            "type": "string"
          },
          "AGWBackendLastByteResponseTimeFailingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "AGW Backend Last Byte Response Time Failing Periods"
            },
            "type": "string"
          },
          "AGWBackendLastByteResponseTimeEvaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "AGW Backend Last Byte Response Time Evaluation Periods"
            },
            "type": "string"
          },
          "AGWFailedRequestsFailingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "AGW Failed Requests Failing Periods"
            },
            "type": "string"
          },
          "AGWFailedRequestsEvaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "AGW Failed Requests Evaluation Periods"
            },
            "type": "string"
          },
          "AGWResponseStatusFailingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "AGW Response Status Failing Periods"
            },
            "type": "string"
          },
          "AGWResponseStatusEvaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "AGW Response Status Evaluation Periods"
            },
            "type": "string"
          },
          "CDNPOriginLatencyFailingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "CDN Origin Latency Failing Periods"
            },
            "type": "String"
          },
          "CDNPOriginLatencyEvaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "CDN Origin Latency Evaluation Periods"
            },
            "type": "String"
          },
          "CDNPPercentage4XXFailingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "CDN Percentage 4XX Failing Periods"
            },
            "type": "String"
          },
          "CDNPPercentage4XXEvaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "CDN Percentage 4XX Evaluation Periods"
            },
            "type": "String"
          },
          "CDNPPercentage5XXFailingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "CDN Percentage 5XX Failing Periods"
            },
            "type": "String"
          },
          "CDNPPercentage5XXEvaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "CDN Percentage 5XX Evaluation Periods"
            },
            "type": "String"
          }
        },
        "policyDefinitionGroups": null,
        "policyDefinitions": [
          {
            "policyDefinitionReferenceId": "ALZ_PIPBytesInDDoS",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('PIPBytesInDDoSEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('PIPBytesInDDoSWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('PIPBytesInDDoSAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('PIPBytesInDDoSAlertState')]"
              },
              "threshold": {
                "value": "[parameters('PIPBytesInDDoSThreshold')]"
              },
              "effect": {
                "value": "[parameters('PIPBytesInDDoSPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_BytesInDDoSAttack_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_PIPDDoSAttack",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('PIPDDoSAttackEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('PIPDDoSAttackWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('PIPDDoSAttackAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('PIPDDoSAttackAlertState')]"
              },
              "threshold": {
                "value": "[parameters('PIPDDoSAttackThreshold')]"
              },
              "effect": {
                "value": "[parameters('PIPDDoSAttackPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_DDoSAttack_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_PIPPacketsInDDoS",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('PIPPacketsInDDoSEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('PIPPacketsInDDoSWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('PIPPacketsInDDoSAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('PIPPacketsInDDoSAlertState')]"
              },
              "threshold": {
                "value": "[parameters('PIPPacketsInDDoSThreshold')]"
              },
              "effect": {
                "value": "[parameters('PIPPacketsInDDoSPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_PacketsInDDoSAttack_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_PIPVIPAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('PIPVIPAvailabilityEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('PIPVIPAvailabilityWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('PIPVIPAvailabilityAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('PIPVIPAvailabilityAlertState')]"
              },
              "threshold": {
                "value": "[parameters('PIPVIPAvailabilityThreshold')]"
              },
              "effect": {
                "value": "[parameters('PIPVIPAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_VIPAvailability_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VNETDDOSAttack",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VNETDDOSAttackEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VNETDDOSAttackWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VNETDDOSAttackAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VNETDDOSAttackAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VNETDDOSAttackThreshold')]"
              },
              "effect": {
                "value": "[parameters('VNETDDOSAttackPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VNET_DDoSAttack_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_AGWTotalTime",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('AGWApplicationGatewayTotalTimeEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('AGWApplicationGatewayTotalTimeWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('AGWApplicationGatewayTotalTimeAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('AGWApplicationGatewayTotalTimeAlertState')]"
              },
              "failingPeriods": {
                "value": "[parameters('AGWApplicationGatewayTotalTimeFailingPeriods')]"
              },
              "effect": {
                "value": "[parameters('AGWApplicationGatewayTotalTimePolicyEffect')]"
              },
              "alertSensitivity": {
                "value": "[parameters('AGWApplicationGatewayTotalTimeAlertSensitivity')]"
              },
              "evaluationperiods": {
                "value": "[parameters('AGWApplicationGatewayTotalTimeEvaluationPeriods')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_ApplicationGatewayTotalTime_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_AGWBackendLastByteResponseTime",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('AGWBackendLastByteResponseTimeEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('AGWBackendLastByteResponseTimeWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('AGWBackendLastByteResponseTimeAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('AGWBackendLastByteResponseTimeAlertState')]"
              },
              "failingPeriods": {
                "value": "[parameters('AGWBackendLastByteResponseTimeFailingPeriods')]"
              },
              "effect": {
                "value": "[parameters('AGWBackendLastByteResponseTimePolicyEffect')]"
              },
              "alertSensitivity": {
                "value": "[parameters('AGWBackendLastByteResponseTimeAlertSensitivity')]"
              },
              "evaluationperiods": {
                "value": "[parameters('AGWBackendLastByteResponseTimeEvaluationPeriods')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_BackendLastByteResponseTime_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_AGWCapacityUnits",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('AGWCapacityUnitsEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('AGWCapacityUnitsWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('AGWCapacityUnitsAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('AGWCapacityUnitsAlertState')]"
              },
              "effect": {
                "value": "[parameters('AGWCapacityUnitsPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_CapacityUnits_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_AGWComputeUnits",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('AGWComputeUnitsEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('AGWComputeUnitsWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('AGWComputeUnitsAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('AGWComputeUnitsAlertState')]"
              },
              "effect": {
                "value": "[parameters('AGWComputeUnitsPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_ComputeUnits_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_AGWCPUUtilization",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('AGWCPUUtilEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('AGWCPUUtilWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('AGWCPUUtilAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('AGWCPUUtilAlertState')]"
              },
              "effect": {
                "value": "[parameters('AGWCPUUtilPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_CPUUtilization_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_AGWFailedRequests",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('AGWFailedRequestsEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('AGWFailedRequestsWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('AGWFailedRequestsAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('AGWFailedRequestsAlertState')]"
              },
              "failingPeriods": {
                "value": "[parameters('AGWFailedRequestsFailingPeriods')]"
              },
              "effect": {
                "value": "[parameters('AGWFailedRequestsPolicyEffect')]"
              },
              "alertSensitivity": {
                "value": "[parameters('AGWFailedRequestsAlertSensitivity')]"
              },
              "evaluationperiods": {
                "value": "[parameters('AGWFailedRequestsEvaluationPeriods')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_FailedRequests_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_AGWResponseStatus",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('AGWResponseStatusEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('AGWResponseStatusWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('AGWResponseStatusAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('AGWResponseStatusAlertState')]"
              },
              "failingPeriods": {
                "value": "[parameters('AGWResponseStatusFailingPeriods')]"
              },
              "effect": {
                "value": "[parameters('AGWResponseStatusPolicyEffect')]"
              },
              "alertSensitivity": {
                "value": "[parameters('AGWResponseStatusAlertSensitivity')]"
              },
              "evaluationperiods": {
                "value": "[parameters('AGWResponseStatusEvaluationPeriods')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_ResponseStatus_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_AGWUnhealthyHostCount",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('AGWUnhealthyHostCountEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('AGWUnhealthyHostCountWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('AGWUnhealthyHostCountAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('AGWUnhealthyHostCountAlertState')]"
              },
              "effect": {
                "value": "[parameters('AGWUnhealthyHostCountPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_UnhealthyHostCount_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_LBDataPathAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('LBDataPathAvailabilityEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('LBDataPathAvailabilityWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('LBDataPathAvailabilityAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('LBDataPathAvailabilityAlertState')]"
              },
              "effect": {
                "value": "[parameters('LBDataPathAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ALB_DataPathAvailability_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_LBGlobalBackendAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('LBGlobalBackendAvailabilityEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('LBGlobalBackendAvailabilityWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('LBGlobalBackendAvailabilityAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('LBGlobalBackendAvailabilityAlertState')]"
              },
              "effect": {
                "value": "[parameters('LBGlobalBackendAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ALB_GlobalBackendAvailability_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_LBHealthProbeStatus",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('LBHealthProbeStatusEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('LBHealthProbeStatusWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('LBHealthProbeStatusAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('LBHealthProbeStatusAlertState')]"
              },
              "effect": {
                "value": "[parameters('LBHealthProbeStatusPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ALB_HealthProbeStatus_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_LBUsedSNATPorts",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('LBUsedSNATPortsEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('LBUsedSNATPortsWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('LBUsedSNATPortsAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('LBUsedSNATPortsAlertState')]"
              },
              "effect": {
                "value": "[parameters('LBUsedSNATPortsPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ALB_UsedSNATPorts_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_CDNPOriginHealthPercentage",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('CDNPOriginHealthPercentageEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('CDNPOriginHealthPercentageWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('CDNPOriginHealthPercentageAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('CDNPOriginHealthPercentageAlertState')]"
              },
              "effect": {
                "value": "[parameters('CDNPOriginHealthPercentagePolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FrontDoorCDN_OriginHealthPercentage_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_CDNPOriginLatency",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('CDNPOriginLatencyEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('CDNPOriginLatencyWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('CDNPOriginLatencyAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('CDNPOriginLatencyAlertState')]"
              },
              "failingPeriods": {
                "value": "[parameters('CDNPOriginLatencyFailingPeriods')]"
              },
              "effect": {
                "value": "[parameters('CDNPOriginLatencyPolicyEffect')]"
              },
              "evaluationperiods": {
                "value": "[parameters('CDNPOriginLatencyEvaluationPeriods')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FrontDoorCDN_OriginLatency_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_CDNPPercentage4XX",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('CDNPPercentage4XXEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('CDNPPercentage4XXWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('CDNPPercentage4XXAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('CDNPPercentage4XXAlertState')]"
              },
              "failingPeriods": {
                "value": "[parameters('CDNPPercentage4XXFailingPeriods')]"
              },
              "effect": {
                "value": "[parameters('CDNPPercentage4XXPolicyEffect')]"
              },
              "evaluationperiods": {
                "value": "[parameters('CDNPPercentage4XXEvaluationPeriods')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FrontDoorCDN_Percentage4XX_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_CDNPPercentage5XX",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('CDNPPercentage5XXEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('CDNPPercentage5XXWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('CDNPPercentage5XXAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('CDNPPercentage5XXAlertState')]"
              },
              "failingPeriods": {
                "value": "[parameters('CDNPPercentage5XXFailingPeriods')]"
              },
              "effect": {
                "value": "[parameters('CDNPPercentage5XXPolicyEffect')]"
              },
              "evaluationperiods": {
                "value": "[parameters('CDNPPercentage5XXEvaluationPeriods')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FrontDoorCDN_Percentage5XX_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_TMEndpointHealth",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('TMEndpointHealthEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('TMEndpointHealthWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('TMEndpointHealthAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('TMEndpointHealthAlertState')]"
              },
              "effect": {
                "value": "[parameters('TMEndpointHealthPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_TM_EndpointHealth_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_FDBackendHealth",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('FDBackendHealthEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('FDBackendHealthWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('FDBackendHealthAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('FDBackendHealthAlertState')]"
              },
              "effect": {
                "value": "[parameters('FDBackendHealthPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FD_BackendHealth_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_FDBackendRequestLatency",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('FDBackendRequestLatencyEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('FDBackendRequestLatencyWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('FDBackendRequestLatencyAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('FDBackendRequestLatencyAlertState')]"
              },
              "effect": {
                "value": "[parameters('FDBackendRequestLatencyPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FD_BackendRequestLatency_Alert"
          }
        ],
        "name": "Alerting-LoadBalancing",
        "displayName": "Deploy Azure Monitor Baseline Alerts for Load Balancing"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Notification-Assets": {
        "metadata": {
          "_deployed_by_amba": true,
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.3.1",
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "This initiative deploys Notification Assets for Azure Monitor Baseline Alerts. This includes the setup of an Alert Processing Rule and an Action Group to manage notifications and actions, along with a Notification Suppression Rule to manage alert notifications, as well as a Notification Suppression Rule to control alert notifications.",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Notification-Assets",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "ALZMonitorActionGroupEmail": {
            "defaultValue": [],
            "metadata": {
              "displayName": "Action Group Email Addresses",
              "description": "Email addresses to send alerts to"
            },
            "type": "Array"
          },
          "BYOActionGroup": {
            "defaultValue": [],
            "metadata": {
              "displayName": "Customer defined Action Group Resource IDs",
              "description": "The Resource IDs of existing Action Groups currently deployed in the environment."
            },
            "type": "array"
          },
          "ALZMonitorResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "displayName": "Resource Group Name",
              "description": "Name of the resource group to deploy the alerts to"
            },
            "type": "String"
          },
          "ALZMonitorResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "displayName": "Resource Group Location",
              "description": "Location of the resource group"
            },
            "type": "String"
          },
          "ALZMonitorResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_alz_monitor": true
            },
            "metadata": {
              "displayName": "Resource Group Tags",
              "description": "Tags to apply to the resource group"
            },
            "type": "Object"
          },
          "BYOAlertProcessingRule": {
            "defaultValue": "",
            "metadata": {
              "displayName": "Customer defined Alert Processing Rule Resource ID",
              "description": "The Resource ID of an existing Alert Processing Rule already deployed by the customer in his environment"
            },
            "type": "String"
          },
          "ALZLogicappCallbackUrl": {
            "defaultValue": "",
            "metadata": {
              "displayName": "Logic App Callback URL",
              "description": "Callback URL that triggers the Logic App"
            },
            "type": "String"
          },
          "ALZLogicappResourceId": {
            "defaultValue": "",
            "metadata": {
              "displayName": "Logic App Resource Id",
              "description": "Logic App Resource Id for Action Group to send alerts to"
            },
            "type": "String"
          },
          "ALZFunctionTriggerUrl": {
            "defaultValue": "",
            "metadata": {
              "displayName": "Function Trigger URL",
              "description": "URL that triggers the Function"
            },
            "type": "String"
          },
          "ALZEventHubResourceId": {
            "defaultValue": [],
            "metadata": {
              "displayName": "Event Hub resource Ids",
              "description": "Event Hub resource Ids for action group to send alerts to"
            },
            "type": "array"
          },
          "ALZFunctionResourceId": {
            "defaultValue": "",
            "metadata": {
              "displayName": "Function Resource Id",
              "description": "Function Resource Id for Action Group to send alerts to"
            },
            "type": "String"
          },
          "ALZWebhookServiceUri": {
            "defaultValue": [],
            "metadata": {
              "displayName": "Webhook Service Uri(s)",
              "description": "Indicates the service uri(s) of the webhook to send alerts to"
            },
            "type": "Array"
          },
          "ALZArmRoleId": {
            "defaultValue": [],
            "metadata": {
              "displayName": "Arm Role Ids",
              "description": "Arm Built-in Role Ids for action group to send alerts to"
            },
            "type": "array"
          },
          "ALZMonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "displayName": "ALZ Monitoring disabled tag values(s)",
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled."
            },
            "type": "Array"
          },
          "ALZMonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "displayName": "ALZ Monitoring disabled tag name",
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled."
            },
            "type": "String"
          }
        },
        "policyDefinitionGroups": null,
        "policyDefinitions": [
          {
            "policyDefinitionReferenceId": "ALZ_AlertProcessing_Rule",
            "parameters": {
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "ALZMonitorActionGroupEmail": {
                "value": "[parameters('ALZMonitorActionGroupEmail')]"
              },
              "BYOActionGroup": {
                "value": "[parameters('BYOActionGroup')]"
              },
              "ALZMonitorResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "ALZMonitorResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "ALZMonitorResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "BYOAlertProcessingRule": {
                "value": "[parameters('BYOAlertProcessingRule')]"
              },
              "ALZLogicappCallbackUrl": {
                "value": "[parameters('ALZLogicappCallbackUrl')]"
              },
              "ALZLogicappResourceId": {
                "value": "[parameters('ALZLogicappResourceId')]"
              },
              "ALZFunctionTriggerUrl": {
                "value": "[parameters('ALZFunctionTriggerUrl')]"
              },
              "ALZEventHubResourceId": {
                "value": "[parameters('ALZEventHubResourceId')]"
              },
              "ALZFunctionResourceId": {
                "value": "[parameters('ALZFunctionResourceId')]"
              },
              "ALZWebhookServiceUri": {
                "value": "[parameters('ALZWebhookServiceUri')]"
              },
              "ALZArmRoleId": {
                "value": "[parameters('ALZArmRoleId')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AlertProcessing_Rule"
          },
          {
            "policyDefinitionReferenceId": "ALZ_Suppression_AlertProcessing_Rule",
            "parameters": {
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "ALZMonitorResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "ALZMonitorResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "ALZMonitorResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Suppression_AlertProcessing_Rule"
          }
        ],
        "name": "Notification-Assets",
        "displayName": "Deploy Azure Monitor Baseline Alerts - Notification Assets"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-KeyManagement": {
        "metadata": {
          "_deployed_by_amba": true,
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.0.1",
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "This initiative deploys Azure Monitor Baseline Alerts to monitor Key Management Services such as Azure Key Vault, and Managed HSM.",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-KeyManagement",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "ALZMonitorResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "displayName": "ALZ Monitor Resource Group Name",
              "description": "Name of the resource group where the ALZ Monitor resources will be deployed"
            },
            "type": "String"
          },
          "ALZMonitorResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "displayName": "ALZ Monitor Resource Group Location",
              "description": "Location of the resource group where the ALZ Monitor resources will be deployed"
            },
            "type": "String"
          },
          "ALZMonitorResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_amba": true
            },
            "metadata": {
              "displayName": "ALZ Monitor Resource Group Tags",
              "description": "Tags for the resource group where the ALZ Monitor resources will be deployed"
            },
            "type": "Object"
          },
          "ALZMonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "displayName": "ALZ Monitoring disabled tag values(s)",
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled."
            },
            "type": "Array"
          },
          "ALZMonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "displayName": "ALZ Monitoring disabled tag name",
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled."
            },
            "type": "String"
          },
          "HSMsLatencyAvailabilityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Latency Availability Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            },
            "type": "string"
          },
          "KvLatencyAvailabilityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "displayName": "Key Vault Latency Availability Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            },
            "type": "string"
          },
          "HSMsLatencyAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Latency Availability Alert Severity",
              "description": "Severity of the alert for Key Vault Managed HSMs Latency Availability"
            },
            "type": "String"
          },
          "HSMsAvailabilityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Availability Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            },
            "type": "string"
          },
          "HSMsLatencyAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Latency Availability Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist"
            },
            "type": "string"
          },
          "KvLatencyAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "displayName": "Key Vault Latency Availability Alert Severity",
              "description": "Severity of the alert for Key Vault Latency Availability"
            },
            "type": "String"
          },
          "KvLatencyAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "displayName": "Key Vault Latency Availability Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist"
            },
            "type": "string"
          },
          "KvAvailabilityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "displayName": "Key Vault Availability Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            },
            "type": "string"
          },
          "HSMsLatencyAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Latency Availability Window Size",
              "description": "Window size for the alert"
            },
            "type": "string"
          },
          "HSMsLatencyAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Latency Availability Alert State",
              "description": "Alert state for the alert"
            },
            "type": "string"
          },
          "HSMsLatencyAvailabilityThreshold": {
            "defaultValue": "1000",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Latency Availability Threshold",
              "description": "Threshold for the alert"
            },
            "type": "string"
          },
          "KvLatencyAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "Key Vault Latency Availability Alert State",
              "description": "Alert state for the alert"
            },
            "type": "string"
          },
          "KvLatencyAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "displayName": "Key Vault Latency Availability Window Size",
              "description": "Window size for the alert"
            },
            "type": "string"
          },
          "KvLatencyAvailabilityThreshold": {
            "defaultValue": "1000",
            "metadata": {
              "displayName": "Key Vault Latency Availability Threshold",
              "description": "Threshold for the alert"
            },
            "type": "string"
          },
          "activityHSMsDeletePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Delete Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist"
            },
            "type": "string"
          },
          "HSMsAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Availability Alert Severity",
              "description": "Severity of the alert for Key Vault Managed HSMs Availability"
            },
            "type": "String"
          },
          "KVCapacityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "displayName": "Key Vault Capacity Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            },
            "type": "string"
          },
          "activityKVDeletePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "displayName": "Key Vault Delete Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist"
            },
            "type": "string"
          },
          "activityHSMsDeleteAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "Activity Key Vault Managed HSMs Delete Alert State",
              "description": "Alert state for the alert"
            },
            "type": "string"
          },
          "KVRequestEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "displayName": "Key Vault Request Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            },
            "type": "string"
          },
          "HSMsAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Availability Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist"
            },
            "type": "string"
          },
          "KvAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "displayName": "Key Vault Availability Alert Severity",
              "description": "Severity of the alert for Key Vault Availability"
            },
            "type": "String"
          },
          "HSMsAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Availability Window Size",
              "description": "Window size for the alert"
            },
            "type": "string"
          },
          "activityKVDeleteAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "Activity Key Vault Delete Alert State",
              "description": "Alert state for the alert"
            },
            "type": "string"
          },
          "HSMsAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Availability Alert State",
              "description": "Alert state for the alert"
            },
            "type": "string"
          },
          "KvAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "displayName": "Key Vault Availability Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist"
            },
            "type": "string"
          },
          "HSMsAvailabilityThreshold": {
            "defaultValue": "20",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Availability Threshold",
              "description": "Threshold for the alert"
            },
            "type": "string"
          },
          "KvAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "Key Vault Availability Alert State",
              "description": "Alert state for the alert"
            },
            "type": "string"
          },
          "KvAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "displayName": "Key Vault Availability Window Size",
              "description": "Window size for the alert"
            },
            "type": "string"
          },
          "KVCapacityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "displayName": "Key Vault Capacity Alert Severity",
              "description": "Severity of the alert for Key Vault Capacity"
            },
            "type": "String"
          },
          "KVAvailabilityThreshold": {
            "defaultValue": "20",
            "metadata": {
              "displayName": "Key Vault Availability Threshold",
              "description": "Threshold for the alert"
            },
            "type": "string"
          },
          "KVRequestAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "displayName": "Key Vault Request Alert Severity",
              "description": "Severity of the alert for Key Vault Request"
            },
            "type": "String"
          },
          "KVCapacityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "displayName": "Key Vault Capacity Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist"
            },
            "type": "string"
          },
          "KVRequestPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "displayName": "Key Vault Request Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist"
            },
            "type": "string"
          },
          "KVCapacityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "Key Vault Capacity Alert State",
              "description": "Alert state for the alert"
            },
            "type": "string"
          },
          "KVCapacityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "displayName": "Key Vault Capacity Window Size",
              "description": "Window size for the alert"
            },
            "type": "string"
          },
          "KVCapacityThreshold": {
            "defaultValue": "75",
            "metadata": {
              "displayName": "Key Vault Capacity Threshold",
              "description": "Threshold for the alert"
            },
            "type": "string"
          },
          "KVRequestWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "displayName": "Key Vault Request Window Size",
              "description": "Window size for the alert"
            },
            "type": "string"
          },
          "KVRequestAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "Key Vault Request Alert State",
              "description": "Alert state for the alert"
            },
            "type": "string"
          }
        },
        "policyDefinitionGroups": null,
        "policyDefinitions": [
          {
            "policyDefinitionReferenceId": "ALZ_KVRequest",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('KVRequestEvaluationFrequency')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('KVRequestAlertState')]"
              },
              "windowSize": {
                "value": "[parameters('KVRequestWindowSize')]"
              },
              "severity": {
                "value": "[parameters('KVRequestAlertSeverity')]"
              },
              "effect": {
                "value": "[parameters('KVRequestPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Requests_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_KvAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('KvAvailabilityEvaluationFrequency')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('KvAvailabilityAlertState')]"
              },
              "windowSize": {
                "value": "[parameters('KvAvailabilityWindowSize')]"
              },
              "threshold": {
                "value": "[parameters('KVAvailabilityThreshold')]"
              },
              "severity": {
                "value": "[parameters('KvAvailabilityAlertSeverity')]"
              },
              "effect": {
                "value": "[parameters('KvAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Availability_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_KvLatencyAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('KvLatencyAvailabilityEvaluationFrequency')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('KvLatencyAvailabilityAlertState')]"
              },
              "windowSize": {
                "value": "[parameters('KvLatencyAvailabilityWindowSize')]"
              },
              "threshold": {
                "value": "[parameters('KvLatencyAvailabilityThreshold')]"
              },
              "severity": {
                "value": "[parameters('KvLatencyAvailabilityAlertSeverity')]"
              },
              "effect": {
                "value": "[parameters('KvLatencyAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Latency_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_KVCapacity",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('KVCapacityEvaluationFrequency')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('KVCapacityAlertState')]"
              },
              "windowSize": {
                "value": "[parameters('KVCapacityWindowSize')]"
              },
              "threshold": {
                "value": "[parameters('KVCapacityThreshold')]"
              },
              "severity": {
                "value": "[parameters('KVCapacityAlertSeverity')]"
              },
              "effect": {
                "value": "[parameters('KVCapacityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Capacity_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_activityKVDelete",
            "parameters": {
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "enabled": {
                "value": "[parameters('activityKVDeleteAlertState')]"
              },
              "effect": {
                "value": "[parameters('activityKVDeletePolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_KeyVault_Delete"
          },
          {
            "policyDefinitionReferenceId": "ALZ_ManagedHSMsAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('HSMsAvailabilityEvaluationFrequency')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('HSMsAvailabilityAlertState')]"
              },
              "windowSize": {
                "value": "[parameters('HSMsAvailabilityWindowSize')]"
              },
              "threshold": {
                "value": "[parameters('HSMsAvailabilityThreshold')]"
              },
              "severity": {
                "value": "[parameters('HSMsAvailabilityAlertSeverity')]"
              },
              "effect": {
                "value": "[parameters('HSMsAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ManagedHSMs_Availability_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_ManagedHSMsLatencyAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('HSMsLatencyAvailabilityEvaluationFrequency')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('HSMsLatencyAvailabilityAlertState')]"
              },
              "windowSize": {
                "value": "[parameters('HSMsLatencyAvailabilityWindowSize')]"
              },
              "threshold": {
                "value": "[parameters('HSMsLatencyAvailabilityThreshold')]"
              },
              "severity": {
                "value": "[parameters('HSMsLatencyAvailabilityAlertSeverity')]"
              },
              "effect": {
                "value": "[parameters('HSMsLatencyAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ManagedHSMs_Latency_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_activityManagedHSMsDelete",
            "parameters": {
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "enabled": {
                "value": "[parameters('activityHSMsDeleteAlertState')]"
              },
              "effect": {
                "value": "[parameters('activityHSMsDeletePolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ActivityLog_ManagedHSMs_Delete"
          }
        ],
        "name": "Alerting-KeyManagement",
        "displayName": "Deploy Azure Monitor Baseline Alerts for Key Management"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-VM": {
        "metadata": {
          "_deployed_by_amba": true,
          "version": "1.0.1",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "This initiative deploys Azure Monitor Baseline Alerts to monitor Azure Virtual Machines.",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-VM",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "ALZMonitorResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the resource group where the ALZ Monitor resources will be deployed",
              "displayName": "ALZ Monitor Resource Group Location"
            },
            "type": "String"
          },
          "ALZMonitorResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_alz_monitor": true
            },
            "metadata": {
              "description": "Tags for the resource group where the ALZ Monitor resources will be deployed",
              "displayName": "ALZ Monitor Resource Group Tags"
            },
            "type": "Object"
          },
          "ALZMonitorResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Name of the resource group where the ALZ Monitor resources will be deployed",
              "displayName": "ALZ Monitor Resource Group Name"
            },
            "type": "String"
          },
          "ALZMonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "ALZMonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "BYOUserAssignedManagedIdentityResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity provided by the customer.",
              "displayName": "Customer defined User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "ALZUserAssignedManagedIdentityName": {
            "defaultValue": "id-AMBA-ARG-Reader-001",
            "metadata": {
              "description": "The name of the user assigned managed identity to be created for monitoring purpose.",
              "displayName": "Name of the user assigned managed identity to be created."
            },
            "type": "string"
          },
          "ALZManagementSubscriptionId": {
            "defaultValue": "",
            "metadata": {
              "description": "The subscription ID of the management subscription where the user assigned managed identity will be created."
            },
            "type": "string"
          },
          "VMDataDiskWriteLatencyEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM Data Disk Write Latency Evaluation Frequency"
            },
            "type": "string"
          },
          "VMDataDiskWriteLatencyComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "VM Data Disk Write Latency Computers To Include"
            },
            "type": "array"
          },
          "VMDataDiskReadLatencyEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM Data Disk Read Latency Evaluation Frequency"
            },
            "type": "string"
          },
          "VMDataDiskReadLatencyComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "VM Data Disk Read Latency Computers To Include"
            },
            "type": "array"
          },
          "VMDataDiskWriteLatencyEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "VM Data Disk Write Latency Evaluation Periods"
            },
            "type": "string"
          },
          "VMOSDiskWriteLatencyEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM OS Disk Write Latency Evaluation Frequency"
            },
            "type": "string"
          },
          "VMOSDiskWriteLatencyComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "VM OS Disk Write Latency Computers To Include"
            },
            "type": "array"
          },
          "VMOSDiskReadLatencyEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM OS Disk Read Latency Evaluation Frequency"
            },
            "type": "string"
          },
          "VMDataDiskReadLatencyEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "VM Data Disk Read Latency Evaluation Periods"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "VM OS Disk Read Latency Computers To Include"
            },
            "type": "array"
          },
          "VMDataDiskWriteLatencyAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM Data Disk Write Latency Auto Resolve Time"
            },
            "type": "string"
          },
          "VMDataDiskWriteLatencyTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM Data Disk Write Latency Time Aggregation"
            },
            "type": "string"
          },
          "VMOSDiskWriteLatencyEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "VM OS Disk Write Latency Evaluation Periods"
            },
            "type": "string"
          },
          "VMDataDiskReadLatencyTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM Data Disk Read Latency Time Aggregation"
            },
            "type": "string"
          },
          "VMDataDiskWriteLatencyFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "VM Data Disk Write Latency Failing Periods"
            },
            "type": "string"
          },
          "VMDataDiskReadLatencyAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM Data Disk Read Latency Auto Resolve Time"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "VM OS Disk Read Latency Evaluation Periods"
            },
            "type": "string"
          },
          "VMDataDiskReadLatencyFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "VM Data Disk Read Latency Failing Periods"
            },
            "type": "string"
          },
          "VMOSDiskWriteLatencyTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM OS Disk Write Latency Time Aggregation"
            },
            "type": "string"
          },
          "VMDataDiskWriteLatencyAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM Data Disk Write Latency",
              "displayName": "VM Data Disk Write Latency Alert Severity"
            },
            "type": "String"
          },
          "VMOSDiskWriteLatencyAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM OS Disk Write Latency Auto Resolve Time"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM OS Disk Read Latency Time Aggregation"
            },
            "type": "string"
          },
          "VMOSDiskWriteLatencyFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "VM OS Disk Write Latency Failing Periods"
            },
            "type": "string"
          },
          "VMDataDiskWriteLatencyPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM Data Disk Write Latency Policy Effect"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM OS Disk Read Latency Auto Resolve Time"
            },
            "type": "string"
          },
          "VMDataDiskSpaceEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM Data Disk Space Evaluation Frequency"
            },
            "type": "string"
          },
          "VMDataDiskReadLatencyAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM Data Disk Read Latency",
              "displayName": "VM Data Disk Read Latency Alert Severity"
            },
            "type": "String"
          },
          "VMDataDiskWriteLatencyAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM Data Disk Write Latency Auto Mitigate"
            },
            "type": "string"
          },
          "VMPercentMemoryEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM Percent Memory Evaluation Frequency"
            },
            "type": "string"
          },
          "VMDataDiskWriteLatencyAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM Data Disk Write Latency Auto Resolve"
            },
            "type": "string"
          },
          "VMDataDiskReadLatencyPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM Data Disk Read Latency Policy Effect"
            },
            "type": "string"
          },
          "VMOSDiskWriteLatencyAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM OS Disk Write Latency",
              "displayName": "VM OS Disk Write Latency Alert Severity"
            },
            "type": "String"
          },
          "VMDataDiskReadLatencyAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM Data Disk Read Latency Auto Mitigate"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "VM OS Disk Read Latency Failing Periods"
            },
            "type": "string"
          },
          "VMDataDiskReadLatencyAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM Data Disk Read Latency Auto Resolve"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM OS Disk Read Latency",
              "displayName": "VM OS Disk Read Latency Alert Severity"
            },
            "type": "String"
          },
          "VMDataDiskWriteLatencyWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM Data Disk Write Latency Window Size"
            },
            "type": "string"
          },
          "VMOSDiskSpaceEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM OS Disk Space Evaluation Frequency"
            },
            "type": "string"
          },
          "VMDataDiskSpaceEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "VM Data Disk Space Evaluation Periods"
            },
            "type": "string"
          },
          "VMOSDiskWriteLatencyAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM OS Disk Write Latency Auto Mitigate"
            },
            "type": "string"
          },
          "VMHeartBeatRGEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM Heart Beat RG Evaluation Frequency"
            },
            "type": "string"
          },
          "VMOSDiskWriteLatencyPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM OS Disk Write Latency Policy Effect"
            },
            "type": "string"
          },
          "VMDataDiskWriteLatencyAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "VM Data Disk Write Latency Alert State"
            },
            "type": "string"
          },
          "VMOSDiskSpaceComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "VM OS Disk Space Computers To Include"
            },
            "type": "array"
          },
          "VMDataDiskReadLatencyAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "VM Data Disk Read Latency Alert State"
            },
            "type": "string"
          },
          "VMDataDiskReadLatencyWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM Data Disk Read Latency Window Size"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM OS Disk Read Latency Policy Effect"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM OS Disk Read Latency Auto Mitigate"
            },
            "type": "string"
          },
          "VMOSDiskWriteLatencyAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM OS Disk Write Latency Auto Resolve"
            },
            "type": "string"
          },
          "VMDataDiskWriteLatencyThreshold": {
            "defaultValue": "30",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM Data Disk Write Latency Threshold"
            },
            "type": "string"
          },
          "VMNetworkOutEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM Network Out Evaluation Frequency"
            },
            "type": "string"
          },
          "VMPercentCPUEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM Percent CPU Evaluation Frequency"
            },
            "type": "string"
          },
          "VMDataDiskReadLatencyThreshold": {
            "defaultValue": "30",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM Data Disk Read Latency Threshold"
            },
            "type": "string"
          },
          "VMOSDiskWriteLatencyAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "VM OS Disk Write Latency Alert State"
            },
            "type": "string"
          },
          "VMOSDiskSpaceEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "VM OS Disk Space Evaluation Periods"
            },
            "type": "string"
          },
          "VMOSDiskWriteLatencyWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM OS Disk Write Latency Window Size"
            },
            "type": "string"
          },
          "VMNetworkOutComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "VM Network Out Computers To Include"
            },
            "type": "array"
          },
          "VMPercentMemoryAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM Percent Memory Auto Resolve Time"
            },
            "type": "string"
          },
          "VMNetworkInEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM Network In Evaluation Frequency"
            },
            "type": "string"
          },
          "VMDataDiskWriteLatencyOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM Data Disk Write Latency Operator"
            },
            "type": "string"
          },
          "VMDataDiskSpaceAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM Data Disk Space Auto Resolve Time"
            },
            "type": "string"
          },
          "VMDataDiskSpaceTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM Data Disk Space Time Aggregation"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM OS Disk Read Latency Auto Resolve"
            },
            "type": "string"
          },
          "VMPercentMemoryTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM Percent Memory Time Aggregation"
            },
            "type": "string"
          },
          "VMOSDiskWriteLatencyThreshold": {
            "defaultValue": "30",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM OS Disk Write Latency Threshold"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM OS Disk Read Latency Window Size"
            },
            "type": "string"
          },
          "VMDataDiskSpaceFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "VM Data Disk Space Failing Periods"
            },
            "type": "string"
          },
          "VMNetworkInComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "VM Network In Computers To Include"
            },
            "type": "array"
          },
          "VMDataDiskReadLatencyOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM Data Disk Read Latency Operator"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "VM OS Disk Read Latency Alert State"
            },
            "type": "string"
          },
          "VMNetworkOutEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "VM Network Out Evaluation Periods"
            },
            "type": "string"
          },
          "VMNetworkInEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "VM Network In Evaluation Periods"
            },
            "type": "string"
          },
          "VMOSDiskSpaceTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM OS Disk Space Time Aggregation"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyThreshold": {
            "defaultValue": "30",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM OS Disk Read Latency Threshold"
            },
            "type": "string"
          },
          "VMHeartBeatRGTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM Heart Beat RG Time Aggregation"
            },
            "type": "string"
          },
          "VMPercentMemoryAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM Percent Memory",
              "displayName": "VM Percent Memory Alert Severity"
            },
            "type": "String"
          },
          "VMOSDiskSpaceAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM OS Disk Space Auto Resolve Time"
            },
            "type": "string"
          },
          "VMDataDiskSpaceAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM Data Disk Space",
              "displayName": "VM Data Disk Space Alert Severity"
            },
            "type": "String"
          },
          "VMOSDiskWriteLatencyOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM OS Disk Write Latency Operator"
            },
            "type": "string"
          },
          "VMHeartBeatRGAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM Heart Beat RG Auto Resolve Time"
            },
            "type": "string"
          },
          "VMDataDiskSpaceAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM Data Disk Space Auto Mitigate"
            },
            "type": "string"
          },
          "VMPercentMemoryPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM Percent Memory Policy Effect"
            },
            "type": "string"
          },
          "VMPercentMemoryAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM Percent Memory Auto Mitigate"
            },
            "type": "string"
          },
          "VMPercentCPUTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM Percent CPU Time Aggregation"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM OS Disk Read Latency Operator"
            },
            "type": "string"
          },
          "VMNetworkOutTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM Network Out Time Aggregation"
            },
            "type": "string"
          },
          "VMNetworkOutAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM Network Out Auto Resolve Time"
            },
            "type": "string"
          },
          "VMHeartBeatRGFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "VM Heart Beat RG Failing Periods"
            },
            "type": "string"
          },
          "VMDataDiskSpacePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM Data Disk Space Policy Effect"
            },
            "type": "string"
          },
          "VMOSDiskSpaceFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "VM OS Disk Space Failing Periods"
            },
            "type": "string"
          },
          "VMPercentCPUAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM Percent CPU Auto Resolve Time"
            },
            "type": "string"
          },
          "VMNetworkInAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM Network In Auto Resolve Time"
            },
            "type": "string"
          },
          "VMNetworkOutFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "VM Network Out Failing Periods"
            },
            "type": "string"
          },
          "VMOSDiskSpaceAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM OS Disk Space",
              "displayName": "VM OS Disk Space Alert Severity"
            },
            "type": "String"
          },
          "VMNetworkInTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM Network In Time Aggregation"
            },
            "type": "string"
          },
          "VMPercentCPUFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "VM Percent CPU Failing Periods"
            },
            "type": "string"
          },
          "VMPercentMemoryAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM Percent Memory Auto Resolve"
            },
            "type": "string"
          },
          "VMDataDiskSpaceAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM Data Disk Space Auto Resolve"
            },
            "type": "string"
          },
          "VMHeartBeatRGAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert for VM Heart Beat RG",
              "displayName": "VM Heart Beat RG Alert Severity"
            },
            "type": "String"
          },
          "VMOSDiskSpacePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM OS Disk Space Policy Effect"
            },
            "type": "string"
          },
          "VMNetworkOutAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM Network Out",
              "displayName": "VM Network Out Alert Severity"
            },
            "type": "String"
          },
          "VMHeartBeatRGPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM Heart Beat RG Policy Effect"
            },
            "type": "string"
          },
          "VMHeartBeatRGAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM Heart Beat RG Auto Mitigate"
            },
            "type": "string"
          },
          "VMPercentCPUAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM Percent CPU",
              "displayName": "VM Percent CPU Alert Severity"
            },
            "type": "String"
          },
          "VMNetworkInFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "VM Network In Failing Periods"
            },
            "type": "string"
          },
          "VMOSDiskSpaceAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM OS Disk Space Auto Mitigate"
            },
            "type": "string"
          },
          "VMDataDiskSpaceAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "VM Data Disk Space Alert State"
            },
            "type": "string"
          },
          "VMPercentMemoryWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM Percent Memory Window Size"
            },
            "type": "string"
          },
          "VMDataDiskSpaceWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM Data Disk Space Window Size"
            },
            "type": "string"
          },
          "VMPercentMemoryAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "VM Percent Memory Alert State"
            },
            "type": "string"
          },
          "VMPercentCPUAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM Percent CPU Auto Mitigate"
            },
            "type": "string"
          },
          "VMOSDiskSpaceAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM OS Disk Space Auto Resolve"
            },
            "type": "string"
          },
          "VMPercentCPUPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM Percent CPU Policy Effect"
            },
            "type": "string"
          },
          "VMNetworkOutAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM Network Out Auto Mitigate"
            },
            "type": "string"
          },
          "VMDataDiskSpaceThreshold": {
            "defaultValue": "10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM Data Disk Space Threshold"
            },
            "type": "string"
          },
          "VMPercentMemoryThreshold": {
            "defaultValue": "10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM Percent Memory Threshold"
            },
            "type": "string"
          },
          "VMHeartBeatRGAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM Heart Beat RG Auto Resolve"
            },
            "type": "string"
          },
          "VMNetworkOutPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM Network Out Policy Effect"
            },
            "type": "string"
          },
          "VMNetworkInAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM Network In",
              "displayName": "VM Network In Alert Severity"
            },
            "type": "String"
          },
          "VMPercentCPUAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM Percent CPU Auto Resolve"
            },
            "type": "string"
          },
          "VMOSDiskSpaceWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM OS Disk Space Window Size"
            },
            "type": "string"
          },
          "VMNetworkInAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM Network In Auto Mitigate"
            },
            "type": "string"
          },
          "VMDataDiskSpaceOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM Data Disk Space Operator"
            },
            "type": "string"
          },
          "VMNetworkInPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM Network In Policy Effect"
            },
            "type": "string"
          },
          "VMHeartBeatRGWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT6H",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM Heart Beat RG Window Size"
            },
            "type": "string"
          },
          "VMPercentMemoryOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM Percent Memory Operator"
            },
            "type": "string"
          },
          "VMOSDiskSpaceAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "VM OS Disk Space Alert State"
            },
            "type": "string"
          },
          "VMNetworkOutAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM Network Out Auto Resolve"
            },
            "type": "string"
          },
          "VMHeartBeatRGAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "VM Heart Beat RG Alert State"
            },
            "type": "string"
          },
          "VMPercentCPUWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM Percent CPU Window Size"
            },
            "type": "string"
          },
          "VMNetworkOutAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "VM Network Out Alert State"
            },
            "type": "string"
          },
          "VMNetworkInAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM Network In Auto Resolve"
            },
            "type": "string"
          },
          "VMHeartBeatRGThreshold": {
            "defaultValue": "10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM Heart Beat RG Threshold"
            },
            "type": "string"
          },
          "VMPercentCPUAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "VM Percent CPU Alert State"
            },
            "type": "string"
          },
          "VMNetworkOutWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM Network Out Window Size"
            },
            "type": "string"
          },
          "VMOSDiskSpaceThreshold": {
            "defaultValue": "10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM OS Disk Space Threshold"
            },
            "type": "string"
          },
          "VMPercentCPUThreshold": {
            "defaultValue": "85",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM Percent CPU Threshold"
            },
            "type": "string"
          },
          "VMHeartBeatRGOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM Heart Beat RG Operator"
            },
            "type": "string"
          },
          "VMNetworkOutThreshold": {
            "defaultValue": "10000000",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM Network Out Threshold"
            },
            "type": "string"
          },
          "VMOSDiskSpaceOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM OS Disk Space Operator"
            },
            "type": "string"
          },
          "VMNetworkInWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM Network In Window Size"
            },
            "type": "string"
          },
          "VMNetworkInAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "VM Network In Alert State"
            },
            "type": "string"
          },
          "VMNetworkInThreshold": {
            "defaultValue": "10000000",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM Network In Threshold"
            },
            "type": "string"
          },
          "VMPercentCPUOperator": {
            "allowedValues": [
              "Equals",
              "GreaterThan",
              "GreaterThanOrEqual",
              "LessThan",
              "LessThanOrEqual"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM Percent CPU Operator"
            },
            "type": "string"
          },
          "VMNetworkOutOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM Network Out Operator"
            },
            "type": "string"
          },
          "VMNetworkInOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM Network In Operator"
            },
            "type": "string"
          },
          "VMHeartBeatRGComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "VM Heart Beat RG Computers To Include"
            },
            "type": "array"
          },
          "VMPercentMemoryFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "VM Percent Memory Failing Periods"
            },
            "type": "string"
          },
          "VMDataDiskSpaceComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "VM Data Disk Space Computers To Include"
            },
            "type": "array"
          }
        },
        "policyDefinitionGroups": null,
        "policyDefinitions": [
          {
            "policyDefinitionReferenceId": "ALZ_VMHeartBeatRG",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMHeartBeatRGEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMHeartBeatRGWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMHeartBeatRGAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VMHeartBeatRGAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMHeartBeatRGAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMHeartBeatRGThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('VMHeartBeatRGFailingPeriods')]"
              },
              "effect": {
                "value": "[parameters('VMHeartBeatRGPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMHeartBeatRGTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMHeartBeatRGOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMHeartBeatRGAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('VMHeartBeatRGComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('VMHeartBeatRGAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_HeartBeat_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VMNetworkIn",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMNetworkInEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMNetworkInWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMNetworkInAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VMNetworkInAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMNetworkInAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMNetworkInThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('VMNetworkInFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VMNetworkInEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VMNetworkInPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMNetworkInTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMNetworkInOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMNetworkInAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('VMNetworkInComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('VMNetworkInAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_NetworkIn_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VMNetworkOut",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMNetworkOutEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMNetworkOutWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMNetworkOutAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VMNetworkOutAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMNetworkOutAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMNetworkOutThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('VMNetworkOutFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VMNetworkOutEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VMNetworkOutPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMNetworkOutTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMNetworkOutOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMNetworkOutAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('VMNetworkOutComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('VMNetworkOutAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_NetworkOut_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VMOSDiskReadLatency",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMOSDiskReadLatencyEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMOSDiskReadLatencyWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMOSDiskReadLatencyAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VMOSDiskReadLatencyAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMOSDiskReadLatencyAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMOSDiskReadLatencyThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('VMOSDiskReadLatencyFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VMOSDiskReadLatencyEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VMOSDiskReadLatencyPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMOSDiskReadLatencyTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMOSDiskReadLatencyOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMOSDiskReadLatencyAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('VMOSDiskReadLatencyComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('VMOSDiskReadLatencyAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_OSDiskreadLatency_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VMOSDiskWriteLatency",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMOSDiskWriteLatencyEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMOSDiskWriteLatencyWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMOSDiskWriteLatencyAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VMOSDiskWriteLatencyAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMOSDiskWriteLatencyAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMOSDiskWriteLatencyThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('VMOSDiskWriteLatencyFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VMOSDiskWriteLatencyEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VMOSDiskWriteLatencyPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMOSDiskWriteLatencyTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMOSDiskWriteLatencyOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMOSDiskWriteLatencyAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('VMOSDiskWriteLatencyComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('VMOSDiskWriteLatencyAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_OSDiskwriteLatency_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VMOSDiskSpace",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMOSDiskSpaceEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMOSDiskSpaceWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMOSDiskSpaceAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VMOSDiskSpaceAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMOSDiskSpaceAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMOSDiskSpaceThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('VMOSDiskSpaceFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VMOSDiskSpaceEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VMOSDiskSpacePolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMOSDiskSpaceTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMOSDiskSpaceOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMOSDiskSpaceAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('VMOSDiskSpaceComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('VMOSDiskSpaceAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_OSDiskSpace_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VMPercentCPU",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMPercentCPUEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMPercentCPUWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMPercentCPUAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VMPercentCPUAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMPercentCPUAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMPercentCPUThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('VMPercentCPUFailingPeriods')]"
              },
              "effect": {
                "value": "[parameters('VMPercentCPUPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMPercentCPUTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMPercentCPUOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMPercentCPUAutoResolveTime')]"
              },
              "autoResolve": {
                "value": "[parameters('VMPercentCPUAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_CPU_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VMPercentMemory",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMPercentMemoryEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMPercentMemoryWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMPercentMemoryAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VMPercentMemoryAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMPercentMemoryAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMPercentMemoryThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('VMPercentMemoryFailingPeriods')]"
              },
              "effect": {
                "value": "[parameters('VMPercentMemoryPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMPercentMemoryTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMPercentMemoryOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMPercentMemoryAutoResolveTime')]"
              },
              "autoResolve": {
                "value": "[parameters('VMPercentMemoryAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_Memory_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VMDataDiskSpace",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMDataDiskSpaceEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMDataDiskSpaceWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMDataDiskSpaceAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VMDataDiskSpaceAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMDataDiskSpaceAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMDataDiskSpaceThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('VMDataDiskSpaceFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VMDataDiskSpaceEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VMDataDiskSpacePolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMDataDiskSpaceTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMDataDiskSpaceOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMDataDiskSpaceAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('VMDataDiskSpaceComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('VMDataDiskSpaceAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_dataDiskSpace_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VMDataDiskReadLatency",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMDataDiskReadLatencyEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMDataDiskReadLatencyWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMDataDiskReadLatencyAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VMDataDiskReadLatencyAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMDataDiskReadLatencyAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMDataDiskReadLatencyThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('VMDataDiskReadLatencyFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VMDataDiskReadLatencyEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VMDataDiskReadLatencyPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMDataDiskReadLatencyTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMDataDiskReadLatencyOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMDataDiskReadLatencyAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('VMDataDiskReadLatencyComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('VMDataDiskReadLatencyAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_dataDiskReadLatency_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VMDataDiskWriteLatency",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMDataDiskWriteLatencyEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMDataDiskWriteLatencyWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMDataDiskWriteLatencyAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('VMDataDiskWriteLatencyAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMDataDiskWriteLatencyAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMDataDiskWriteLatencyThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('VMDataDiskWriteLatencyFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VMDataDiskWriteLatencyEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VMDataDiskWriteLatencyPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMDataDiskWriteLatencyTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMDataDiskWriteLatencyOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMDataDiskWriteLatencyAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('VMDataDiskWriteLatencyComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('VMDataDiskWriteLatencyAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_dataDiskWriteLatency_Alert"
          }
        ],
        "name": "Alerting-VM",
        "displayName": "Deploy Azure Monitor Baseline Alerts for Virtual Machines"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-Storage": {
        "metadata": {
          "_deployed_by_amba": true,
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.0.1",
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "This initiative deploys Azure Monitor Baseline Alerts to monitor Storage Services such as Storage accounts.",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-Storage",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "ALZMonitorResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "displayName": "ALZ Monitor Resource Group Name",
              "description": "Name of the resource group where the ALZ Monitor resources will be deployed"
            },
            "type": "String"
          },
          "ALZMonitorResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "displayName": "ALZ Monitor Resource Group Location",
              "description": "Location of the resource group where the ALZ Monitor resources will be deployed"
            },
            "type": "String"
          },
          "ALZMonitorResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_alz_monitor": true
            },
            "metadata": {
              "displayName": "ALZ Monitor Resource Group Tags",
              "description": "Tags for the resource group where the ALZ Monitor resources will be deployed"
            },
            "type": "Object"
          },
          "ALZMonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "displayName": "ALZ Monitoring disabled tag values(s)",
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled."
            },
            "type": "Array"
          },
          "ALZMonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "displayName": "ALZ Monitoring disabled tag name",
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled."
            },
            "type": "String"
          },
          "StorageAccountAvailabilityFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "displayName": "Storage Account Availability Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            },
            "type": "string"
          },
          "StorageAccountAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "displayName": "Storage Account Availability Window Size",
              "description": "Window size for the alert"
            },
            "type": "string"
          },
          "StorageAccountAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "displayName": "Storage Account Availability Alert Severity",
              "description": "Severity of the alert for Storage Account Availability"
            },
            "type": "String"
          },
          "StorageAccountDeleteAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "Storage Account Delete Alert State",
              "description": "Alert state for the alert"
            },
            "type": "string"
          },
          "StorageAccountDeletePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "displayName": "Storage Account Delete Alert Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will create the alert if it does not exist, disabled will not create the alert"
            },
            "type": "string"
          },
          "StorageAccountAvailabilityThreshold": {
            "defaultValue": "90",
            "metadata": {
              "displayName": "Storage Account Availability Threshold",
              "description": "Threshold for the alert"
            },
            "type": "string"
          },
          "StorageAccountAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "Storage Account Availability Alert State",
              "description": "Alert state for the alert"
            },
            "type": "string"
          },
          "StorageAccountAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "displayName": "Storage Account Availability Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist"
            },
            "type": "string"
          }
        },
        "policyDefinitionGroups": null,
        "policyDefinitions": [
          {
            "policyDefinitionReferenceId": "ALZ_StorageAccountAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('StorageAccountAvailabilityFrequency')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('StorageAccountAvailabilityAlertState')]"
              },
              "windowSize": {
                "value": "[parameters('StorageAccountAvailabilityWindowSize')]"
              },
              "threshold": {
                "value": "[parameters('StorageAccountAvailabilityThreshold')]"
              },
              "severity": {
                "value": "[parameters('StorageAccountAvailabilityAlertSeverity')]"
              },
              "effect": {
                "value": "[parameters('StorageAccountAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_StorageAccount_Availability_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_activitySADelete",
            "parameters": {
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "enabled": {
                "value": "[parameters('StorageAccountDeleteAlertState')]"
              },
              "effect": {
                "value": "[parameters('StorageAccountDeletePolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_StorageAccount_Delete"
          }
        ],
        "name": "Alerting-Storage",
        "displayName": "Deploy Azure Monitor Baseline Alerts for Storage"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-Management": {
        "metadata": {
          "_deployed_by_amba": true,
          "version": "1.3.1",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Initiative to deploy AMBA alerts relevant to the ALZ Management management group",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-Management",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "ALZMonitorResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the resource group",
              "displayName": "ALZ Monitoring Resource Group Location"
            },
            "type": "String"
          },
          "ALZMonitorResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_alz_monitor": true
            },
            "metadata": {
              "description": "Tags to apply to the resource group",
              "displayName": "ALZ Monitoring Resource Group Tags"
            },
            "type": "Object"
          },
          "ALZMonitorResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Name of the resource group to deploy the ALZ monitoring resources to",
              "displayName": "ALZ Monitoring Resource Group Name"
            },
            "type": "String"
          },
          "ALZMonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "ALZMonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "BYOUserAssignedManagedIdentityResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity provided by the customer.",
              "displayName": "Customer defined User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "ALZUserAssignedManagedIdentityName": {
            "defaultValue": "id-AMBA-ARG-Reader-001",
            "metadata": {
              "description": "The name of the user assigned managed identity to be created for monitoring purpose.",
              "displayName": "Name of the user assigned managed identity to be created."
            },
            "type": "string"
          },
          "ALZManagementSubscriptionId": {
            "defaultValue": "",
            "metadata": {
              "description": "The subscription ID of the management subscription where the user assigned managed identity will be created."
            },
            "type": "string"
          },
          "StorageAccountAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "Storage Account Availability Alert Severity"
            },
            "type": "String"
          },
          "StorageAccountAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will create the alert if it does not exist, disabled will not create the alert",
              "displayName": "Storage Account Availability Alert Policy Effect"
            },
            "type": "string"
          },
          "StorageAccountAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Storage Account Availability Alert Window Size"
            },
            "type": "string"
          },
          "StorageAccountAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Storage Account Availability Alert State"
            },
            "type": "string"
          },
          "StorageAccountAvailabilityFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Storage Account Availability Alert Evaluation Frequency"
            },
            "type": "string"
          },
          "StorageAccountAvailabilityThreshold": {
            "defaultValue": "90",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Storage Account Availability Alert Threshold"
            },
            "type": "string"
          },
          "RVBackupHealthMonitorPolicyEffect": {
            "allowedValues": [
              "modify",
              "audit",
              "disabled"
            ],
            "defaultValue": "modify",
            "metadata": {
              "description": "Policy effect for the alert, modify will create the alert if it does not exist and enable it on your Recovery Vaults, audit will only audit if alerting is enabled on Recovery Vaults, disabled will not create the alert on Recovery Vaults",
              "displayName": "RV Backup Health Monitor Policy Effect"
            },
            "type": "string"
          },
          "StorageAccountDeletePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will create the alert if it does not exist, disabled will not create the alert",
              "displayName": "Storage Account Delete Alert Policy Effect"
            },
            "type": "string"
          },
          "StorageAccountDeleteAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Storage Account Delete Alert State"
            },
            "type": "string"
          },
          "AATotalJobAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "AA Total Job Alert Severity"
            },
            "type": "String"
          },
          "AATotalJobAlertWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "AA Total Job Alert Window Size"
            },
            "type": "string"
          },
          "AATotalJobAlertEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "AA Total Job Alert Evaluation Frequency"
            },
            "type": "string"
          },
          "AATotalJobAlertPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert",
              "displayName": "AA Total Job Alert Policy Effect"
            },
            "type": "string"
          },
          "AATotalJobAlertAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "AA Total Job Alert State"
            },
            "type": "string"
          },
          "AATotalJobAlertThreshold": {
            "defaultValue": "20",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "AA Total Job Alert Threshold"
            },
            "type": "string"
          },
          "RVASRHealthMonitorPolicyEffect": {
            "allowedValues": [
              "modify",
              "audit",
              "disabled"
            ],
            "defaultValue": "modify",
            "metadata": {
              "description": "Policy effect for the alert, modify will modify the alert if it exists, or audit if it does not exist",
              "displayName": "Recovery Vault ASR Health Monitor Policy Effect"
            },
            "type": "string"
          },
          "activityLAWDeletePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will create the alert if it does not exist, disabled will not create the alert",
              "displayName": "Activity Log Alert Delete Policy Effect"
            },
            "type": "string"
          },
          "activityLAWDeleteAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Activity Log Alert Delete Alert State"
            },
            "type": "string"
          },
          "activityLAWKeyRegenPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will create the alert if it does not exist, disabled will not create the alert",
              "displayName": "LAW Key Regen Alert Policy Effect"
            },
            "type": "string"
          },
          "activityLAWKeyRegenAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Activity Log Alert Key Regen Alert State"
            },
            "type": "string"
          },
          "LAWDailyCapLimitSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the Alert",
              "displayName": "Log Analytics Workspace Daily Cap Limit Reached Alert Severity"
            },
            "type": "String"
          },
          "LAWDailyCapLimitOperator": {
            "allowedValues": [
              "GreaterThan",
              "GreaterThanOrEqual"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "displayName": "Log Analytics Workspace Daily Cap Limit Reached Alert Operator"
            },
            "type": "String"
          },
          "LAWDailyCapLimitTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "displayName": "Log Analytics Workspace Daily Cap Limit Reached Alert TimeAggregation"
            },
            "type": "String"
          },
          "LAWDailyCapLimitWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT10M",
              "PT15M",
              "PT30M",
              "PT45M",
              "PT1H",
              "PT2H",
              "PT3H",
              "PT4H",
              "PT5H",
              "PT6H",
              "P1D"
            ],
            "defaultValue": "P1D",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Log Analytics Workspace Daily Cap Limit Reached Alert Window Size"
            },
            "type": "String"
          },
          "LAWDailyCapLimitEvaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT10M",
              "PT15M",
              "PT30M",
              "PT45M",
              "PT1H",
              "PT2H",
              "PT3H",
              "PT4H",
              "PT5H",
              "PT6H",
              "P1D"
            ],
            "defaultValue": "PT1H",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Log Analytics Workspace Daily Cap Limit Reached Alert Evaluation Frequency"
            },
            "type": "String"
          },
          "LAWDailyCapLimitAutoMitigate": {
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Log Analytics Workspace Daily Cap Limit Reached Alert Auto Mitigate"
            },
            "type": "String"
          },
          "LAWDailyCapLimitThreshold": {
            "defaultValue": "0",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Log Analytics Workspace Daily Cap Limit Reached Alert Threshold"
            },
            "type": "String"
          },
          "LAWDailyCapLimitFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Number of failing periods before alert is fired",
              "displayName": "Log Analytics Workspace Daily Cap Limit Reached Alert Failing Periods"
            },
            "type": "String"
          },
          "LAWDailyCapLimitEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "The number of aggregated lookback points.",
              "displayName": "Log Analytics Workspace Daily Cap Limit Reached Alert Evaluation Periods"
            },
            "type": "String"
          },
          "LAWDailyCapLimitPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will create the alert if it does not exist, disabled will not create the alert",
              "displayName": "Log Analytics Workspace Daily Cap Limit Reached Alert Policy Effect"
            },
            "type": "string"
          },
          "LAWDailyCapLimitAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "ALog Analytics Workspace Daily Cap Limit Reached Alert State"
            },
            "type": "string"
          }
        },
        "policyDefinitionGroups": null,
        "policyDefinitions": [
          {
            "policyDefinitionReferenceId": "ALZ_activityLAWDelete",
            "parameters": {
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('activityLAWDeleteAlertState')]"
              },
              "effect": {
                "value": "[parameters('activityLAWDeletePolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_LAWorkspace_Delete"
          },
          {
            "policyDefinitionReferenceId": "ALZ_activityLAWKeyRegen",
            "parameters": {
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('activityLAWKeyRegenAlertState')]"
              },
              "effect": {
                "value": "[parameters('activityLAWKeyRegenPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_LAWorkspace_KeyRegen"
          },
          {
            "policyDefinitionReferenceId": "ALZ_LAWorkspaceDailyCapLimitReached",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('LAWDailyCapLimitEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('LAWDailyCapLimitWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('LAWDailyCapLimitAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('LAWDailyCapLimitSeverity')]"
              },
              "enabled": {
                "value": "[parameters('LAWDailyCapLimitAlertState')]"
              },
              "threshold": {
                "value": "[parameters('LAWDailyCapLimitThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('LAWDailyCapLimitFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('LAWDailyCapLimitEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('LAWDailyCapLimitPolicyEffect')]"
              },
              "timeAggregation": {
                "value": "[parameters('LAWDailyCapLimitTimeAggregation')]"
              },
              "operator": {
                "value": "[parameters('LAWDailyCapLimitOperator')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_LAWorkspace_DailyCapLimitReached_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_AATotalJob",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('AATotalJobAlertEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('AATotalJobAlertWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('AATotalJobAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('AATotalJobAlertAlertState')]"
              },
              "threshold": {
                "value": "[parameters('AATotalJobAlertThreshold')]"
              },
              "effect": {
                "value": "[parameters('AATotalJobAlertPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AA_TotalJob_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_RVBackupHealth",
            "parameters": {
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "effect": {
                "value": "[parameters('RVBackupHealthMonitorPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_RecoveryVault_BackupHealthMonitor_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_RVASRHealthMonitor",
            "parameters": {
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "effect": {
                "value": "[parameters('RVASRHealthMonitorPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_RecoveryVault_ASRHealthMonitor_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_StorageAccountAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('StorageAccountAvailabilityFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('StorageAccountAvailabilityWindowSize')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('StorageAccountAvailabilityAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('StorageAccountAvailabilityAlertState')]"
              },
              "threshold": {
                "value": "[parameters('StorageAccountAvailabilityThreshold')]"
              },
              "effect": {
                "value": "[parameters('StorageAccountAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_StorageAccount_Availability_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_activitySADelete",
            "parameters": {
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('StorageAccountDeleteAlertState')]"
              },
              "effect": {
                "value": "[parameters('StorageAccountDeletePolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_StorageAccount_Delete"
          }
        ],
        "name": "Alerting-Management",
        "displayName": "Deploy Azure Monitor Baseline Alerts for Management"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-LandingZone": {
        "metadata": {
          "_deployed_by_amba": true,
          "version": "1.1.0-deprecated",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "deprecated": true,
          "supersededBy": "Alerting-KeyManagement, Alerting-LoadBalancing, Alerting-NetworkChanges, Alerting-RecoveryServices, Alerting-Storage, Alerting-VM, Alerting-Web",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Initiative to deploy AMBA alerts relevant to the ALZ LandingZone management group",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-LandingZone",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "ALZMonitorResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the resource group where the ALZ Monitor resources will be deployed",
              "displayName": "ALZ Monitor Resource Group Location"
            },
            "type": "String"
          },
          "ALZMonitorResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_alz_monitor": true
            },
            "metadata": {
              "description": "Tags for the resource group where the ALZ Monitor resources will be deployed",
              "displayName": "ALZ Monitor Resource Group Tags"
            },
            "type": "Object"
          },
          "ALZMonitorResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Name of the resource group where the ALZ Monitor resources will be deployed",
              "displayName": "ALZ Monitor Resource Group Name"
            },
            "type": "String"
          },
          "LBGlobalBackendAvailabilityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "LB Global Backend Availability Evaluation Frequency"
            },
            "type": "string"
          },
          "LBDatapathAvailabilityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "LB Data path Availability Evaluation Frequency"
            },
            "type": "string"
          },
          "LBGlobalBackendAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "LB Global Backend Availability Alert Severity"
            },
            "type": "String"
          },
          "LBGlobalBackendAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "LB Global Backend Availability Policy Effect"
            },
            "type": "string"
          },
          "LBHealthProbeStatusEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "LB Health Probe Status Evaluation Frequency"
            },
            "type": "string"
          },
          "PIPVIPAvailabilityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "PIP VIP Availability Evaluation Frequency"
            },
            "type": "string"
          },
          "LBGlobalBackendAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "LB Global Backend Availability Window Size"
            },
            "type": "string"
          },
          "LBGlobalBackendAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "LB Global Backend Availability Alert State"
            },
            "type": "string"
          },
          "LBDatapathAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "0",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "LB Data path Availability Alert Severity"
            },
            "type": "String"
          },
          "PIPPacketsInDDoSEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "PIP Packets In DDoS Evaluation Frequency"
            },
            "type": "string"
          },
          "LBDatapathAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "LB Data path Availability Policy Effect"
            },
            "type": "string"
          },
          "LBUsedSNATPortsEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "LB Used SNAT Ports Evaluation Frequency"
            },
            "type": "string"
          },
          "PIPBytesInDDoSEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "PIP Bytes In DDoS Evaluation Frequency"
            },
            "type": "string"
          },
          "VNETDDOSAttackEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VNET DDoS Attack Evaluation Frequency"
            },
            "type": "string"
          },
          "LBDatapathAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "LB Data path Availability Window Size"
            },
            "type": "string"
          },
          "PIPDDoSAttackEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "PIP DDoS Attack Evaluation Frequency"
            },
            "type": "string"
          },
          "LBDatapathAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "LB Data path Availability Alert State"
            },
            "type": "string"
          },
          "LBHealthProbeStatusAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "LB Health Probe Status Alert Severity"
            },
            "type": "String"
          },
          "PIPVIPAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert for PIP VIP Availability",
              "displayName": "PIP VIP Availability Alert Severity"
            },
            "type": "String"
          },
          "LBHealthProbeStatusPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "LB Health Probe Status Policy Effect"
            },
            "type": "string"
          },
          "PIPVIPAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "PIP VIP Availability Policy Effect"
            },
            "type": "string"
          },
          "LBHealthProbeStatusWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "LB Health Probe Status Window Size"
            },
            "type": "string"
          },
          "LBHealthProbeStatusAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "LB Health Probe Status Alert State"
            },
            "type": "string"
          },
          "PIPPacketsInDDoSAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "4",
            "metadata": {
              "description": "Severity of the alert for PIP Packets In DDoS",
              "displayName": "PIP Packets In DDoS Alert Severity"
            },
            "type": "String"
          },
          "PIPVIPAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "PIP VIP Availability Alert State"
            },
            "type": "string"
          },
          "PIPPacketsInDDoSPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "PIP Packets In DDoS Policy Effect"
            },
            "type": "string"
          },
          "LBUsedSNATPortsAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "LB Used SNAT Ports Alert Severity"
            },
            "type": "String"
          },
          "PIPVIPAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "PIP VIP Availability Window Size"
            },
            "type": "string"
          },
          "activityUDRUpdateAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Activity UDR Update Alert State"
            },
            "type": "string"
          },
          "activityNSGDeleteAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Activity NSG Delete Alert State"
            },
            "type": "string"
          },
          "PIPVIPAvailabilityThreshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "PIP VIP Availability Threshold"
            },
            "type": "string"
          },
          "VNETDDOSAttackAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert for VNET DDoS Attack",
              "displayName": "VNET DDoS Attack Alert Severity"
            },
            "type": "String"
          },
          "PIPBytesInDDoSAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "4",
            "metadata": {
              "description": "Severity of the alert for PIP Bytes In DDoS",
              "displayName": "PIP Bytes In DDoS Alert Severity"
            },
            "type": "String"
          },
          "LBUsedSNATPortsPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "LB Used SNAT Ports Policy Effect"
            },
            "type": "string"
          },
          "VNETDDOSAttackPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VNET DDoS Attack Policy Effect"
            },
            "type": "string"
          },
          "PIPPacketsInDDoSWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "PIP Packets In DDoS Window Size"
            },
            "type": "string"
          },
          "PIPDDoSAttackAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert for PIP DDoS Attack",
              "displayName": "PIP DDoS Attack Alert Severity"
            },
            "type": "String"
          },
          "PIPPacketsInDDoSAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "PIP Packets In DDoS Alert State"
            },
            "type": "string"
          },
          "PIPBytesInDDoSPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "PIP Bytes In DDoS Policy Effect"
            },
            "type": "string"
          },
          "PIPDDoSAttackPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "PIP DDoS Attack Policy Effect"
            },
            "type": "string"
          },
          "LBUsedSNATPortsAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "LB Used SNAT Ports Alert State"
            },
            "type": "string"
          },
          "LBUsedSNATPortsWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "LB Used SNAT Ports Window Size"
            },
            "type": "string"
          },
          "PIPPacketsInDDoSThreshold": {
            "defaultValue": "40000",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "PIP Packets In DDoS Threshold"
            },
            "type": "string"
          },
          "AGWApplicationGatewayTotalTimeEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "AGW Total Time Evaluation Frequency"
            },
            "type": "string"
          },
          "AGWBackendLastByteResponseTimeEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "AGW Backend Last Byte Response Time Evaluation Frequency"
            },
            "type": "string"
          },
          "VNETDDOSAttackAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "VNET DDoS Attack Alert State"
            },
            "type": "string"
          },
          "PIPBytesInDDoSAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "PIP Bytes In DDoS Alert State"
            },
            "type": "string"
          },
          "PIPBytesInDDoSWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "PIP Bytes In DDoS Window Size"
            },
            "type": "string"
          },
          "VNETDDOSAttackWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VNET DDoS Attack Window Size"
            },
            "type": "string"
          },
          "PIPBytesInDDoSThreshold": {
            "defaultValue": "8000000",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "PIP Bytes In DDoS Threshold"
            },
            "type": "string"
          },
          "AGWApplicationGatewayTotalTimeAlertSensitivity": {
            "allowedValues": [
              "Low",
              "Medium",
              "High"
            ],
            "defaultValue": "Medium",
            "metadata": {
              "description": "Dynamic Sensitivity of the alert",
              "displayName": "AGW Total Time Dynamic Alert Sensitivity"
            },
            "type": "String"
          },
          "PIPDDoSAttackWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "PIP DDoS Attack Window Size"
            },
            "type": "string"
          },
          "PIPDDoSAttackAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "PIP DDoS Attack Alert State"
            },
            "type": "string"
          },
          "VNETDDOSAttackThreshold": {
            "defaultValue": "1",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VNET DDoS Attack Threshold"
            },
            "type": "string"
          },
          "AGWBackendLastByteResponseTimeAlertSensitivity": {
            "allowedValues": [
              "Low",
              "Medium",
              "High"
            ],
            "defaultValue": "Medium",
            "metadata": {
              "description": "Dynamic Severity of the alert",
              "displayName": "AGW Backend Last Byte Response Time Dynamic Alert Sensitivity"
            },
            "type": "String"
          },
          "CDNPOriginHealthPercentageEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "CDN Origin Health Percentage Evaluation Frequency"
            },
            "type": "string"
          },
          "PIPDDoSAttackThreshold": {
            "defaultValue": "0",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "PIP DDoS Attack Threshold"
            },
            "type": "string"
          },
          "AGWBackendLastByteResponseTimeAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "AGW Backend Last Byte Response Time Alert Severity"
            },
            "type": "String"
          },
          "AGWApplicationGatewayTotalTimeAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "AGW Total Time Alert Severity"
            },
            "type": "String"
          },
          "FDBackendRequestLatencyEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "FD Backend Request Latency Evaluation Frequency"
            },
            "type": "string"
          },
          "AGWBackendLastByteResponseTimePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "AGW Backend Last Byte Response Time Policy Effect"
            },
            "type": "string"
          },
          "AGWApplicationGatewayTotalTimePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "AGW Total Time Policy Effect"
            },
            "type": "string"
          },
          "VMDataDiskWriteLatencyEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM Data Disk Write Latency Evaluation Frequency"
            },
            "type": "string"
          },
          "VMDataDiskWriteLatencyComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "VM Data Disk Write Latency Computers To Include"
            },
            "type": "array"
          },
          "VMDataDiskReadLatencyEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM Data Disk Read Latency Evaluation Frequency"
            },
            "type": "string"
          },
          "AGWApplicationGatewayTotalTimeWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "AGW Total Time Window Size"
            },
            "type": "string"
          },
          "AGWApplicationGatewayTotalTimeAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "AGW Total Time Alert State"
            },
            "type": "string"
          },
          "AGWBackendLastByteResponseTimeAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "AGW Backend Last Byte Response Time Alert State"
            },
            "type": "string"
          },
          "AGWBackendLastByteResponseTimeWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "AGW Backend Last Byte Response Time Window Size"
            },
            "type": "string"
          },
          "AGWUnhealthyHostCountEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "AGW Unhealthy Host Count Evaluation Frequency"
            },
            "type": "string"
          },
          "VMDataDiskReadLatencyComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "VM Data Disk Read Latency Computers To Include"
            },
            "type": "array"
          },
          "VMDataDiskWriteLatencyEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "VM Data Disk Write Latency Evaluation Periods"
            },
            "type": "string"
          },
          "CDNPOriginHealthPercentageAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "CDN Origin Health Percentage Alert Severity"
            },
            "type": "String"
          },
          "VMOSDiskWriteLatencyEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM OS Disk Write Latency Evaluation Frequency"
            },
            "type": "string"
          },
          "StorageAccountAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert for Storage Account Availability",
              "displayName": "Storage Account Availability Alert Severity"
            },
            "type": "String"
          },
          "VMOSDiskWriteLatencyComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "VM OS Disk Write Latency Computers To Include"
            },
            "type": "array"
          },
          "VMOSDiskReadLatencyEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM OS Disk Read Latency Evaluation Frequency"
            },
            "type": "string"
          },
          "CDNPOriginHealthPercentagePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "CDN Origin Health Percentage Policy Effect"
            },
            "type": "string"
          },
          "VMDataDiskReadLatencyEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "VM Data Disk Read Latency Evaluation Periods"
            },
            "type": "string"
          },
          "StorageAccountAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "Storage Account Availability Policy Effect"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "VM OS Disk Read Latency Computers To Include"
            },
            "type": "array"
          },
          "VMDataDiskWriteLatencyAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM Data Disk Write Latency Auto Resolve Time"
            },
            "type": "string"
          },
          "VMDataDiskWriteLatencyTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM Data Disk Write Latency Time Aggregation"
            },
            "type": "string"
          },
          "VMOSDiskWriteLatencyEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "VM OS Disk Write Latency Evaluation Periods"
            },
            "type": "string"
          },
          "CDNPOriginHealthPercentageAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "CDN Origin Health Percentage Alert State"
            },
            "type": "string"
          },
          "AGWFailedRequestsEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "AGW Failed Requests Evaluation Frequency"
            },
            "type": "string"
          },
          "CDNPOriginLatencyEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "CDN Origin Latency Evaluation Frequency"
            },
            "type": "string"
          },
          "AGWResponseStatusEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "AGW Response Status Evaluation Frequency"
            },
            "type": "string"
          },
          "CDNPPercentage4XXEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "CDN Percentage 4XX Evaluation Frequency"
            },
            "type": "string"
          },
          "VMDataDiskReadLatencyTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM Data Disk Read Latency Time Aggregation"
            },
            "type": "string"
          },
          "VMDataDiskWriteLatencyFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "VM Data Disk Write Latency Failing Periods"
            },
            "type": "string"
          },
          "VMDataDiskReadLatencyAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM Data Disk Read Latency Auto Resolve Time"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "VM OS Disk Read Latency Evaluation Periods"
            },
            "type": "string"
          },
          "CDNPOriginHealthPercentageWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "CDN Origin Health Percentage Window Size"
            },
            "type": "string"
          },
          "FDBackendRequestLatencyAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "FD Backend Request Latency Alert Severity"
            },
            "type": "String"
          },
          "CDNPPercentage5XXEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "CDN Percentage 5XX Evaluation Frequency"
            },
            "type": "string"
          },
          "StorageAccountAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Storage Account Availability Window Size"
            },
            "type": "string"
          },
          "StorageAccountAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Storage Account Availability Alert State"
            },
            "type": "string"
          },
          "AGWCapacityUnitsEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "AGW Capacity Units Evaluation Frequency"
            },
            "type": "string"
          },
          "FDBackendRequestLatencyPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "FD Backend Request Latency Policy Effect"
            },
            "type": "string"
          },
          "VMDataDiskReadLatencyFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "VM Data Disk Read Latency Failing Periods"
            },
            "type": "string"
          },
          "VMOSDiskWriteLatencyTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM OS Disk Write Latency Time Aggregation"
            },
            "type": "string"
          },
          "VMDataDiskWriteLatencyAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM Data Disk Write Latency",
              "displayName": "VM Data Disk Write Latency Alert Severity"
            },
            "type": "String"
          },
          "VMOSDiskWriteLatencyAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM OS Disk Write Latency Auto Resolve Time"
            },
            "type": "string"
          },
          "TMEndpointHealthEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "TM Enpoint Health Evaluation Frequency"
            },
            "type": "string"
          },
          "StorageAccountAvailabilityFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Storage Account Availability Evaluation Frequency"
            },
            "type": "string"
          },
          "StorageAccountAvailabilityThreshold": {
            "defaultValue": "90",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Storage Account Availability Threshold"
            },
            "type": "string"
          },
          "AGWUnhealthyHostCountAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "AGW Unhealthy Host Count Alert Severity"
            },
            "type": "String"
          },
          "VMOSDiskReadLatencyTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM OS Disk Read Latency Time Aggregation"
            },
            "type": "string"
          },
          "VMOSDiskWriteLatencyFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "VM OS Disk Write Latency Failing Periods"
            },
            "type": "string"
          },
          "VMDataDiskWriteLatencyPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM Data Disk Write Latency Policy Effect"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM OS Disk Read Latency Auto Resolve Time"
            },
            "type": "string"
          },
          "VMDataDiskSpaceEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM Data Disk Space Evaluation Frequency"
            },
            "type": "string"
          },
          "AGWComputeUnitsEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "AGW Compute Units Evaluation Frequency"
            },
            "type": "string"
          },
          "FDBackendHealthEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "FD Backend Health Evaluation Frequency"
            },
            "type": "string"
          },
          "VMDataDiskReadLatencyAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM Data Disk Read Latency",
              "displayName": "VM Data Disk Read Latency Alert Severity"
            },
            "type": "String"
          },
          "VMDataDiskWriteLatencyAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM Data Disk Write Latency Auto Mitigate"
            },
            "type": "string"
          },
          "VMPercentMemoryEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM Percent Memory Evaluation Frequency"
            },
            "type": "string"
          },
          "VMDataDiskWriteLatencyAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM Data Disk Write Latency Auto Resolve"
            },
            "type": "string"
          },
          "VMDataDiskReadLatencyPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM Data Disk Read Latency Policy Effect"
            },
            "type": "string"
          },
          "VMOSDiskWriteLatencyAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM OS Disk Write Latency",
              "displayName": "VM OS Disk Write Latency Alert Severity"
            },
            "type": "String"
          },
          "VMDataDiskReadLatencyAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM Data Disk Read Latency Auto Mitigate"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "VM OS Disk Read Latency Failing Periods"
            },
            "type": "string"
          },
          "AGWUnhealthyHostCountPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "AGW Unhealthy Host Count Policy Effect"
            },
            "type": "string"
          },
          "AGWFailedRequestsAlertSensitivity": {
            "allowedValues": [
              "Low",
              "Medium",
              "High"
            ],
            "defaultValue": "Medium",
            "metadata": {
              "description": "Dynamic Sensitivity of the alert",
              "displayName": "AGW Failed Requests Dynamic Alert Sensitivity"
            },
            "type": "String"
          },
          "AGWResponseStatusAlertSensitivity": {
            "allowedValues": [
              "Low",
              "Medium",
              "High"
            ],
            "defaultValue": "Medium",
            "metadata": {
              "description": "Dynamic Sensitivity of the alert",
              "displayName": "AGW Response Status Dynamic Alert Sensitivity"
            },
            "type": "String"
          },
          "FDBackendRequestLatencyWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "FD Backend Request Latency Window Size"
            },
            "type": "string"
          },
          "FDBackendRequestLatencyAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "FD Backend Request Latency Alert State"
            },
            "type": "string"
          },
          "RVBackupHealthMonitorPolicyEffect": {
            "allowedValues": [
              "modify",
              "audit",
              "disabled"
            ],
            "defaultValue": "modify",
            "metadata": {
              "description": "Policy effect for the alert, modify will modify the alert if it exists, or audit if it does not exist",
              "displayName": "Recovery Vault Backup Health Monitor Policy Effect"
            },
            "type": "string"
          },
          "VMDataDiskReadLatencyAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM Data Disk Read Latency Auto Resolve"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM OS Disk Read Latency",
              "displayName": "VM OS Disk Read Latency Alert Severity"
            },
            "type": "String"
          },
          "VMDataDiskWriteLatencyWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM Data Disk Write Latency Window Size"
            },
            "type": "string"
          },
          "VMOSDiskSpaceEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM OS Disk Space Evaluation Frequency"
            },
            "type": "string"
          },
          "VMDataDiskSpaceEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "VM Data Disk Space Evaluation Periods"
            },
            "type": "string"
          },
          "VMOSDiskWriteLatencyAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM OS Disk Write Latency Auto Mitigate"
            },
            "type": "string"
          },
          "VMHeartBeatRGEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM Heart Beat RG Evaluation Frequency"
            },
            "type": "string"
          },
          "VMOSDiskWriteLatencyPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM OS Disk Write Latency Policy Effect"
            },
            "type": "string"
          },
          "VMDataDiskWriteLatencyAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "VM Data Disk Write Latency Alert State"
            },
            "type": "string"
          },
          "StorageAccountDeletePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will create the alert if it does not exist, disabled will not create the alert",
              "displayName": "Storage Account Delete Alert Policy Effect"
            },
            "type": "string"
          },
          "VMOSDiskSpaceComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "VM OS Disk Space Computers To Include"
            },
            "type": "array"
          },
          "AGWUnhealthyHostCountAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "AGW Unhealthy Host Count Alert State"
            },
            "type": "string"
          },
          "VMDataDiskReadLatencyAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "VM Data Disk Read Latency Alert State"
            },
            "type": "string"
          },
          "VMDataDiskReadLatencyWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM Data Disk Read Latency Window Size"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM OS Disk Read Latency Policy Effect"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM OS Disk Read Latency Auto Mitigate"
            },
            "type": "string"
          },
          "VMOSDiskWriteLatencyAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM OS Disk Write Latency Auto Resolve"
            },
            "type": "string"
          },
          "VMDataDiskWriteLatencyThreshold": {
            "defaultValue": "30",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM Data Disk Write Latency Threshold"
            },
            "type": "string"
          },
          "AGWUnhealthyHostCountWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "AGW Unhealthy Host Count Window Size"
            },
            "type": "string"
          },
          "VMNetworkOutEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM Network Out Evaluation Frequency"
            },
            "type": "string"
          },
          "VMPercentCPUEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM Percent CPU Evaluation Frequency"
            },
            "type": "string"
          },
          "VMDataDiskReadLatencyThreshold": {
            "defaultValue": "30",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM Data Disk Read Latency Threshold"
            },
            "type": "string"
          },
          "VMOSDiskWriteLatencyAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "VM OS Disk Write Latency Alert State"
            },
            "type": "string"
          },
          "CDNPPercentage4XXAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "CDN Percentage 4XX Alert Severity"
            },
            "type": "String"
          },
          "VMOSDiskSpaceEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "VM OS Disk Space Evaluation Periods"
            },
            "type": "string"
          },
          "VMOSDiskWriteLatencyWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM OS Disk Write Latency Window Size"
            },
            "type": "string"
          },
          "VMNetworkOutComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "VM Network Out Computers To Include"
            },
            "type": "array"
          },
          "VMPercentMemoryAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM Percent Memory Auto Resolve Time"
            },
            "type": "string"
          },
          "CDNPPercentage5XXAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "CDN Percentage 5XX Alert Severity"
            },
            "type": "String"
          },
          "AGWResponseStatusAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "AGW Response Status Alert Severity"
            },
            "type": "String"
          },
          "VMNetworkInEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "VM Network In Evaluation Frequency"
            },
            "type": "string"
          },
          "CDNPOriginLatencyAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "CDN Origin Latancy Alert Severity"
            },
            "type": "String"
          },
          "AGWFailedRequestsAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "AGW Failed Requests Alert Severity"
            },
            "type": "String"
          },
          "StorageAccountDeleteAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Storage Account Delete Alert State"
            },
            "type": "string"
          },
          "VMDataDiskWriteLatencyOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM Data Disk Write Latency Operator"
            },
            "type": "string"
          },
          "VMDataDiskSpaceAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM Data Disk Space Auto Resolve Time"
            },
            "type": "string"
          },
          "VMDataDiskSpaceTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM Data Disk Space Time Aggregation"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM OS Disk Read Latency Auto Resolve"
            },
            "type": "string"
          },
          "VMPercentMemoryTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM Percent Memory Time Aggregation"
            },
            "type": "string"
          },
          "AGWResponseStatusPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "AGW Response Status Policy Effect"
            },
            "type": "string"
          },
          "AGWFailedRequestsPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "AGW Failed Requests Policy Effect"
            },
            "type": "string"
          },
          "AGWCPUUtilEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "AGW CPU Util Evaluation Frequency"
            },
            "type": "string"
          },
          "AGWCapacityUnitsAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "AGW Capacity Units Alert Severity"
            },
            "type": "String"
          },
          "VMOSDiskWriteLatencyThreshold": {
            "defaultValue": "30",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM OS Disk Write Latency Threshold"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM OS Disk Read Latency Window Size"
            },
            "type": "string"
          },
          "VMDataDiskSpaceFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "VM Data Disk Space Failing Periods"
            },
            "type": "string"
          },
          "VMNetworkInComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "VM Network In Computers To Include"
            },
            "type": "array"
          },
          "VMDataDiskReadLatencyOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM Data Disk Read Latency Operator"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "VM OS Disk Read Latency Alert State"
            },
            "type": "string"
          },
          "CDNPOriginLatencyPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "CDN Origin Latency Policy Effect"
            },
            "type": "string"
          },
          "CDNPPercentage5XXPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "CDN Percentage 5XX Policy Effect"
            },
            "type": "string"
          },
          "CDNPPercentage4XXPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "CDN Percentage 4XX Policy Effect"
            },
            "type": "string"
          },
          "VMNetworkOutEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "VM Network Out Evaluation Periods"
            },
            "type": "string"
          },
          "TMEndpointHealthAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "TM Enpoint Health Alert Severity"
            },
            "type": "String"
          },
          "VMNetworkInEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "VM Network In Evaluation Periods"
            },
            "type": "string"
          },
          "VMOSDiskSpaceTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM OS Disk Space Time Aggregation"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyThreshold": {
            "defaultValue": "30",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM OS Disk Read Latency Threshold"
            },
            "type": "string"
          },
          "VMHeartBeatRGTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM Heart Beat RG Time Aggregation"
            },
            "type": "string"
          },
          "VMPercentMemoryAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM Percent Memory",
              "displayName": "VM Percent Memory Alert Severity"
            },
            "type": "String"
          },
          "VMOSDiskSpaceAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM OS Disk Space Auto Resolve Time"
            },
            "type": "string"
          },
          "VMDataDiskSpaceAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM Data Disk Space",
              "displayName": "VM Data Disk Space Alert Severity"
            },
            "type": "String"
          },
          "AGWCapacityUnitsPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "AGW Capacity Units Policy Effect"
            },
            "type": "string"
          },
          "TMEndpointHealthPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "TM Enpoint Health Policy Effect"
            },
            "type": "string"
          },
          "FDBackendHealthAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "FD Backend Health Alert Severity"
            },
            "type": "String"
          },
          "AGWComputeUnitsAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "AGW Compute Units Alert Severity"
            },
            "type": "String"
          },
          "VMOSDiskWriteLatencyOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM OS Disk Write Latency Operator"
            },
            "type": "string"
          },
          "VMHeartBeatRGAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM Heart Beat RG Auto Resolve Time"
            },
            "type": "string"
          },
          "VMDataDiskSpaceAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM Data Disk Space Auto Mitigate"
            },
            "type": "string"
          },
          "VMPercentMemoryPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM Percent Memory Policy Effect"
            },
            "type": "string"
          },
          "VMPercentMemoryAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM Percent Memory Auto Mitigate"
            },
            "type": "string"
          },
          "VMPercentCPUTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM Percent CPU Time Aggregation"
            },
            "type": "string"
          },
          "CDNPPercentage5XXWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "CDN Percentage 5XX Window Size"
            },
            "type": "string"
          },
          "CDNPOriginLatencyAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "CDN Origin Latency Alert State"
            },
            "type": "string"
          },
          "VMOSDiskReadLatencyOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM OS Disk Read Latency Operator"
            },
            "type": "string"
          },
          "VMNetworkOutTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM Network Out Time Aggregation"
            },
            "type": "string"
          },
          "VMNetworkOutAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM Network Out Auto Resolve Time"
            },
            "type": "string"
          },
          "VMHeartBeatRGFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "VM Heart Beat RG Failing Periods"
            },
            "type": "string"
          },
          "VMDataDiskSpacePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM Data Disk Space Policy Effect"
            },
            "type": "string"
          },
          "CDNPPercentage4XXAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "CDN Percentage 4XX Alert State"
            },
            "type": "string"
          },
          "AGWResponseStatusAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "AGW Response Status Alert State"
            },
            "type": "string"
          },
          "CDNPPercentage4XXWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "CDN Percentage 4XX Window Size"
            },
            "type": "string"
          },
          "CDNPOriginLatencyWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "CDN Origin Latency Window Size"
            },
            "type": "string"
          },
          "FDBackendHealthPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "FD Backend Health Policy Effect"
            },
            "type": "string"
          },
          "AGWResponseStatusWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "AGW Response Status Window Size"
            },
            "type": "string"
          },
          "CDNPPercentage5XXAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "CDN Percentage 5XX Alert State"
            },
            "type": "string"
          },
          "AGWFailedRequestsAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "AGW Failed Requests Alert State"
            },
            "type": "string"
          },
          "VMOSDiskSpaceFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "VM OS Disk Space Failing Periods"
            },
            "type": "string"
          },
          "VMPercentCPUAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM Percent CPU Auto Resolve Time"
            },
            "type": "string"
          },
          "AGWFailedRequestsWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "AGW Failed Requests Window Size"
            },
            "type": "string"
          },
          "AGWComputeUnitsPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "AGW Compute Units Policy Effect"
            },
            "type": "string"
          },
          "AGWCapacityUnitsWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "AGW Capacity Units Window Size"
            },
            "type": "string"
          },
          "TMEndpointHealthWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "TM Enpoint Health Window Size"
            },
            "type": "string"
          },
          "TMEndpointHealthAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "TM Enpoint Health Alert State"
            },
            "type": "string"
          },
          "VMNetworkInAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "VM Network In Auto Resolve Time"
            },
            "type": "string"
          },
          "VMNetworkOutFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "VM Network Out Failing Periods"
            },
            "type": "string"
          },
          "VMOSDiskSpaceAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM OS Disk Space",
              "displayName": "VM OS Disk Space Alert Severity"
            },
            "type": "String"
          },
          "VMNetworkInTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "VM Network In Time Aggregation"
            },
            "type": "string"
          },
          "VMPercentCPUFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "VM Percent CPU Failing Periods"
            },
            "type": "string"
          },
          "VMPercentMemoryAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM Percent Memory Auto Resolve"
            },
            "type": "string"
          },
          "VMDataDiskSpaceAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM Data Disk Space Auto Resolve"
            },
            "type": "string"
          },
          "AGWCapacityUnitsAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "AGW Capacity Units Alert State"
            },
            "type": "string"
          },
          "VMHeartBeatRGAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert for VM Heart Beat RG",
              "displayName": "VM Heart Beat RG Alert Severity"
            },
            "type": "String"
          },
          "VMOSDiskSpacePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM OS Disk Space Policy Effect"
            },
            "type": "string"
          },
          "VMNetworkOutAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM Network Out",
              "displayName": "VM Network Out Alert Severity"
            },
            "type": "String"
          },
          "VMHeartBeatRGPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM Heart Beat RG Policy Effect"
            },
            "type": "string"
          },
          "VMHeartBeatRGAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM Heart Beat RG Auto Mitigate"
            },
            "type": "string"
          },
          "VMPercentCPUAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM Percent CPU",
              "displayName": "VM Percent CPU Alert Severity"
            },
            "type": "String"
          },
          "VMNetworkInFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "VM Network In Failing Periods"
            },
            "type": "string"
          },
          "VMOSDiskSpaceAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM OS Disk Space Auto Mitigate"
            },
            "type": "string"
          },
          "FDBackendHealthAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "FD Backend Health Alert State"
            },
            "type": "string"
          },
          "AGWComputeUnitsWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "AGW Compute Units Window Size"
            },
            "type": "string"
          },
          "VMDataDiskSpaceAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "VM Data Disk Space Alert State"
            },
            "type": "string"
          },
          "AGWComputeUnitsAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "AGW Compute Units Alert State"
            },
            "type": "string"
          },
          "VMPercentMemoryWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM Percent Memory Window Size"
            },
            "type": "string"
          },
          "VMDataDiskSpaceWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM Data Disk Space Window Size"
            },
            "type": "string"
          },
          "VMPercentMemoryAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "VM Percent Memory Alert State"
            },
            "type": "string"
          },
          "FDBackendHealthWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "FD Backend Health Window Size"
            },
            "type": "string"
          },
          "VMPercentCPUAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM Percent CPU Auto Mitigate"
            },
            "type": "string"
          },
          "VMOSDiskSpaceAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM OS Disk Space Auto Resolve"
            },
            "type": "string"
          },
          "VMPercentCPUPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM Percent CPU Policy Effect"
            },
            "type": "string"
          },
          "VMNetworkOutAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM Network Out Auto Mitigate"
            },
            "type": "string"
          },
          "VMDataDiskSpaceThreshold": {
            "defaultValue": "10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM Data Disk Space Threshold"
            },
            "type": "string"
          },
          "VMPercentMemoryThreshold": {
            "defaultValue": "10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM Percent Memory Threshold"
            },
            "type": "string"
          },
          "VMHeartBeatRGAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM Heart Beat RG Auto Resolve"
            },
            "type": "string"
          },
          "VMNetworkOutPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM Network Out Policy Effect"
            },
            "type": "string"
          },
          "VMNetworkInAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM Network In",
              "displayName": "VM Network In Alert Severity"
            },
            "type": "String"
          },
          "VMPercentCPUAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM Percent CPU Auto Resolve"
            },
            "type": "string"
          },
          "VMOSDiskSpaceWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM OS Disk Space Window Size"
            },
            "type": "string"
          },
          "VMNetworkInAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "VM Network In Auto Mitigate"
            },
            "type": "string"
          },
          "VMDataDiskSpaceOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM Data Disk Space Operator"
            },
            "type": "string"
          },
          "VMNetworkInPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "VM Network In Policy Effect"
            },
            "type": "string"
          },
          "VMHeartBeatRGWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT6H",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM Heart Beat RG Window Size"
            },
            "type": "string"
          },
          "VMPercentMemoryOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM Percent Memory Operator"
            },
            "type": "string"
          },
          "VMOSDiskSpaceAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "VM OS Disk Space Alert State"
            },
            "type": "string"
          },
          "AGWCPUUtilAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "AGW CPU Util Alert Severity"
            },
            "type": "String"
          },
          "VMNetworkOutAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM Network Out Auto Resolve"
            },
            "type": "string"
          },
          "VMHeartBeatRGAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "VM Heart Beat RG Alert State"
            },
            "type": "string"
          },
          "VMPercentCPUWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM Percent CPU Window Size"
            },
            "type": "string"
          },
          "VMNetworkOutAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "VM Network Out Alert State"
            },
            "type": "string"
          },
          "VMNetworkInAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "VM Network In Auto Resolve"
            },
            "type": "string"
          },
          "VMHeartBeatRGThreshold": {
            "defaultValue": "10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM Heart Beat RG Threshold"
            },
            "type": "string"
          },
          "VMPercentCPUAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "VM Percent CPU Alert State"
            },
            "type": "string"
          },
          "VMNetworkOutWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM Network Out Window Size"
            },
            "type": "string"
          },
          "VMOSDiskSpaceThreshold": {
            "defaultValue": "10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM OS Disk Space Threshold"
            },
            "type": "string"
          },
          "AGWCPUUtilPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "AGW CPU Util Policy Effect"
            },
            "type": "string"
          },
          "VMPercentCPUThreshold": {
            "defaultValue": "85",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM Percent CPU Threshold"
            },
            "type": "string"
          },
          "VMHeartBeatRGOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM Heart Beat RG Operator"
            },
            "type": "string"
          },
          "VMNetworkOutThreshold": {
            "defaultValue": "10000000",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM Network Out Threshold"
            },
            "type": "string"
          },
          "VMOSDiskSpaceOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM OS Disk Space Operator"
            },
            "type": "string"
          },
          "VMNetworkInWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "VM Network In Window Size"
            },
            "type": "string"
          },
          "VMNetworkInAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "VM Network In Alert State"
            },
            "type": "string"
          },
          "VMNetworkInThreshold": {
            "defaultValue": "10000000",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "VM Network In Threshold"
            },
            "type": "string"
          },
          "AGWCPUUtilWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "AGW CPU Util Window Size"
            },
            "type": "string"
          },
          "AGWCPUUtilAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "AGW CPU Util Alert State"
            },
            "type": "string"
          },
          "VMPercentCPUOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM Percent CPU Operator"
            },
            "type": "string"
          },
          "VMNetworkOutOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM Network Out Operator"
            },
            "type": "string"
          },
          "VMNetworkInOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "VM Network In Operator"
            },
            "type": "string"
          },
          "KVRequestAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for Key Vault Request",
              "displayName": "Key Vault Request Alert Severity"
            },
            "type": "String"
          },
          "KVRequestWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Key Vault Request Window Size"
            },
            "type": "string"
          },
          "KVRequestEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Key Vault Request Evaluation Frequency"
            },
            "type": "string"
          },
          "KVRequestPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "Key Vault Request Policy Effect"
            },
            "type": "string"
          },
          "KVRequestAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Key Vault Request Alert State"
            },
            "type": "string"
          },
          "KvAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert for Key Vault Availability",
              "displayName": "Key Vault Availability Alert Severity"
            },
            "type": "String"
          },
          "KvAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Key Vault Availability Window Size"
            },
            "type": "string"
          },
          "KvAvailabilityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Key Vault Availability Evaluation Frequency"
            },
            "type": "string"
          },
          "KvAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "Key Vault Availability Policy Effect"
            },
            "type": "string"
          },
          "KvAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Key Vault Availability Alert State"
            },
            "type": "string"
          },
          "KVAvailabilityThreshold": {
            "defaultValue": "20",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Key Vault Availability Threshold"
            },
            "type": "string"
          },
          "KvLatencyAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "description": "Severity of the alert for Key Vault Latency Availability",
              "displayName": "Key Vault Latency Availability Alert Severity"
            },
            "type": "String"
          },
          "KvLatencyAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Key Vault Latency Availability Window Size"
            },
            "type": "string"
          },
          "KvLatencyAvailabilityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Key Vault Latency Availability Evaluation Frequency"
            },
            "type": "string"
          },
          "KvLatencyAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "Key Vault Latency Availability Policy Effect"
            },
            "type": "string"
          },
          "KvLatencyAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Key Vault Latency Availability Alert State"
            },
            "type": "string"
          },
          "KvLatencyAvailabilityThreshold": {
            "defaultValue": "1000",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Key Vault Latency Availability Threshold"
            },
            "type": "string"
          },
          "KVCapacityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert for Key Vault Capacity",
              "displayName": "Key Vault Capacity Alert Severity"
            },
            "type": "String"
          },
          "KVCapacityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Key Vault Capacity Window Size"
            },
            "type": "string"
          },
          "KVCapacityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Key Vault Capacity Evaluation Frequency"
            },
            "type": "string"
          },
          "KVCapacityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "Key Vault Capacity Policy Effect"
            },
            "type": "string"
          },
          "KVCapacityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Key Vault Capacity Alert State"
            },
            "type": "string"
          },
          "KVCapacityThreshold": {
            "defaultValue": "75",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Key Vault Capacity Threshold"
            },
            "type": "string"
          },
          "activityKVDeleteAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Activity Key Vault Delete Alert State"
            },
            "type": "string"
          },
          "WSFCPUPercentageAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "WSF CPU Percentage Alert Severity"
            },
            "type": "String"
          },
          "WSFCPUPercentageWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "WSF CPU Percentage Window Size"
            },
            "type": "string"
          },
          "WSFCPUPercentageEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "WSF CPU Percentage Evaluation Frequency"
            },
            "type": "string"
          },
          "WSFCPUPercentagePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "WSF CPU Percentage Policy Effect"
            },
            "type": "string"
          },
          "WSFCPUPercentageAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "WSF CPU Percentage Alert State"
            },
            "type": "string"
          },
          "WSFMemoryPercentageAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "WSF Memory Percentage Alert Severity"
            },
            "type": "String"
          },
          "WSFMemoryPercentageWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "WSF Memory Percentage  Window Size"
            },
            "type": "string"
          },
          "WSFMemoryPercentageEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "WSF Memory Percentage Evaluation Frequency"
            },
            "type": "string"
          },
          "WSFMemoryPercentagePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "WSF Memory Percentage Policy Effect"
            },
            "type": "string"
          },
          "WSFMemoryPercentageAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "WSF Memory Percentage Alert State"
            },
            "type": "string"
          },
          "WSFDiskQueueLengthAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "WSF Disk Queue Lenght Alert Severity"
            },
            "type": "String"
          },
          "WSFDiskQueueLengthWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "WSF Disk Queue Lenght Window Size"
            },
            "type": "string"
          },
          "WSFDiskQueueLengthEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "WSF Disk Queue Lenght Evaluation Frequency"
            },
            "type": "string"
          },
          "WSFDiskQueueLengthPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "WSF Disk Queue Lenght Policy Effect"
            },
            "type": "string"
          },
          "WSFDiskQueueLengthAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "WSF Disk Queue Lenght Alert State"
            },
            "type": "string"
          },
          "WSFHttpQueueLengthAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert",
              "displayName": "WSF HTTP Queue Lenght Alert Severity"
            },
            "type": "String"
          },
          "WSFHttpQueueLengthWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "WSF HTTP Queue Lenght Window Size"
            },
            "type": "string"
          },
          "WSFHttpQueueLengthEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "WSF HTTP Queue Lenght Evaluation Frequency"
            },
            "type": "string"
          },
          "WSFHttpQueueLengthPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "WSF HTTP Queue Lenght Policy Effect"
            },
            "type": "string"
          },
          "WSFHttpQueueLengthAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "WSF HTTP Queue Lenght Alert State"
            },
            "type": "string"
          }
        },
        "policyDefinitionGroups": null,
        "policyDefinitions": [
          {
            "policyDefinitionReferenceId": "ALZ_KVRequest",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('KVRequestEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('KVRequestWindowSize')]"
              },
              "severity": {
                "value": "[parameters('KVRequestAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('KVRequestAlertState')]"
              },
              "effect": {
                "value": "[parameters('KVRequestPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Requests_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_KvAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('KvAvailabilityEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('KvAvailabilityWindowSize')]"
              },
              "severity": {
                "value": "[parameters('KvAvailabilityAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('KvAvailabilityAlertState')]"
              },
              "threshold": {
                "value": "[parameters('KVAvailabilityThreshold')]"
              },
              "effect": {
                "value": "[parameters('KvAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Availability_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_KvLatencyAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('KvLatencyAvailabilityEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('KvLatencyAvailabilityWindowSize')]"
              },
              "severity": {
                "value": "[parameters('KvLatencyAvailabilityAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('KvLatencyAvailabilityAlertState')]"
              },
              "threshold": {
                "value": "[parameters('KvLatencyAvailabilityThreshold')]"
              },
              "effect": {
                "value": "[parameters('KvLatencyAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Latency_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_KVCapacity",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('KVCapacityEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('KVCapacityWindowSize')]"
              },
              "severity": {
                "value": "[parameters('KVCapacityAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('KVCapacityAlertState')]"
              },
              "threshold": {
                "value": "[parameters('KVCapacityThreshold')]"
              },
              "effect": {
                "value": "[parameters('KVCapacityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Capacity_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_activityKVDelete",
            "parameters": {
              "enabled": {
                "value": "[parameters('activityKVDeleteAlertState')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_KeyVault_Delete"
          },
          {
            "policyDefinitionReferenceId": "ALZ_StorageAccountAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('StorageAccountAvailabilityFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('StorageAccountAvailabilityWindowSize')]"
              },
              "severity": {
                "value": "[parameters('StorageAccountAvailabilityAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('StorageAccountAvailabilityAlertState')]"
              },
              "threshold": {
                "value": "[parameters('StorageAccountAvailabilityThreshold')]"
              },
              "effect": {
                "value": "[parameters('StorageAccountAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_StorageAccount_Availability_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_activitySADelete",
            "parameters": {
              "enabled": {
                "value": "[parameters('StorageAccountDeleteAlertState')]"
              },
              "effect": {
                "value": "[parameters('StorageAccountDeletePolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_StorageAccount_Delete"
          },
          {
            "policyDefinitionReferenceId": "ALZ_PIPBytesInDDoS",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('PIPBytesInDDoSEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('PIPBytesInDDoSWindowSize')]"
              },
              "severity": {
                "value": "[parameters('PIPBytesInDDoSAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('PIPBytesInDDoSAlertState')]"
              },
              "threshold": {
                "value": "[parameters('PIPBytesInDDoSThreshold')]"
              },
              "effect": {
                "value": "[parameters('PIPBytesInDDoSPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_BytesInDDoSAttack_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_PIPDDoSAttack",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('PIPDDoSAttackEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('PIPDDoSAttackWindowSize')]"
              },
              "severity": {
                "value": "[parameters('PIPDDoSAttackAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('PIPDDoSAttackAlertState')]"
              },
              "threshold": {
                "value": "[parameters('PIPDDoSAttackThreshold')]"
              },
              "effect": {
                "value": "[parameters('PIPDDoSAttackPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_DDoSAttack_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_PIPPacketsInDDoS",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('PIPPacketsInDDoSEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('PIPPacketsInDDoSWindowSize')]"
              },
              "severity": {
                "value": "[parameters('PIPPacketsInDDoSAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('PIPPacketsInDDoSAlertState')]"
              },
              "threshold": {
                "value": "[parameters('PIPPacketsInDDoSThreshold')]"
              },
              "effect": {
                "value": "[parameters('PIPPacketsInDDoSPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_PacketsInDDoSAttack_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_PIPVIPAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('PIPVIPAvailabilityEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('PIPVIPAvailabilityWindowSize')]"
              },
              "severity": {
                "value": "[parameters('PIPVIPAvailabilityAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('PIPVIPAvailabilityAlertState')]"
              },
              "threshold": {
                "value": "[parameters('PIPVIPAvailabilityThreshold')]"
              },
              "effect": {
                "value": "[parameters('PIPVIPAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_VIPAvailability_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_activityNSGDelete",
            "parameters": {
              "enabled": {
                "value": "[parameters('activityNSGDeleteAlertState')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_NSG_Delete"
          },
          {
            "policyDefinitionReferenceId": "ALZ_activityUDRUpdate",
            "parameters": {
              "enabled": {
                "value": "[parameters('activityUDRUpdateAlertState')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_RouteTable_Update"
          },
          {
            "policyDefinitionReferenceId": "ALZ_RVBackupHealthMonitor",
            "parameters": {
              "effect": {
                "value": "[parameters('RVBackupHealthMonitorPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_RecoveryVault_BackupHealthMonitor_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VNETDDOSAttack",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VNETDDOSAttackEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VNETDDOSAttackWindowSize')]"
              },
              "severity": {
                "value": "[parameters('VNETDDOSAttackAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VNETDDOSAttackAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VNETDDOSAttackThreshold')]"
              },
              "effect": {
                "value": "[parameters('VNETDDOSAttackPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VNET_DDoSAttack_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VMHeartBeatRG",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMHeartBeatRGEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMHeartBeatRGWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMHeartBeatRGAutoMitigate')]"
              },
              "severity": {
                "value": "[parameters('VMHeartBeatRGAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMHeartBeatRGAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMHeartBeatRGThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('VMHeartBeatRGFailingPeriods')]"
              },
              "effect": {
                "value": "[parameters('VMHeartBeatRGPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMHeartBeatRGTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMHeartBeatRGOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMHeartBeatRGAutoResolveTime')]"
              },
              "autoResolve": {
                "value": "[parameters('VMHeartBeatRGAutoResolve')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_HeartBeat_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VMNetworkIn",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMNetworkInEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMNetworkInWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMNetworkInAutoMitigate')]"
              },
              "severity": {
                "value": "[parameters('VMNetworkInAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMNetworkInAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMNetworkInThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('VMNetworkInFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VMNetworkInEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VMNetworkInPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMNetworkInTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMNetworkInOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMNetworkInAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('VMNetworkInComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('VMNetworkInAutoResolve')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_NetworkIn_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VMNetworkOut",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMNetworkOutEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMNetworkOutWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMNetworkOutAutoMitigate')]"
              },
              "severity": {
                "value": "[parameters('VMNetworkOutAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMNetworkOutAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMNetworkOutThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('VMNetworkOutFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VMNetworkOutEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VMNetworkOutPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMNetworkOutTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMNetworkOutOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMNetworkOutAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('VMNetworkOutComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('VMNetworkOutAutoResolve')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_NetworkOut_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VMOSDiskReadLatency",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMOSDiskReadLatencyEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMOSDiskReadLatencyWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMOSDiskReadLatencyAutoMitigate')]"
              },
              "severity": {
                "value": "[parameters('VMOSDiskReadLatencyAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMOSDiskReadLatencyAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMOSDiskReadLatencyThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('VMOSDiskReadLatencyFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VMOSDiskReadLatencyEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VMOSDiskReadLatencyPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMOSDiskReadLatencyTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMOSDiskReadLatencyOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMOSDiskReadLatencyAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('VMOSDiskReadLatencyComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('VMOSDiskReadLatencyAutoResolve')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_OSDiskreadLatency_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VMOSDiskWriteLatency",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMOSDiskWriteLatencyEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMOSDiskWriteLatencyWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMOSDiskWriteLatencyAutoMitigate')]"
              },
              "severity": {
                "value": "[parameters('VMOSDiskWriteLatencyAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMOSDiskWriteLatencyAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMOSDiskWriteLatencyThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('VMOSDiskWriteLatencyFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VMOSDiskWriteLatencyEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VMOSDiskWriteLatencyPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMOSDiskWriteLatencyTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMOSDiskWriteLatencyOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMOSDiskWriteLatencyAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('VMOSDiskWriteLatencyComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('VMOSDiskWriteLatencyAutoResolve')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_OSDiskwriteLatency_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VMOSDiskSpace",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMOSDiskSpaceEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMOSDiskSpaceWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMOSDiskSpaceAutoMitigate')]"
              },
              "severity": {
                "value": "[parameters('VMOSDiskSpaceAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMOSDiskSpaceAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMOSDiskSpaceThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('VMOSDiskSpaceFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VMOSDiskSpaceEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VMOSDiskSpacePolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMOSDiskSpaceTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMOSDiskSpaceOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMOSDiskSpaceAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('VMOSDiskSpaceComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('VMOSDiskSpaceAutoResolve')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_OSDiskSpace_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VMPercentCPU",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMPercentCPUEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMPercentCPUWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMPercentCPUAutoMitigate')]"
              },
              "severity": {
                "value": "[parameters('VMPercentCPUAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMPercentCPUAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMPercentCPUThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('VMPercentCPUFailingPeriods')]"
              },
              "effect": {
                "value": "[parameters('VMPercentCPUPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMPercentCPUTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMPercentCPUOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMPercentCPUAutoResolveTime')]"
              },
              "autoResolve": {
                "value": "[parameters('VMPercentCPUAutoResolve')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_CPU_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VMPercentMemory",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMPercentMemoryEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMPercentMemoryWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMPercentMemoryAutoMitigate')]"
              },
              "severity": {
                "value": "[parameters('VMPercentMemoryAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMPercentMemoryAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMPercentMemoryThreshold')]"
              },
              "effect": {
                "value": "[parameters('VMPercentMemoryPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMPercentMemoryTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMPercentMemoryOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMPercentMemoryAutoResolveTime')]"
              },
              "autoResolve": {
                "value": "[parameters('VMPercentMemoryAutoResolve')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_Memory_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VMDataDiskSpace",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMDataDiskSpaceEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMDataDiskSpaceWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMDataDiskSpaceAutoMitigate')]"
              },
              "severity": {
                "value": "[parameters('VMDataDiskSpaceAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMDataDiskSpaceAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMDataDiskSpaceThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('VMDataDiskSpaceFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VMDataDiskSpaceEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VMDataDiskSpacePolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMDataDiskSpaceTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMDataDiskSpaceOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMDataDiskSpaceAutoResolveTime')]"
              },
              "autoResolve": {
                "value": "[parameters('VMDataDiskSpaceAutoResolve')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_dataDiskSpace_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VMDataDiskReadLatency",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMDataDiskReadLatencyEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMDataDiskReadLatencyWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMDataDiskReadLatencyAutoMitigate')]"
              },
              "severity": {
                "value": "[parameters('VMDataDiskReadLatencyAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMDataDiskReadLatencyAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMDataDiskReadLatencyThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('VMDataDiskReadLatencyFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VMDataDiskReadLatencyEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VMDataDiskReadLatencyPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMDataDiskReadLatencyTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMDataDiskReadLatencyOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMDataDiskReadLatencyAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('VMDataDiskReadLatencyComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('VMDataDiskReadLatencyAutoResolve')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_dataDiskReadLatency_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_VMDataDiskWriteLatency",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('VMDataDiskWriteLatencyEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('VMDataDiskWriteLatencyWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('VMDataDiskWriteLatencyAutoMitigate')]"
              },
              "severity": {
                "value": "[parameters('VMDataDiskWriteLatencyAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('VMDataDiskWriteLatencyAlertState')]"
              },
              "threshold": {
                "value": "[parameters('VMDataDiskWriteLatencyThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('VMDataDiskWriteLatencyFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('VMDataDiskWriteLatencyEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('VMDataDiskWriteLatencyPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('VMDataDiskWriteLatencyTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('VMDataDiskWriteLatencyOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('VMDataDiskWriteLatencyAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('VMDataDiskWriteLatencyComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('VMDataDiskWriteLatencyAutoResolve')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_VM_dataDiskWriteLatency_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_AGWTotalTime",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('AGWApplicationGatewayTotalTimeEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('AGWApplicationGatewayTotalTimeWindowSize')]"
              },
              "severity": {
                "value": "[parameters('AGWApplicationGatewayTotalTimeAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('AGWApplicationGatewayTotalTimeAlertState')]"
              },
              "effect": {
                "value": "[parameters('AGWApplicationGatewayTotalTimePolicyEffect')]"
              },
              "alertSensitivity": {
                "value": "[parameters('AGWApplicationGatewayTotalTimeAlertSensitivity')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_ApplicationGatewayTotalTime_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_AGWBackendLastByteResponseTime",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('AGWBackendLastByteResponseTimeEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('AGWBackendLastByteResponseTimeWindowSize')]"
              },
              "severity": {
                "value": "[parameters('AGWBackendLastByteResponseTimeAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('AGWBackendLastByteResponseTimeAlertState')]"
              },
              "effect": {
                "value": "[parameters('AGWBackendLastByteResponseTimePolicyEffect')]"
              },
              "alertSensitivity": {
                "value": "[parameters('AGWBackendLastByteResponseTimeAlertSensitivity')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_BackendLastByteResponseTime_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_AGWCapacityUnits",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('AGWCapacityUnitsEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('AGWCapacityUnitsWindowSize')]"
              },
              "severity": {
                "value": "[parameters('AGWCapacityUnitsAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('AGWCapacityUnitsAlertState')]"
              },
              "effect": {
                "value": "[parameters('AGWCapacityUnitsPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_CapacityUnits_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_AGWComputeUnits",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('AGWComputeUnitsEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('AGWComputeUnitsWindowSize')]"
              },
              "severity": {
                "value": "[parameters('AGWComputeUnitsAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('AGWComputeUnitsAlertState')]"
              },
              "effect": {
                "value": "[parameters('AGWComputeUnitsPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_ComputeUnits_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_AGWCPUUtilization",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('AGWCPUUtilEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('AGWCPUUtilWindowSize')]"
              },
              "severity": {
                "value": "[parameters('AGWCPUUtilAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('AGWCPUUtilAlertState')]"
              },
              "effect": {
                "value": "[parameters('AGWCPUUtilPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_CPUUtilization_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_AGWFailedRequests",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('AGWFailedRequestsEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('AGWFailedRequestsWindowSize')]"
              },
              "severity": {
                "value": "[parameters('AGWFailedRequestsAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('AGWFailedRequestsAlertState')]"
              },
              "effect": {
                "value": "[parameters('AGWFailedRequestsPolicyEffect')]"
              },
              "alertSensitivity": {
                "value": "[parameters('AGWFailedRequestsAlertSensitivity')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_FailedRequests_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_AGWResponseStatus",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('AGWResponseStatusEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('AGWResponseStatusWindowSize')]"
              },
              "severity": {
                "value": "[parameters('AGWResponseStatusAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('AGWResponseStatusAlertState')]"
              },
              "effect": {
                "value": "[parameters('AGWResponseStatusPolicyEffect')]"
              },
              "alertSensitivity": {
                "value": "[parameters('AGWResponseStatusAlertSensitivity')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_ResponseStatus_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_AGWUnhealthyHostCount",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('AGWUnhealthyHostCountEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('AGWUnhealthyHostCountWindowSize')]"
              },
              "severity": {
                "value": "[parameters('AGWUnhealthyHostCountAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('AGWUnhealthyHostCountAlertState')]"
              },
              "effect": {
                "value": "[parameters('AGWUnhealthyHostCountPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_AG_UnhealthyHostCount_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_LBDataPathAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('LBDataPathAvailabilityEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('LBDataPathAvailabilityWindowSize')]"
              },
              "severity": {
                "value": "[parameters('LBDataPathAvailabilityAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('LBDataPathAvailabilityAlertState')]"
              },
              "effect": {
                "value": "[parameters('LBDataPathAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ALB_DataPathAvailability_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_LBGlobalBackendAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('LBGlobalBackendAvailabilityEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('LBGlobalBackendAvailabilityWindowSize')]"
              },
              "severity": {
                "value": "[parameters('LBGlobalBackendAvailabilityAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('LBGlobalBackendAvailabilityAlertState')]"
              },
              "effect": {
                "value": "[parameters('LBGlobalBackendAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ALB_GlobalBackendAvailability_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_LBHealthProbeStatus",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('LBHealthProbeStatusEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('LBHealthProbeStatusWindowSize')]"
              },
              "severity": {
                "value": "[parameters('LBHealthProbeStatusAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('LBHealthProbeStatusAlertState')]"
              },
              "effect": {
                "value": "[parameters('LBHealthProbeStatusPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ALB_HealthProbeStatus_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_LBUsedSNATPorts",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('LBUsedSNATPortsEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('LBUsedSNATPortsWindowSize')]"
              },
              "severity": {
                "value": "[parameters('LBUsedSNATPortsAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('LBUsedSNATPortsAlertState')]"
              },
              "effect": {
                "value": "[parameters('LBUsedSNATPortsPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ALB_UsedSNATPorts_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_CDNPOriginHealthPercentage",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('CDNPOriginHealthPercentageEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('CDNPOriginHealthPercentageWindowSize')]"
              },
              "severity": {
                "value": "[parameters('CDNPOriginHealthPercentageAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('CDNPOriginHealthPercentageAlertState')]"
              },
              "effect": {
                "value": "[parameters('CDNPOriginHealthPercentagePolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FrontDoorCDN_OriginHealthPercentage_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_CDNPOriginLatency",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('CDNPOriginLatencyEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('CDNPOriginLatencyWindowSize')]"
              },
              "severity": {
                "value": "[parameters('CDNPOriginLatencyAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('CDNPOriginLatencyAlertState')]"
              },
              "effect": {
                "value": "[parameters('CDNPOriginLatencyPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FrontDoorCDN_OriginLatency_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_CDNPPercentage4XX",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('CDNPPercentage4XXEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('CDNPPercentage4XXWindowSize')]"
              },
              "severity": {
                "value": "[parameters('CDNPPercentage4XXAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('CDNPPercentage4XXAlertState')]"
              },
              "effect": {
                "value": "[parameters('CDNPPercentage4XXPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FrontDoorCDN_Percentage4XX_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_CDNPPercentage5XX",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('CDNPPercentage5XXEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('CDNPPercentage5XXWindowSize')]"
              },
              "severity": {
                "value": "[parameters('CDNPPercentage5XXAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('CDNPPercentage5XXAlertState')]"
              },
              "effect": {
                "value": "[parameters('CDNPPercentage5XXPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FrontDoorCDN_Percentage5XX_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_TMEndpointHealth",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('TMEndpointHealthEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('TMEndpointHealthWindowSize')]"
              },
              "severity": {
                "value": "[parameters('TMEndpointHealthAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('TMEndpointHealthAlertState')]"
              },
              "effect": {
                "value": "[parameters('TMEndpointHealthPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_TM_EndpointHealth_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_WSFCPUPercentage",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('WSFCPUPercentageEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('WSFCPUPercentageWindowSize')]"
              },
              "severity": {
                "value": "[parameters('WSFCPUPercentageAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('WSFCPUPercentageAlertState')]"
              },
              "effect": {
                "value": "[parameters('WSFCPUPercentagePolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_WSF_CPUPercentage_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_WSFMemoryPercentage",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('WSFMemoryPercentageEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('WSFMemoryPercentageWindowSize')]"
              },
              "severity": {
                "value": "[parameters('WSFMemoryPercentageAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('WSFMemoryPercentageAlertState')]"
              },
              "effect": {
                "value": "[parameters('WSFMemoryPercentagePolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_WSF_MemoryPercentage_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_WSFDiskQueueLength",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('WSFDiskQueueLengthEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('WSFDiskQueueLengthWindowSize')]"
              },
              "severity": {
                "value": "[parameters('WSFDiskQueueLengthAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('WSFDiskQueueLengthAlertState')]"
              },
              "effect": {
                "value": "[parameters('WSFDiskQueueLengthPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_WSF_DiskQueueLength_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_WSFHttpQueueLength",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('WSFHttpQueueLengthEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('WSFHttpQueueLengthWindowSize')]"
              },
              "severity": {
                "value": "[parameters('WSFHttpQueueLengthAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('WSFHttpQueueLengthAlertState')]"
              },
              "effect": {
                "value": "[parameters('WSFHttpQueueLengthPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_WSF_HttpQueueLength_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_FDBackendHealth",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('FDBackendHealthEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('FDBackendHealthWindowSize')]"
              },
              "severity": {
                "value": "[parameters('FDBackendHealthAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('FDBackendHealthAlertState')]"
              },
              "effect": {
                "value": "[parameters('FDBackendHealthPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FD_BackendHealth_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_FDBackendRequestLatency",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('FDBackendRequestLatencyEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('FDBackendRequestLatencyWindowSize')]"
              },
              "severity": {
                "value": "[parameters('FDBackendRequestLatencyAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('FDBackendRequestLatencyAlertState')]"
              },
              "effect": {
                "value": "[parameters('FDBackendRequestLatencyPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_FD_BackendRequestLatency_Alert"
          }
        ],
        "name": "Alerting-LandingZone",
        "displayName": "[Deprecated]: Deploy Azure Monitor Baseline Alerts for Landing Zone"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-ServiceHealth": {
        "metadata": {
          "_deployed_by_amba": true,
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.5.2",
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "This initiative deploys Azure Monitor Baseline Alerts to monitor Service Health Events such as Service issues, Planned maintenance, Health advisories, Security advisories, and Resource health.",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-ServiceHealth",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "ALZMonitorActionGroupEmail": {
            "defaultValue": [],
            "metadata": {
              "displayName": "Action Group Email Addresses",
              "description": "Email addresses to send alerts to"
            },
            "type": "Array"
          },
          "BYOActionGroup": {
            "defaultValue": [],
            "metadata": {
              "displayName": "Customer defined Action Group Resource IDs",
              "description": "The Resource IDs of existing Action Groups currently deployed in the environment."
            },
            "type": "array"
          },
          "ALZMonitorResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "displayName": "Resource Group Name",
              "description": "Name of the resource group to deploy the alerts to"
            },
            "type": "String"
          },
          "ALZMonitorResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "displayName": "Resource Group Location",
              "description": "Location of the resource group"
            },
            "type": "String"
          },
          "ALZMonitorResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_alz_monitor": true
            },
            "metadata": {
              "displayName": "Resource Group Tags",
              "description": "Tags to apply to the resource group"
            },
            "type": "Object"
          },
          "BYOAlertProcessingRule": {
            "defaultValue": "",
            "metadata": {
              "displayName": "Customer defined Alert Processing Rule Resource ID",
              "description": "The Resource ID of an existing Alert Processing Rule already deployed by the customer in his environment"
            },
            "type": "String"
          },
          "ALZLogicappCallbackUrl": {
            "defaultValue": "",
            "metadata": {
              "displayName": "Logic App Callback URL",
              "description": "Callback URL that triggers the Logic App"
            },
            "type": "String"
          },
          "ALZLogicappResourceId": {
            "defaultValue": "",
            "metadata": {
              "displayName": "Logic App Resource Id",
              "description": "Logic App Resource Id for Action Group to send alerts to"
            },
            "type": "String"
          },
          "ALZFunctionTriggerUrl": {
            "defaultValue": "",
            "metadata": {
              "displayName": "Function Trigger URL",
              "description": "URL that triggers the Function App"
            },
            "type": "String"
          },
          "ALZEventHubResourceId": {
            "defaultValue": [],
            "metadata": {
              "displayName": "Event Hub resource Ids",
              "description": "Event Hub resource Ids for action group to send alerts to"
            },
            "type": "array"
          },
          "ALZFunctionResourceId": {
            "defaultValue": "",
            "metadata": {
              "displayName": "Function Resource Id",
              "description": "Function Resource Id for Action Group to send alerts to"
            },
            "type": "String"
          },
          "ALZWebhookServiceUri": {
            "defaultValue": [],
            "metadata": {
              "displayName": "Webhook Service Uri(s)",
              "description": "Indicates the service uri(s) of the webhook to send alerts to"
            },
            "type": "Array"
          },
          "ALZArmRoleId": {
            "defaultValue": [],
            "metadata": {
              "displayName": "Arm Role Ids",
              "description": "Arm Built-in Role Ids for action group to send alerts to"
            },
            "type": "array"
          },
          "ALZMonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "displayName": "ALZ Monitoring disabled tag values(s)",
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled."
            },
            "type": "Array"
          },
          "ALZMonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "displayName": "ALZ Monitoring disabled tag name",
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled."
            },
            "type": "String"
          },
          "ResHlthUnhealthyAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "Resource Health Unhealthy Alert State",
              "description": "State of the Resource Health Unhealthy alert"
            },
            "type": "string"
          },
          "ResHlthUnhealthyPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "displayName": "Resource Health Unhealthy Alert Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist"
            },
            "type": "string"
          },
          "SvcHlthAdvisoryAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "Service Health Advisory Alert State",
              "description": "State of the Service Health Advisory alert"
            },
            "type": "string"
          },
          "serviceHealthAdvisoryPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "displayName": "Service Health Advisory Alert Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist"
            },
            "type": "string"
          },
          "SvcHlthIncidentAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "Service Health Incident Alert State",
              "description": "State of the Service Health Incident alert"
            },
            "type": "string"
          },
          "serviceHealthIncidentPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "displayName": "Service Health Incident Alert Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist"
            },
            "type": "string"
          },
          "SvcHlthMaintenanceAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "Service Health Maintenance Alert State",
              "description": "State of the Service Health Maintenance alert"
            },
            "type": "string"
          },
          "serviceHealthMaintenancePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "displayName": "Service Health Maintenance Alert Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist"
            },
            "type": "string"
          },
          "svcHlthSecAdvisoryAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "Service Health Security Advisory Alert State",
              "description": "State of the Service Health Security Advisory alert"
            },
            "type": "string"
          },
          "serviceHealthSecurityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "displayName": "Service Health Security Advisory Alert Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist"
            },
            "type": "string"
          }
        },
        "policyDefinitionGroups": null,
        "policyDefinitions": [
          {
            "policyDefinitionReferenceId": "ALZ_ServiceHealth_ActionGroups",
            "parameters": {
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "ALZMonitorActionGroupEmail": {
                "value": "[parameters('ALZMonitorActionGroupEmail')]"
              },
              "BYOActionGroup": {
                "value": "[parameters('BYOActionGroup')]"
              },
              "ALZMonitorResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "ALZMonitorResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "ALZMonitorResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "BYOAlertProcessingRule": {
                "value": "[parameters('BYOAlertProcessingRule')]"
              },
              "ALZLogicappCallbackUrl": {
                "value": "[parameters('ALZLogicappCallbackUrl')]"
              },
              "ALZLogicappResourceId": {
                "value": "[parameters('ALZLogicappResourceId')]"
              },
              "ALZFunctionTriggerUrl": {
                "value": "[parameters('ALZFunctionTriggerUrl')]"
              },
              "ALZEventHubResourceId": {
                "value": "[parameters('ALZEventHubResourceId')]"
              },
              "ALZFunctionResourceId": {
                "value": "[parameters('ALZFunctionResourceId')]"
              },
              "ALZWebhookServiceUri": {
                "value": "[parameters('ALZWebhookServiceUri')]"
              },
              "ALZArmRoleId": {
                "value": "[parameters('ALZArmRoleId')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ServiceHealth_ActionGroups"
          },
          {
            "policyDefinitionReferenceId": "ALZ_ResHlthUnhealthy",
            "parameters": {
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "enabled": {
                "value": "[parameters('ResHlthUnhealthyAlertState')]"
              },
              "effect": {
                "value": "[parameters('ResHlthUnhealthyPolicyEffect')]"
              },
              "BYOActionGroup": {
                "value": "[parameters('BYOActionGroup')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_ResourceHealth_Unhealthy_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_SvcHlthAdvisory",
            "parameters": {
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "enabled": {
                "value": "[parameters('SvcHlthAdvisoryAlertState')]"
              },
              "ALZMonitorActionGroupEmail": {
                "value": "[parameters('ALZMonitorActionGroupEmail')]"
              },
              "effect": {
                "value": "[parameters('serviceHealthAdvisoryPolicyEffect')]"
              },
              "BYOActionGroup": {
                "value": "[parameters('BYOActionGroup')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_ServiceHealth_HealthAdvisory"
          },
          {
            "policyDefinitionReferenceId": "ALZ_SvcHlthIncident",
            "parameters": {
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "enabled": {
                "value": "[parameters('SvcHlthIncidentAlertState')]"
              },
              "ALZMonitorActionGroupEmail": {
                "value": "[parameters('ALZMonitorActionGroupEmail')]"
              },
              "effect": {
                "value": "[parameters('serviceHealthIncidentPolicyEffect')]"
              },
              "BYOActionGroup": {
                "value": "[parameters('BYOActionGroup')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_ServiceHealth_Incident"
          },
          {
            "policyDefinitionReferenceId": "ALZ_SvcHlthMaintenance",
            "parameters": {
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "enabled": {
                "value": "[parameters('SvcHlthMaintenanceAlertState')]"
              },
              "ALZMonitorActionGroupEmail": {
                "value": "[parameters('ALZMonitorActionGroupEmail')]"
              },
              "effect": {
                "value": "[parameters('serviceHealthMaintenancePolicyEffect')]"
              },
              "BYOActionGroup": {
                "value": "[parameters('BYOActionGroup')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_ServiceHealth_Maintenance"
          },
          {
            "policyDefinitionReferenceId": "ALZ_svcHlthSecAdvisory",
            "parameters": {
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "enabled": {
                "value": "[parameters('svcHlthSecAdvisoryAlertState')]"
              },
              "ALZMonitorActionGroupEmail": {
                "value": "[parameters('ALZMonitorActionGroupEmail')]"
              },
              "effect": {
                "value": "[parameters('serviceHealthSecurityPolicyEffect')]"
              },
              "BYOActionGroup": {
                "value": "[parameters('BYOActionGroup')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_ServiceHealth_SecurityAdvisory"
          }
        ],
        "name": "Alerting-ServiceHealth",
        "displayName": "Deploy Azure Monitor Baseline Alerts for Service Health"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-NetworkChanges": {
        "metadata": {
          "_deployed_by_amba": true,
          "version": "1.0.1",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "This initiative implements Azure Monitor Baseline Alerts to monitor alterations in Network Routing and Security, such as modifications to Route Tables and the removal of Network Security Groups.",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-NetworkChanges",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "ALZMonitorResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the resource group where the ALZ Monitor resources will be deployed",
              "displayName": "ALZ Monitor Resource Group Location"
            },
            "type": "String"
          },
          "ALZMonitorResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_alz_monitor": true
            },
            "metadata": {
              "description": "Tags for the resource group where the ALZ Monitor resources will be deployed",
              "displayName": "ALZ Monitor Resource Group Tags"
            },
            "type": "Object"
          },
          "ALZMonitorResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Name of the resource group where the ALZ Monitor resources will be deployed",
              "displayName": "ALZ Monitor Resource Group Name"
            },
            "type": "String"
          },
          "ALZMonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "ALZMonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "activityUDRUpdateAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Activity UDR Update Alert State"
            },
            "type": "string"
          },
          "activityNSGDeleteAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Activity NSG Delete Alert State"
            },
            "type": "string"
          },
          "activityUDRUpdatePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "Activity UDR Update Policy Effect"
            },
            "type": "string"
          },
          "activityNSGDeletePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert",
              "displayName": "Activity NSG Delete Policy Effect"
            },
            "type": "string"
          }
        },
        "policyDefinitionGroups": null,
        "policyDefinitions": [
          {
            "policyDefinitionReferenceId": "ALZ_activityNSGDelete",
            "parameters": {
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('activityNSGDeleteAlertState')]"
              },
              "effect": {
                "value": "[parameters('activityNSGDeletePolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_NSG_Delete"
          },
          {
            "policyDefinitionReferenceId": "ALZ_activityUDRUpdate",
            "parameters": {
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('activityUDRUpdateAlertState')]"
              },
              "effect": {
                "value": "[parameters('activityUDRUpdatePolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_RouteTable_Update"
          }
        ],
        "name": "Alerting-NetworkChanges",
        "displayName": "Deploy Azure Monitor Baseline Alerts for Changes in Network Routing and Security"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-Web": {
        "metadata": {
          "_deployed_by_amba": true,
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.0.0",
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "This initiative deploys Azure Monitor Baseline Alerts to monitor Web Services such as App Services.",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-Web",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "ALZMonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "displayName": "ALZ Monitoring disabled tag values(s)",
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled."
            },
            "type": "Array"
          },
          "ALZMonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "displayName": "ALZ Monitoring disabled tag name",
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled."
            },
            "type": "String"
          },
          "WSFMemoryPercentageAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "displayName": "WSF Memory Percentage Alert Severity",
              "description": "Severity of the alert"
            },
            "type": "String"
          },
          "WSFMemoryPercentageWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "displayName": "WSF Memory Percentage  Window Size",
              "description": "Window size for the alert"
            },
            "type": "string"
          },
          "WSFMemoryPercentageEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "displayName": "WSF Memory Percentage Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            },
            "type": "string"
          },
          "WSFMemoryPercentagePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "displayName": "WSF Memory Percentage Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert"
            },
            "type": "string"
          },
          "WSFMemoryPercentageAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "WSF Memory Percentage Alert State",
              "description": "Alert state for the alert"
            },
            "type": "string"
          },
          "WSFMemoryPercentageThreshold": {
            "defaultValue": "85",
            "metadata": {
              "displayName": "WSF Memory Percentage Threshold",
              "description": "Threshold for the alert"
            },
            "type": "string"
          },
          "WSFDiskQueueLengthAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "displayName": "WSF Disk Queue Lenght Alert Severity",
              "description": "Severity of the alert"
            },
            "type": "String"
          },
          "WSFCPUPercentagePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "displayName": "WSF CPU Percentage Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert"
            },
            "type": "string"
          },
          "WSFCPUPercentageEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "displayName": "WSF CPU Percentage Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            },
            "type": "string"
          },
          "WSFCPUPercentageWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "displayName": "WSF CPU Percentage Window Size",
              "description": "Window size for the alert"
            },
            "type": "string"
          },
          "WSFCPUPercentageAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "displayName": "WSF CPU Percentage Alert Severity",
              "description": "Severity of the alert"
            },
            "type": "String"
          },
          "WSFHttpQueueLengthAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "WSF HTTP Queue Lenght Alert State",
              "description": "Alert state for the alert"
            },
            "type": "string"
          },
          "WSFDiskQueueLengthWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "displayName": "WSF Disk Queue Lenght Window Size",
              "description": "Window size for the alert"
            },
            "type": "string"
          },
          "WSFDiskQueueLengthEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "displayName": "WSF Disk Queue Lenght Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            },
            "type": "string"
          },
          "WSFDiskQueueLengthPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "displayName": "WSF Disk Queue Lenght Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert"
            },
            "type": "string"
          },
          "WSFHttpQueueLengthEvaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "displayName": "WSF HTTP Queue Lenght Evaluation Periods",
              "description": "The number of aggregated lookback points."
            },
            "type": "string"
          },
          "WSFDiskQueueLengthAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "WSF Disk Queue Lenght Alert State",
              "description": "Alert state for the alert"
            },
            "type": "string"
          },
          "WSFDiskQueueLengthFailingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "displayName": "WSF Disk Queue Lenght Failing Periods",
              "description": "Number of failing periods before alert is fired"
            },
            "type": "string"
          },
          "WSFDiskQueueLengthEvaluationPeriods": {
            "defaultValue": "2",
            "metadata": {
              "displayName": "WSF Disk Queue Lenght Evaluation Periods",
              "description": "The number of aggregated lookback points."
            },
            "type": "string"
          },
          "WSFHttpQueueLengthAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "displayName": "WSF HTTP Queue Lenght Alert Severity",
              "description": "Severity of the alert"
            },
            "type": "String"
          },
          "WSFHttpQueueLengthWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "displayName": "WSF HTTP Queue Lenght Window Size",
              "description": "Window size for the alert"
            },
            "type": "string"
          },
          "WSFHttpQueueLengthFailingPeriods": {
            "defaultValue": "2",
            "metadata": {
              "displayName": "WSF HTTP Queue Lenght Failing Periods",
              "description": "Number of failing periods before alert is fired"
            },
            "type": "string"
          },
          "WSFHttpQueueLengthPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "displayName": "WSF HTTP Queue Lenght Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert"
            },
            "type": "string"
          },
          "WSFHttpQueueLengthEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "displayName": "WSF HTTP Queue Lenght Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            },
            "type": "string"
          },
          "WSFCPUPercentageAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "WSF CPU Percentage Alert State",
              "description": "Alert state for the alert"
            },
            "type": "string"
          },
          "WSFCPUPercentageThreshold": {
            "defaultValue": "90",
            "metadata": {
              "displayName": "WSF CPU Percentage Threshold",
              "description": "Threshold for the alert"
            },
            "type": "string"
          }
        },
        "policyDefinitionGroups": null,
        "policyDefinitions": [
          {
            "policyDefinitionReferenceId": "ALZ_WSFCPUPercentage",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('WSFCPUPercentageEvaluationFrequency')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('WSFCPUPercentageAlertState')]"
              },
              "windowSize": {
                "value": "[parameters('WSFCPUPercentageWindowSize')]"
              },
              "threshold": {
                "value": "[parameters('WSFCPUPercentageThreshold')]"
              },
              "severity": {
                "value": "[parameters('WSFCPUPercentageAlertSeverity')]"
              },
              "effect": {
                "value": "[parameters('WSFCPUPercentagePolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_WSF_CPUPercentage_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_WSFMemoryPercentage",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('WSFMemoryPercentageEvaluationFrequency')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('WSFMemoryPercentageAlertState')]"
              },
              "windowSize": {
                "value": "[parameters('WSFMemoryPercentageWindowSize')]"
              },
              "threshold": {
                "value": "[parameters('WSFMemoryPercentageThreshold')]"
              },
              "severity": {
                "value": "[parameters('WSFMemoryPercentageAlertSeverity')]"
              },
              "effect": {
                "value": "[parameters('WSFMemoryPercentagePolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_WSF_MemoryPercentage_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_WSFDiskQueueLength",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('WSFDiskQueueLengthEvaluationFrequency')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('WSFDiskQueueLengthAlertState')]"
              },
              "windowSize": {
                "value": "[parameters('WSFDiskQueueLengthWindowSize')]"
              },
              "failingPeriods": {
                "value": "[parameters('WSFDiskQueueLengthFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('WSFDiskQueueLengthEvaluationPeriods')]"
              },
              "severity": {
                "value": "[parameters('WSFDiskQueueLengthAlertSeverity')]"
              },
              "effect": {
                "value": "[parameters('WSFDiskQueueLengthPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_WSF_DiskQueueLength_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_WSFHttpQueueLength",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('WSFHttpQueueLengthEvaluationFrequency')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('WSFHttpQueueLengthAlertState')]"
              },
              "windowSize": {
                "value": "[parameters('WSFHttpQueueLengthWindowSize')]"
              },
              "failingPeriods": {
                "value": "[parameters('WSFHttpQueueLengthFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('WSFHttpQueueLengthEvaluationPeriods')]"
              },
              "severity": {
                "value": "[parameters('WSFHttpQueueLengthAlertSeverity')]"
              },
              "effect": {
                "value": "[parameters('WSFHttpQueueLengthPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_WSF_HttpQueueLength_Alert"
          }
        ],
        "name": "Alerting-Web",
        "displayName": "Deploy Azure Monitor Baseline Alerts for Web"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-HybridVM": {
        "metadata": {
          "_deployed_by_amba": true,
          "version": "1.1.1",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "This initiative deploys Azure Monitor Baseline Alerts to monitor Azure Arc-enabled Servers.",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-HybridVM",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "ALZMonitorResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "description": "Location of the resource group where the ALZ Monitor resources will be deployed",
              "displayName": "ALZ Monitor Resource Group Location"
            },
            "type": "String"
          },
          "ALZMonitorResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_alz_monitor": true
            },
            "metadata": {
              "description": "Tags for the resource group where the ALZ Monitor resources will be deployed",
              "displayName": "ALZ Monitor Resource Group Tags"
            },
            "type": "Object"
          },
          "ALZMonitorResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "description": "Name of the resource group where the ALZ Monitor resources will be deployed",
              "displayName": "ALZ Monitor Resource Group Name"
            },
            "type": "String"
          },
          "ALZMonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag values(s)"
            },
            "type": "Array"
          },
          "ALZMonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.",
              "displayName": "ALZ Monitoring disabled tag name"
            },
            "type": "String"
          },
          "BYOUserAssignedManagedIdentityResourceId": {
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity provided by the customer.",
              "displayName": "Customer defined User Assigned managed Identity resource Id."
            },
            "type": "string"
          },
          "ALZUserAssignedManagedIdentityName": {
            "defaultValue": "id-AMBA-ARG-Reader-001",
            "metadata": {
              "description": "The name of the user assigned managed identity to be created for monitoring purpose.",
              "displayName": "Name of the user assigned managed identity to be created."
            },
            "type": "string"
          },
          "ALZManagementSubscriptionId": {
            "defaultValue": "",
            "metadata": {
              "description": "The subscription ID of the management subscription where the user assigned managed identity will be created."
            },
            "type": "string"
          },
          "HybridVMNetworkOutComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "Hybrid VM Network Out Computers To Include"
            },
            "type": "array"
          },
          "HybridVMOSDiskReadLatencyAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM OS Disk Read Latency",
              "displayName": "Hybrid VM OS Disk Read Latency Alert Severity"
            },
            "type": "String"
          },
          "HybridVMOSDiskReadLatencyWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Hybrid VM OS Disk Read Latency Window Size"
            },
            "type": "string"
          },
          "HybridVMOSDiskReadLatencyEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Hybrid VM OS Disk Read Latency Evaluation Frequency"
            },
            "type": "string"
          },
          "HybridVMOSDiskReadLatencyAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Hybrid VM OS Disk Read Latency Auto Mitigate"
            },
            "type": "string"
          },
          "HybridVMOSDiskReadLatencyAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Hybrid VM OS Disk Read Latency Auto Resolve"
            },
            "type": "string"
          },
          "HybridVMOSDiskReadLatencyAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "Hybrid VM OS Disk Read Latency Auto Resolve Time"
            },
            "type": "string"
          },
          "HybridVMOSDiskReadLatencyPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "Hybrid VM OS Disk Read Latency Policy Effect"
            },
            "type": "string"
          },
          "HybridVMOSDiskReadLatencyAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "Hybrid VM OS Disk Read Latency Alert State"
            },
            "type": "string"
          },
          "HybridVMOSDiskReadLatencyThreshold": {
            "defaultValue": "30",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Hybrid VM OS Disk Read Latency Threshold"
            },
            "type": "string"
          },
          "HybridVMOSDiskReadLatencyOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "Hybrid VM OS Disk Read Latency Operator"
            },
            "type": "string"
          },
          "HybridVMOSDiskReadLatencyTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "Hybrid VM OS Disk Read Latency Time Aggregation"
            },
            "type": "string"
          },
          "HybridVMOSDiskReadLatencyEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "Hybrid VM OS Disk Read Latency Evaluation Periods"
            },
            "type": "string"
          },
          "HybridVMOSDiskReadLatencyFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "Hybrid VM OS Disk Read Latency Failing Periods"
            },
            "type": "string"
          },
          "HybridVMOSDiskReadLatencyComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "Hybrid VM OS Disk Read Latency Computers To Include"
            },
            "type": "array"
          },
          "HybridVMOSDiskWriteLatencyAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM OS Disk Write Latency",
              "displayName": "Hybrid VM OS Disk Write Latency Alert Severity"
            },
            "type": "String"
          },
          "HybridVMOSDiskWriteLatencyWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Hybrid VM OS Disk Write Latency Window Size"
            },
            "type": "string"
          },
          "HybridVMOSDiskWriteLatencyEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Hybrid VM OS Disk Write Latency Evaluation Frequency"
            },
            "type": "string"
          },
          "HybridVMOSDiskWriteLatencyAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Hybrid VM OS Disk Write Latency Auto Mitigate"
            },
            "type": "string"
          },
          "HybridVMOSDiskWriteLatencyAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Hybrid VM OS Disk Write Latency Auto Resolve"
            },
            "type": "string"
          },
          "HybridVMOSDiskWriteLatencyAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "Hybrid VM OS Disk Write Latency Auto Resolve Time"
            },
            "type": "string"
          },
          "HybridVMOSDiskWriteLatencyPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "Hybrid VM OS Disk Write Latency Policy Effect"
            },
            "type": "string"
          },
          "HybridVMOSDiskWriteLatencyAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "Hybrid VM OS Disk Write Latency Alert State"
            },
            "type": "string"
          },
          "HybridVMOSDiskWriteLatencyThreshold": {
            "defaultValue": "50",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Hybrid VM OS Disk Write Latency Threshold"
            },
            "type": "string"
          },
          "HybridVMOSDiskWriteLatencyOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "Hybrid VM OS Disk Write Latency Operator"
            },
            "type": "string"
          },
          "HybridVMOSDiskWriteLatencyTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "Hybrid VM OS Disk Write Latency Time Aggregation"
            },
            "type": "string"
          },
          "HybridVMOSDiskWriteLatencyEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "Hybrid VM OS Disk Write Latency Evaluation Periods"
            },
            "type": "string"
          },
          "HybridVMOSDiskWriteLatencyFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "Hybrid VM OS Disk Write Latency Failing Periods"
            },
            "type": "string"
          },
          "HybridVMOSDiskWriteLatencyComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "Hybrid VM OS Disk Write Latency Computers To Include"
            },
            "type": "array"
          },
          "HybridVMOSDiskSpaceAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM OS Disk Space",
              "displayName": "Hybrid VM OS Disk Space Alert Severity"
            },
            "type": "String"
          },
          "HybridVMOSDiskSpaceWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Hybrid VM OS Disk Space Window Size"
            },
            "type": "string"
          },
          "HybridVMOSDiskSpaceEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Hybrid VM OS Disk Space Evaluation Frequency"
            },
            "type": "string"
          },
          "HybridVMOSDiskSpaceAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Hybrid VM OS Disk Space Auto Mitigate"
            },
            "type": "string"
          },
          "HybridVMOSDiskSpaceAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Hybrid VM OS Disk Space Auto Resolve"
            },
            "type": "string"
          },
          "HybridVMOSDiskSpaceAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "Hybrid VM OS Disk Space Auto Resolve Time"
            },
            "type": "string"
          },
          "HybridVMOSDiskSpacePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "Hybrid VM OS Disk Space Policy Effect"
            },
            "type": "string"
          },
          "HybridVMOSDiskSpaceAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "Hybrid VM OS Disk Space Alert State"
            },
            "type": "string"
          },
          "HybridVMOSDiskSpaceThreshold": {
            "defaultValue": "10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Hybrid VM OS Disk Space Threshold"
            },
            "type": "string"
          },
          "HybridVMOSDiskSpaceOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "Hybrid VM OS Disk Space Operator"
            },
            "type": "string"
          },
          "HybridVMOSDiskSpaceTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "Hybrid VM OS Disk Space Time Aggregation"
            },
            "type": "string"
          },
          "HybridVMOSDiskSpaceEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "Hybrid VM OS Disk Space Evaluation Periods"
            },
            "type": "string"
          },
          "HybridVMOSDiskSpaceFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "Hybrid VM OS Disk Space Failing Periods"
            },
            "type": "string"
          },
          "HybridVMOSDiskSpaceComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "Hybrid VM OS Disk Space Computers To Include"
            },
            "type": "array"
          },
          "HybridVMPercentCPUAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM Percent CPU",
              "displayName": "Hybrid VM Percent CPU Alert Severity"
            },
            "type": "String"
          },
          "HybridVMPercentCPUWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Hybrid VM Percent CPU Window Size"
            },
            "type": "string"
          },
          "HybridVMPercentCPUEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Hybrid VM Percent CPU Evaluation Frequency"
            },
            "type": "string"
          },
          "HybridVMPercentCPUAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Hybrid VM Percent CPU Auto Mitigate"
            },
            "type": "string"
          },
          "HybridVMPercentCPUAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Hybrid VM Percent CPU Auto Resolve"
            },
            "type": "string"
          },
          "HybridVMPercentCPUAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "Hybrid VM Percent CPU Auto Resolve Time"
            },
            "type": "string"
          },
          "HybridVMPercentCPUPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "Hybrid VM Percent CPU Policy Effect"
            },
            "type": "string"
          },
          "HybridVMPercentCPUAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "Hybrid VM Percent CPU Alert State"
            },
            "type": "string"
          },
          "HybridVMPercentCPUThreshold": {
            "defaultValue": "85",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Hybrid VM Percent CPU Threshold"
            },
            "type": "string"
          },
          "HybridVMPercentCPUOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "Hybrid VM Percent CPU Operator"
            },
            "type": "string"
          },
          "HybridVMPercentCPUTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "Hybrid VM Percent CPU Time Aggregation"
            },
            "type": "string"
          },
          "HybridVMPercentCPUFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "Hybrid VM Percent CPU Failing Periods"
            },
            "type": "string"
          },
          "HybridVMPercentMemoryAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM Percent Memory",
              "displayName": "Hybrid VM Percent Memory Alert Severity"
            },
            "type": "String"
          },
          "HybridVMPercentMemoryWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Hybrid VM Percent Memory Window Size"
            },
            "type": "string"
          },
          "HybridVMPercentMemoryEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Hybrid VM Percent Memory Evaluation Frequency"
            },
            "type": "string"
          },
          "HybridVMPercentMemoryAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Hybrid VM Percent Memory Auto Mitigate"
            },
            "type": "string"
          },
          "HybridVMPercentMemoryAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Hybrid VM Percent Memory Auto Resolve"
            },
            "type": "string"
          },
          "HybridVMNetworkInAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Hybrid VM Network In Auto Mitigate"
            },
            "type": "string"
          },
          "HybridVMPercentMemoryAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "Hybrid VM Percent Memory Auto Resolve Time"
            },
            "type": "string"
          },
          "HybridVMPercentMemoryPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "Hybrid VM Percent Memory Policy Effect"
            },
            "type": "string"
          },
          "HybridVMPercentMemoryAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "Hybrid VM Percent Memory Alert State"
            },
            "type": "string"
          },
          "HybridVMPercentMemoryThreshold": {
            "defaultValue": "10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Hybrid VM Percent Memory Threshold"
            },
            "type": "string"
          },
          "HybridVMPercentMemoryOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "Hybrid VM Percent Memory Operator"
            },
            "type": "string"
          },
          "HybridVMPercentMemoryTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "Hybrid VM Percent Memory Time Aggregation"
            },
            "type": "string"
          },
          "HybridVMPercentMemoryFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "Hybrid VM Percent Memory Failing Periods"
            },
            "type": "string"
          },
          "HybridVMDataDiskSpaceAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM Data Disk Space",
              "displayName": "Hybrid VM Data Disk Space Alert Severity"
            },
            "type": "String"
          },
          "HybridVMDataDiskSpaceWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Hybrid VM Data Disk Space Window Size"
            },
            "type": "string"
          },
          "HybridVMDataDiskSpaceEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Hybrid VM Data Disk Space Evaluation Frequency"
            },
            "type": "string"
          },
          "HybridVMDataDiskSpaceAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Hybrid VM Data Disk Space Auto Mitigate"
            },
            "type": "string"
          },
          "HybridVMDataDiskSpaceAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Hybrid VM Data Disk Space Auto Resolve"
            },
            "type": "string"
          },
          "HybridVMDataDiskSpaceAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "Hybrid VM Data Disk Space Auto Resolve Time"
            },
            "type": "string"
          },
          "HybridVMDataDiskSpacePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "Hybrid VM Data Disk Space Policy Effect"
            },
            "type": "string"
          },
          "HybridVMDataDiskSpaceAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "Hybrid VM Data Disk Space Alert State"
            },
            "type": "string"
          },
          "HybridVMDataDiskSpaceThreshold": {
            "defaultValue": "10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Hybrid VM Data Disk Space Threshold"
            },
            "type": "string"
          },
          "HybridVMDataDiskSpaceOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "Hybrid VM Data Disk Space Operator"
            },
            "type": "string"
          },
          "HybridVMDataDiskSpaceTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "Hybrid VM Data Disk Space Time Aggregation"
            },
            "type": "string"
          },
          "HybridVMDataDiskSpaceEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "Hybrid VM Data Disk Space Evaluation Periods"
            },
            "type": "string"
          },
          "HybridVMDataDiskSpaceFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "Hybrid VM Data Disk Space Failing Periods"
            },
            "type": "string"
          },
          "HybridVMDataDiskSpaceComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "Hybrid VM Data Disk Space Computers To Include"
            },
            "type": "array"
          },
          "HybridVMDataDiskReadLatencyAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM Data Disk Read Latency",
              "displayName": "Hybrid VM Data Disk Read Latency Alert Severity"
            },
            "type": "String"
          },
          "HybridVMDataDiskReadLatencyWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Hybrid VM Data Disk Read Latency Window Size"
            },
            "type": "string"
          },
          "HybridVMDataDiskReadLatencyEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Hybrid VM Data Disk Read Latency Evaluation Frequency"
            },
            "type": "string"
          },
          "HybridVMDataDiskReadLatencyAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Hybrid VM Data Disk Read Latency Auto Mitigate"
            },
            "type": "string"
          },
          "HybridVMDataDiskReadLatencyAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Hybrid VM Data Disk Read Latency Auto Resolve"
            },
            "type": "string"
          },
          "HybridVMDataDiskReadLatencyAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "Hybrid VM Data Disk Read Latency Auto Resolve Time"
            },
            "type": "string"
          },
          "HybridVMDataDiskReadLatencyPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "Hybrid VM Data Disk Read Latency Policy Effect"
            },
            "type": "string"
          },
          "HybridVMDataDiskReadLatencyAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "Hybrid VM Data Disk Read Latency Alert State"
            },
            "type": "string"
          },
          "HybridVMDataDiskReadLatencyThreshold": {
            "defaultValue": "30",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Hybrid VM Data Disk Read Latency Threshold"
            },
            "type": "string"
          },
          "HybridVMDataDiskReadLatencyOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "Hybrid VM Data Disk Read Latency Operator"
            },
            "type": "string"
          },
          "HybridVMDataDiskReadLatencyTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "Hybrid VM Data Disk Read Latency Time Aggregation"
            },
            "type": "string"
          },
          "HybridVMDataDiskReadLatencyEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "Hybrid VM Data Disk Read Latency Evaluation Periods"
            },
            "type": "string"
          },
          "HybridVMDataDiskReadLatencyFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "Hybrid VM Data Disk Read Latency Failing Periods"
            },
            "type": "string"
          },
          "HybridVMDataDiskReadLatencyComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "Hybrid VM Data Disk Read Latency Computers To Include"
            },
            "type": "array"
          },
          "HybridVMDataDiskWriteLatencyAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM Data Disk Write Latency",
              "displayName": "Hybrid VM Data Disk Write Latency Alert Severity"
            },
            "type": "String"
          },
          "HybridVMDataDiskWriteLatencyWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Hybrid VM Data Disk Write Latency Window Size"
            },
            "type": "string"
          },
          "HybridVMDataDiskWriteLatencyEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Hybrid VM Data Disk Write Latency Evaluation Frequency"
            },
            "type": "string"
          },
          "HybridVMDataDiskWriteLatencyAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Hybrid VM Data Disk Write Latency Auto Mitigate"
            },
            "type": "string"
          },
          "HybridVMDataDiskWriteLatencyAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Hybrid VM Data Disk Write Latency Auto Resolve"
            },
            "type": "string"
          },
          "HybridVMDataDiskWriteLatencyAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "Hybrid VM Data Disk Write Latency Auto Resolve Time"
            },
            "type": "string"
          },
          "HybridVMDataDiskWriteLatencyPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "Hybrid VM Data Disk Write Latency Policy Effect"
            },
            "type": "string"
          },
          "HybridVMDataDiskWriteLatencyAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "Hybrid VM Data Disk Write Latency Alert State"
            },
            "type": "string"
          },
          "HybridVMDataDiskWriteLatencyThreshold": {
            "defaultValue": "30",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Hybrid VM Data Disk Write Latency Threshold"
            },
            "type": "string"
          },
          "HybridVMDataDiskWriteLatencyOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "Hybrid VM Data Disk Write Latency Operator"
            },
            "type": "string"
          },
          "HybridVMDataDiskWriteLatencyTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "Hybrid VM Data Disk Write Latency Time Aggregation"
            },
            "type": "string"
          },
          "HybridVMDataDiskWriteLatencyEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "Hybrid VM Data Disk Write Latency Evaluation Periods"
            },
            "type": "string"
          },
          "HybridVMDataDiskWriteLatencyFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "Hybrid VM Data Disk Write Latency Failing Periods"
            },
            "type": "string"
          },
          "HybridVMDataDiskWriteLatencyComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "Hybrid VM Data Disk Write Latency Computers To Include"
            },
            "type": "array"
          },
          "HybridVMDisconnectedAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the Hybrid VM Disconnected alert",
              "displayName": "Hybrid VM Disconnected Alert Severity"
            },
            "type": "String"
          },
          "HybridVMDisconnectedAlertWindowSize": {
            "allowedValues": [
              "PT12H",
              "P1D"
            ],
            "defaultValue": "P1D",
            "metadata": {
              "description": "Window size for the Hybrid VM Disconnected alert",
              "displayName": "Hybrid VM Disconnected Window Size"
            },
            "type": "string"
          },
          "HybridVMDisconnectedAlertEvaluationFrequency": {
            "allowedValues": [
              "PT5M",
              "PT10M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT2H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT10M",
            "metadata": {
              "description": "Evaluation frequency for the Hybrid VM Disconnected alert",
              "displayName": "Hybrid VM Disconnected Evaluation Frequency"
            },
            "type": "string"
          },
          "HybridVMDisconnectedAlertAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the Hybrid VM Disconnected alert",
              "displayName": "Hybrid VM Disconnected Auto Mitigate"
            },
            "type": "string"
          },
          "HybridVMDisconnectedAlertPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "Hybrid VM Disconnected Policy Effect"
            },
            "type": "string"
          },
          "HybridVMDisconnectedAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "Hybrid VM Disconnected Alert State"
            },
            "type": "string"
          },
          "HybridVMDisconnectedAlertThreshold": {
            "allowedValues": [
              "5m",
              "10m",
              "15m",
              "30m",
              "1h",
              "2h",
              "3h",
              "6h",
              "12h",
              "1d",
              "2d",
              "3d",
              "7d"
            ],
            "defaultValue": "10m",
            "metadata": {
              "description": "Threshold in timespan value for the Hybrid VM Disconnected alert",
              "displayName": "Hybrid VM Disconnected Threshold (expressed in timespan)"
            },
            "type": "string"
          },
          "HybridVMDisconnectedAlertOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the Hybrid VM Disconnected alert",
              "displayName": "Hybrid VM Disconnected Operator"
            },
            "type": "string"
          },
          "HybridVMDisconnectedAlertTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the Hybrid VM Disconnected alert",
              "displayName": "Hybrid VM Disconnected Time Aggregation"
            },
            "type": "string"
          },
          "HybridVMDisconnectedAlertEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the Hybrid VM Disconnected alert",
              "displayName": "Hybrid VM Disconnected Evaluation Periods"
            },
            "type": "string"
          },
          "HybridVMDisconnectedAlertFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the Hybrid VM Disconnected alert",
              "displayName": "Hybrid VM Disconnected Failing Periods"
            },
            "type": "string"
          },
          "HybridVMHeartBeatRGAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "description": "Severity of the alert for VM Heart Beat RG",
              "displayName": "Hybrid VM Heart Beat RG Alert Severity"
            },
            "type": "String"
          },
          "HybridVMHeartBeatRGWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Hybrid VM Heart Beat RG Window Size"
            },
            "type": "string"
          },
          "HybridVMHeartBeatRGEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Hybrid VM Heart Beat RG Evaluation Frequency"
            },
            "type": "string"
          },
          "HybridVMHeartBeatRGAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Hybrid VM Heart Beat RG Auto Mitigate"
            },
            "type": "string"
          },
          "HybridVMHeartBeatRGAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Hybrid VM Heart Beat RG Auto Resolve"
            },
            "type": "string"
          },
          "HybridVMHeartBeatRGAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "Hybrid VM Heart Beat RG Auto Resolve Time"
            },
            "type": "string"
          },
          "HybridVMHeartBeatRGPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "Hybrid VM Heart Beat RG Policy Effect"
            },
            "type": "string"
          },
          "HybridVMHeartBeatRGAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Hybrid VM Heart Beat RG Alert State"
            },
            "type": "string"
          },
          "HybridVMHeartBeatRGThreshold": {
            "defaultValue": "10",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Hybrid VM Heart Beat RG Threshold"
            },
            "type": "string"
          },
          "HybridVMHeartBeatRGOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "Hybrid VM Heart Beat RG Operator"
            },
            "type": "string"
          },
          "HybridVMHeartBeatRGTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "Hybrid VM Heart Beat RG Time Aggregation"
            },
            "type": "string"
          },
          "HybridVMHeartBeatRGComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "Hybrid VM Heart Beat RG Computers To Include"
            },
            "type": "array"
          },
          "HybridVMHeartBeatRGFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "HybridVM Heart Beat RG Failing Periods"
            },
            "type": "string"
          },
          "HybridVMNetworkInAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM Network In",
              "displayName": "Hybrid VM Network In Alert Severity"
            },
            "type": "String"
          },
          "HybridVMNetworkInWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Hybrid VM Network In Window Size"
            },
            "type": "string"
          },
          "HybridVMNetworkInEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Hybrid VM Network In Evaluation Frequency"
            },
            "type": "string"
          },
          "HybridVMNetworkInAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Hybrid VM Network In Auto Resolve"
            },
            "type": "string"
          },
          "HybridVMNetworkInAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "Hybrid VM Network In Auto Resolve Time"
            },
            "type": "string"
          },
          "HybridVMNetworkInPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "Hybrid VM Network In Policy Effect"
            },
            "type": "string"
          },
          "HybridVMNetworkInAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert",
              "displayName": "Hybrid VM Network In Alert State"
            },
            "type": "string"
          },
          "HybridVMNetworkInThreshold": {
            "defaultValue": "10000000",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Hybrid VM Network In Threshold"
            },
            "type": "string"
          },
          "HybridVMNetworkInOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "Hybrid VM Network In Operator"
            },
            "type": "string"
          },
          "HybridVMNetworkInTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "Hybrid VM Network In Time Aggregation"
            },
            "type": "string"
          },
          "HybridVMNetworkInEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "Hybrid VM Network In Evaluation Periods"
            },
            "type": "string"
          },
          "HybridVMNetworkInFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "Hybrid VM Network In Failing Periods"
            },
            "type": "string"
          },
          "HybridVMNetworkInComputersToInclude": {
            "defaultValue": [
              "*"
            ],
            "metadata": {
              "description": "Computers To Include for the alert",
              "displayName": "Hybrid VM Network In Computers To Include"
            },
            "type": "array"
          },
          "HybridVMNetworkOutAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "description": "Severity of the alert for VM Network Out",
              "displayName": "Hybrid VM Network Out Alert Severity"
            },
            "type": "String"
          },
          "HybridVMNetworkOutWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT15M",
            "metadata": {
              "description": "Window size for the alert",
              "displayName": "Hybrid VM Network Out Window Size"
            },
            "type": "string"
          },
          "HybridVMNetworkOutEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "description": "Evaluation frequency for the alert",
              "displayName": "Hybrid VM Network Out Evaluation Frequency"
            },
            "type": "string"
          },
          "HybridVMNetworkOutAutoMitigate": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Mitigate for the alert",
              "displayName": "Hybrid VM Network Out Auto Mitigate"
            },
            "type": "string"
          },
          "HybridVMNetworkOutAutoResolve": {
            "defaultValue": "true",
            "metadata": {
              "description": "Auto Resolve for the alert",
              "displayName": "Hybrid VM Network Out Auto Resolve"
            },
            "type": "string"
          },
          "HybridVMNetworkOutAutoResolveTime": {
            "defaultValue": "00:10:00",
            "metadata": {
              "description": "Auto Resolve Time for the alert",
              "displayName": "Hybrid VM Network Out Auto Resolve Time"
            },
            "type": "string"
          },
          "HybridVMNetworkOutPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist",
              "displayName": "Hybrid VM Network Out Policy Effect"
            },
            "type": "string"
          },
          "HybridVMNetworkOutAlertState": {
            "defaultValue": "true",
            "metadata": {
              "description": "Alert state for the alert, true will enable the alert, false will disable the alert",
              "displayName": "Hybrid VM Network Out Alert State"
            },
            "type": "string"
          },
          "HybridVMNetworkOutThreshold": {
            "defaultValue": "10000000",
            "metadata": {
              "description": "Threshold for the alert",
              "displayName": "Hybrid VM Network Out Threshold"
            },
            "type": "string"
          },
          "HybridVMNetworkOutOperator": {
            "allowedValues": [
              "GreaterThan"
            ],
            "defaultValue": "GreaterThan",
            "metadata": {
              "description": "Operator for the alert",
              "displayName": "Hybrid VM Network Out Operator"
            },
            "type": "string"
          },
          "HybridVMNetworkOutTimeAggregation": {
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count",
            "metadata": {
              "description": "Time Aggregation for the alert",
              "displayName": "Hybrid VM Network Out Time Aggregation"
            },
            "type": "string"
          },
          "HybridVMNetworkOutEvaluationPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Evaluation Periods for the alert",
              "displayName": "Hybrid VM Network Out Evaluation Periods"
            },
            "type": "string"
          },
          "HybridVMNetworkOutFailingPeriods": {
            "defaultValue": "1",
            "metadata": {
              "description": "Failing Periods for the alert",
              "displayName": "Hybrid VM Network Out Failing Periods"
            },
            "type": "string"
          }
        },
        "policyDefinitionGroups": null,
        "policyDefinitions": [
          {
            "policyDefinitionReferenceId": "ALZ_HybridVMHeartBeatRG",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('HybridVMHeartBeatRGEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('HybridVMHeartBeatRGWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('HybridVMHeartBeatRGAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('HybridVMHeartBeatRGAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('HybridVMHeartBeatRGAlertState')]"
              },
              "threshold": {
                "value": "[parameters('HybridVMHeartBeatRGThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('HybridVMHeartBeatRGFailingPeriods')]"
              },
              "effect": {
                "value": "[parameters('HybridVMHeartBeatRGPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('HybridVMHeartBeatRGTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('HybridVMHeartBeatRGOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('HybridVMHeartBeatRGAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('HybridVMHeartBeatRGComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('HybridVMHeartBeatRGAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_HeartBeat_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_HybridVMNetworkIn",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('HybridVMNetworkInEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('HybridVMNetworkInWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('HybridVMNetworkInAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('HybridVMNetworkInAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('HybridVMNetworkInAlertState')]"
              },
              "threshold": {
                "value": "[parameters('HybridVMNetworkInThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('HybridVMNetworkInFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('HybridVMNetworkInEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('HybridVMNetworkInPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('HybridVMNetworkInTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('HybridVMNetworkInOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('HybridVMNetworkInAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('HybridVMNetworkInComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('HybridVMNetworkInAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_NetworkIn_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_HybridVMNetworkOut",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('HybridVMNetworkOutEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('HybridVMNetworkOutWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('HybridVMNetworkOutAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('HybridVMNetworkOutAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('HybridVMNetworkOutAlertState')]"
              },
              "threshold": {
                "value": "[parameters('HybridVMNetworkOutThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('HybridVMNetworkOutFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('HybridVMNetworkOutEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('HybridVMNetworkOutPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('HybridVMNetworkOutTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('HybridVMNetworkOutOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('HybridVMNetworkOutAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('HybridVMNetworkOutComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('HybridVMNetworkOutAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_NetworkOut_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_HybridVMOSDiskReadLatency",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('HybridVMOSDiskReadLatencyEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('HybridVMOSDiskReadLatencyWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('HybridVMOSDiskReadLatencyAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('HybridVMOSDiskReadLatencyAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('HybridVMOSDiskReadLatencyAlertState')]"
              },
              "threshold": {
                "value": "[parameters('HybridVMOSDiskReadLatencyThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('HybridVMOSDiskReadLatencyFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('HybridVMOSDiskReadLatencyEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('HybridVMOSDiskReadLatencyPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('HybridVMOSDiskReadLatencyTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('HybridVMOSDiskReadLatencyOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('HybridVMOSDiskReadLatencyAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('HybridVMOSDiskReadLatencyComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('HybridVMOSDiskReadLatencyAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_OSDiskreadLatency_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_HybridVMOSDiskWriteLatency",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('HybridVMOSDiskWriteLatencyEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('HybridVMOSDiskWriteLatencyWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('HybridVMOSDiskWriteLatencyAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('HybridVMOSDiskWriteLatencyAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('HybridVMOSDiskWriteLatencyAlertState')]"
              },
              "threshold": {
                "value": "[parameters('HybridVMOSDiskWriteLatencyThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('HybridVMOSDiskWriteLatencyFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('HybridVMOSDiskWriteLatencyEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('HybridVMOSDiskWriteLatencyPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('HybridVMOSDiskWriteLatencyTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('HybridVMOSDiskWriteLatencyOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('HybridVMOSDiskWriteLatencyAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('HybridVMOSDiskWriteLatencyComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('HybridVMOSDiskWriteLatencyAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_OSDiskwriteLatency_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_HybridVMOSDiskSpace",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('HybridVMOSDiskSpaceEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('HybridVMOSDiskSpaceWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('HybridVMOSDiskSpaceAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('HybridVMOSDiskSpaceAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('HybridVMOSDiskSpaceAlertState')]"
              },
              "threshold": {
                "value": "[parameters('HybridVMOSDiskSpaceThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('HybridVMOSDiskSpaceFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('HybridVMOSDiskSpaceEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('HybridVMOSDiskSpacePolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('HybridVMOSDiskSpaceTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('HybridVMOSDiskSpaceOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('HybridVMOSDiskSpaceAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('HybridVMOSDiskSpaceComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('HybridVMOSDiskSpaceAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_OSDiskSpace_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_HybridVMPercentCPU",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('HybridVMPercentCPUEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('HybridVMPercentCPUWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('HybridVMPercentCPUAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('HybridVMPercentCPUAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('HybridVMPercentCPUAlertState')]"
              },
              "threshold": {
                "value": "[parameters('HybridVMPercentCPUThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('HybridVMPercentCPUFailingPeriods')]"
              },
              "effect": {
                "value": "[parameters('HybridVMPercentCPUPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('HybridVMPercentCPUTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('HybridVMPercentCPUOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('HybridVMPercentCPUAutoResolveTime')]"
              },
              "autoResolve": {
                "value": "[parameters('HybridVMPercentCPUAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_CPU_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_HybridVMPercentMemory",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('HybridVMPercentMemoryEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('HybridVMPercentMemoryWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('HybridVMPercentMemoryAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('HybridVMPercentMemoryAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('HybridVMPercentMemoryAlertState')]"
              },
              "threshold": {
                "value": "[parameters('HybridVMPercentMemoryThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('HybridVMPercentMemoryFailingPeriods')]"
              },
              "effect": {
                "value": "[parameters('HybridVMPercentMemoryPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('HybridVMPercentMemoryTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('HybridVMPercentMemoryOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('HybridVMPercentMemoryAutoResolveTime')]"
              },
              "autoResolve": {
                "value": "[parameters('HybridVMPercentMemoryAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_Memory_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_HybridVMDataDiskSpace",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('HybridVMDataDiskSpaceEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('HybridVMDataDiskSpaceWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('HybridVMDataDiskSpaceAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('HybridVMDataDiskSpaceAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('HybridVMDataDiskSpaceAlertState')]"
              },
              "threshold": {
                "value": "[parameters('HybridVMDataDiskSpaceThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('HybridVMDataDiskSpaceFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('HybridVMDataDiskSpaceEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('HybridVMDataDiskSpacePolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('HybridVMDataDiskSpaceTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('HybridVMDataDiskSpaceOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('HybridVMDataDiskSpaceAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('HybridVMDataDiskSpaceComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('HybridVMDataDiskSpaceAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_dataDiskSpace_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_HybridVMDataDiskReadLatency",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('HybridVMDataDiskReadLatencyEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('HybridVMDataDiskReadLatencyWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('HybridVMDataDiskReadLatencyAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('HybridVMDataDiskReadLatencyAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('HybridVMDataDiskReadLatencyAlertState')]"
              },
              "threshold": {
                "value": "[parameters('HybridVMDataDiskReadLatencyThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('HybridVMDataDiskReadLatencyFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('HybridVMDataDiskReadLatencyEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('HybridVMDataDiskReadLatencyPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('HybridVMDataDiskReadLatencyTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('HybridVMDataDiskReadLatencyOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('HybridVMDataDiskReadLatencyAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('HybridVMDataDiskReadLatencyComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('HybridVMDataDiskReadLatencyAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_dataDiskReadLatency_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_HybridVMDataDiskWriteLatency",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('HybridVMDataDiskWriteLatencyEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('HybridVMDataDiskWriteLatencyWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('HybridVMDataDiskWriteLatencyAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('HybridVMDataDiskWriteLatencyAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('HybridVMDataDiskWriteLatencyAlertState')]"
              },
              "threshold": {
                "value": "[parameters('HybridVMDataDiskWriteLatencyThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('HybridVMDataDiskWriteLatencyFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('HybridVMDataDiskWriteLatencyEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('HybridVMDataDiskWriteLatencyPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('HybridVMDataDiskWriteLatencyTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('HybridVMDataDiskWriteLatencyOperator')]"
              },
              "autoResolveTime": {
                "value": "[parameters('HybridVMDataDiskWriteLatencyAutoResolveTime')]"
              },
              "computersToInclude": {
                "value": "[parameters('HybridVMDataDiskWriteLatencyComputersToInclude')]"
              },
              "autoResolve": {
                "value": "[parameters('HybridVMDataDiskWriteLatencyAutoResolve')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_dataDiskWriteLatency_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_HybridVMDisconnected",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('HybridVMDisconnectedAlertEvaluationFrequency')]"
              },
              "windowSize": {
                "value": "[parameters('HybridVMDisconnectedAlertWindowSize')]"
              },
              "autoMitigate": {
                "value": "[parameters('HybridVMDisconnectedAlertAutoMitigate')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "severity": {
                "value": "[parameters('HybridVMDisconnectedAlertSeverity')]"
              },
              "enabled": {
                "value": "[parameters('HybridVMDisconnectedAlertState')]"
              },
              "threshold": {
                "value": "[parameters('HybridVMDisconnectedAlertThreshold')]"
              },
              "failingPeriods": {
                "value": "[parameters('HybridVMDisconnectedAlertFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[parameters('HybridVMDisconnectedAlertEvaluationPeriods')]"
              },
              "effect": {
                "value": "[parameters('HybridVMDisconnectedAlertPolicyEffect')]"
              },
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "timeAggregation": {
                "value": "[parameters('HybridVMDisconnectedAlertTimeAggregation')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "operator": {
                "value": "[parameters('HybridVMDisconnectedAlertOperator')]"
              },
              "UAMIResourceId": {
                "value": "[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_Hybrid_VM_Disconnected_Alert"
          }
        ],
        "name": "Alerting-HybridVM",
        "displayName": "Deploy Azure Monitor Baseline Alerts for Hybrid VMs"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-Identity": {
        "metadata": {
          "_deployed_by_amba": true,
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.1.1",
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "Initiative to deploy AMBA alerts relevant to the ALZ Identity management group",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-Identity",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "ALZMonitorResourceGroupName": {
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "displayName": "ALZ Monitor Resource Group Name",
              "description": "Name of the resource group where the alerting resources will be deployed"
            },
            "type": "String"
          },
          "ALZMonitorResourceGroupLocation": {
            "defaultValue": "centralus",
            "metadata": {
              "displayName": "ALZ Monitor Resource Group Location",
              "description": "Location of the resource group where the alerting resources will be deployed"
            },
            "type": "String"
          },
          "ALZMonitorResourceGroupTags": {
            "defaultValue": {
              "_deployed_by_alz_monitor": true
            },
            "metadata": {
              "displayName": "ALZ Monitor Resource Group Tags",
              "description": "Tags for the resource group where the alerting resources will be deployed"
            },
            "type": "Object"
          },
          "ALZMonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "displayName": "ALZ Monitoring disabled tag values(s)",
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled."
            },
            "type": "Array"
          },
          "ALZMonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "displayName": "ALZ Monitoring disabled tag name",
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled."
            },
            "type": "String"
          },
          "HSMsLatencyAvailabilityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Latency Availability Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            },
            "type": "string"
          },
          "KvLatencyAvailabilityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "displayName": "KeyVault Latency Alert Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            },
            "type": "string"
          },
          "HSMsLatencyAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Latency Availability Alert Severity",
              "description": "Severity of the alert for Key Vault Managed HSMs Latency Availability"
            },
            "type": "String"
          },
          "HSMsAvailabilityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Availability Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            },
            "type": "string"
          },
          "HSMsLatencyAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Latency Availability Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist"
            },
            "type": "string"
          },
          "KvLatencyAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "3",
            "metadata": {
              "displayName": "KeyVault Latency Alert Severity",
              "description": "Severity of the alert"
            },
            "type": "String"
          },
          "KvLatencyAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "displayName": "KeyVault Latency Alert Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert"
            },
            "type": "string"
          },
          "KvAvailabilityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "displayName": "KeyVault Availability Alert Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            },
            "type": "string"
          },
          "HSMsLatencyAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Latency Availability Window Size",
              "description": "Window size for the alert"
            },
            "type": "string"
          },
          "HSMsLatencyAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Latency Availability Alert State",
              "description": "Alert state for the alert"
            },
            "type": "string"
          },
          "HSMsLatencyAvailabilityThreshold": {
            "defaultValue": "1000",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Latency Availability Threshold",
              "description": "Threshold for the alert"
            },
            "type": "string"
          },
          "KvLatencyAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "KeyVault Latency Alert State",
              "description": "State of the alert, true will enable the alert, false will disable the alert"
            },
            "type": "string"
          },
          "KvLatencyAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "displayName": "KeyVault Latency Alert Window Size",
              "description": "Window size for the alert"
            },
            "type": "string"
          },
          "KvLatencyAvailabilityThreshold": {
            "defaultValue": "1000",
            "metadata": {
              "displayName": "KeyVault Latency Alert Threshold",
              "description": "Threshold for the alert"
            },
            "type": "string"
          },
          "activityHSMsDeletePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Delete Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist"
            },
            "type": "string"
          },
          "HSMsAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Availability Alert Severity",
              "description": "Severity of the alert for Key Vault Managed HSMs Availability"
            },
            "type": "String"
          },
          "KVCapacityEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "displayName": "KeyVault Capacity Alert Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            },
            "type": "string"
          },
          "activityKVDeletePolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "deployIfNotExists",
            "metadata": {
              "displayName": "Key Vault Delete Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist"
            },
            "type": "string"
          },
          "activityHSMsDeleteAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "Activity Key Vault Managed HSMs Delete Alert State",
              "description": "Alert state for the alert"
            },
            "type": "string"
          },
          "KVRequestEvaluationFrequency": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "displayName": "KeyVault Request Alert Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            },
            "type": "string"
          },
          "HSMsAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Availability Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist"
            },
            "type": "string"
          },
          "KvAvailabilityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "displayName": "KeyVault Availability Alert Severity",
              "description": "Severity of the alert"
            },
            "type": "String"
          },
          "HSMsAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Availability Window Size",
              "description": "Window size for the alert"
            },
            "type": "string"
          },
          "activityKVDeleteAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "Activity Log KeyVault Delete Alert State",
              "description": "State of the alert, true will enable the alert, false will disable the alert"
            },
            "type": "string"
          },
          "HSMsAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Availability Alert State",
              "description": "Alert state for the alert"
            },
            "type": "string"
          },
          "KvAvailabilityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "displayName": "KeyVault Availability Alert Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert"
            },
            "type": "string"
          },
          "HSMsAvailabilityThreshold": {
            "defaultValue": "20",
            "metadata": {
              "displayName": "Key Vault Managed HSMs Availability Threshold",
              "description": "Threshold for the alert"
            },
            "type": "string"
          },
          "KvAvailabilityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "KeyVault Availability Alert State",
              "description": "State of the alert, true will enable the alert, false will disable the alert"
            },
            "type": "string"
          },
          "KvAvailabilityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT1M",
            "metadata": {
              "displayName": "KeyVault Availability Alert Window Size",
              "description": "Window size for the alert"
            },
            "type": "string"
          },
          "KVCapacityAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "1",
            "metadata": {
              "displayName": "KeyVault Capacity Alert Severity",
              "description": "Severity of the alert"
            },
            "type": "String"
          },
          "KVAvailabilityThreshold": {
            "defaultValue": "20",
            "metadata": {
              "displayName": "KeyVault Availability Alert Threshold",
              "description": "Threshold for the alert"
            },
            "type": "string"
          },
          "KVRequestAlertSeverity": {
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2",
            "metadata": {
              "displayName": "KeyVault Request Alert Severity",
              "description": "Severity of the alert"
            },
            "type": "String"
          },
          "KVCapacityPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "displayName": "KeyVault Capacity Alert Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert"
            },
            "type": "string"
          },
          "KVRequestPolicyEffect": {
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "defaultValue": "disabled",
            "metadata": {
              "displayName": "KeyVault Request Alert Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert"
            },
            "type": "string"
          },
          "KVCapacityAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "KeyVault Capacity Alert State",
              "description": "State of the alert, true will enable the alert, false will disable the alert"
            },
            "type": "string"
          },
          "KVCapacityWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "displayName": "KeyVault Capacity Alert Window Size",
              "description": "Window size for the alert"
            },
            "type": "string"
          },
          "KVCapacityThreshold": {
            "defaultValue": "75",
            "metadata": {
              "displayName": "KeyVault Capacity Alert Threshold",
              "description": "Threshold for the alert"
            },
            "type": "string"
          },
          "KVRequestWindowSize": {
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "defaultValue": "PT5M",
            "metadata": {
              "displayName": "KeyVault Request Alert Window Size",
              "description": "Window size for the alert"
            },
            "type": "string"
          },
          "KVRequestAlertState": {
            "defaultValue": "true",
            "metadata": {
              "displayName": "KeyVault Request Alert State",
              "description": "State of the alert, true will enable the alert, false will disable the alert"
            },
            "type": "string"
          }
        },
        "policyDefinitionGroups": null,
        "policyDefinitions": [
          {
            "policyDefinitionReferenceId": "ALZ_KVRequest",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('KVRequestEvaluationFrequency')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('KVRequestAlertState')]"
              },
              "windowSize": {
                "value": "[parameters('KVRequestWindowSize')]"
              },
              "severity": {
                "value": "[parameters('KVRequestAlertSeverity')]"
              },
              "effect": {
                "value": "[parameters('KVRequestPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Requests_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_KvAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('KvAvailabilityEvaluationFrequency')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('KvAvailabilityAlertState')]"
              },
              "windowSize": {
                "value": "[parameters('KvAvailabilityWindowSize')]"
              },
              "threshold": {
                "value": "[parameters('KVAvailabilityThreshold')]"
              },
              "severity": {
                "value": "[parameters('KvAvailabilityAlertSeverity')]"
              },
              "effect": {
                "value": "[parameters('KvAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Availability_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_KvLatencyAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('KvLatencyAvailabilityEvaluationFrequency')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('KvLatencyAvailabilityAlertState')]"
              },
              "windowSize": {
                "value": "[parameters('KvLatencyAvailabilityWindowSize')]"
              },
              "threshold": {
                "value": "[parameters('KvLatencyAvailabilityThreshold')]"
              },
              "severity": {
                "value": "[parameters('KvLatencyAvailabilityAlertSeverity')]"
              },
              "effect": {
                "value": "[parameters('KvLatencyAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Latency_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_KVCapacity",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('KVCapacityEvaluationFrequency')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('KVCapacityAlertState')]"
              },
              "windowSize": {
                "value": "[parameters('KVCapacityWindowSize')]"
              },
              "threshold": {
                "value": "[parameters('KVCapacityThreshold')]"
              },
              "severity": {
                "value": "[parameters('KVCapacityAlertSeverity')]"
              },
              "effect": {
                "value": "[parameters('KVCapacityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_KeyVault_Capacity_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_activityKVDelete",
            "parameters": {
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "enabled": {
                "value": "[parameters('activityKVDeleteAlertState')]"
              },
              "effect": {
                "value": "[parameters('activityKVDeletePolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_KeyVault_Delete"
          },
          {
            "policyDefinitionReferenceId": "ALZ_ManagedHSMsAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('HSMsAvailabilityEvaluationFrequency')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('HSMsAvailabilityAlertState')]"
              },
              "windowSize": {
                "value": "[parameters('HSMsAvailabilityWindowSize')]"
              },
              "threshold": {
                "value": "[parameters('HSMsAvailabilityThreshold')]"
              },
              "severity": {
                "value": "[parameters('HSMsAvailabilityAlertSeverity')]"
              },
              "effect": {
                "value": "[parameters('HSMsAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ManagedHSMs_Availability_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_ManagedHSMsLatencyAvailability",
            "parameters": {
              "evaluationFrequency": {
                "value": "[parameters('HSMsLatencyAvailabilityEvaluationFrequency')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "enabled": {
                "value": "[parameters('HSMsLatencyAvailabilityAlertState')]"
              },
              "windowSize": {
                "value": "[parameters('HSMsLatencyAvailabilityWindowSize')]"
              },
              "threshold": {
                "value": "[parameters('HSMsLatencyAvailabilityThreshold')]"
              },
              "severity": {
                "value": "[parameters('HSMsLatencyAvailabilityAlertSeverity')]"
              },
              "effect": {
                "value": "[parameters('HSMsLatencyAvailabilityPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ManagedHSMs_Latency_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_activityManagedHSMsDelete",
            "parameters": {
              "alertResourceGroupLocation": {
                "value": "[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "alertResourceGroupName": {
                "value": "[parameters('ALZMonitorResourceGroupName')]"
              },
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "alertResourceGroupTags": {
                "value": "[parameters('ALZMonitorResourceGroupTags')]"
              },
              "enabled": {
                "value": "[parameters('activityHSMsDeleteAlertState')]"
              },
              "effect": {
                "value": "[parameters('activityHSMsDeletePolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_ActivityLog_ManagedHSMs_Delete"
          }
        ],
        "name": "Alerting-Identity",
        "displayName": "Deploy Azure Monitor Baseline Alerts for Identity"
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-RecoveryServices": {
        "metadata": {
          "_deployed_by_amba": true,
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "version": "1.1.0",
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "pacOwnerId": "00000000-0000-0000-0000-000000000000",
          "deployedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary"
        },
        "description": "This initiative deploys Azure Monitor Baseline Alerts to monitor Recovery Services such as Azure Backup, and Azure Site Recovery.",
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-RecoveryServices",
        "scopeId": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "parameters": {
          "ALZMonitorDisableTagValues": {
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ],
            "metadata": {
              "displayName": "ALZ Monitoring disabled tag values(s)",
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled."
            },
            "type": "Array"
          },
          "ALZMonitorDisableTagName": {
            "defaultValue": "MonitorDisable",
            "metadata": {
              "displayName": "ALZ Monitoring disabled tag name",
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled."
            },
            "type": "String"
          },
          "RVBackupHealthMonitorPolicyEffect": {
            "allowedValues": [
              "modify",
              "audit",
              "disabled"
            ],
            "defaultValue": "modify",
            "metadata": {
              "displayName": "Recovery Vault Backup Health Monitor Policy Effect",
              "description": "Policy effect for the alert, modify will modify the alert if it exists, or audit if it does not exist"
            },
            "type": "string"
          },
          "RVASRHealthMonitorPolicyEffect": {
            "allowedValues": [
              "modify",
              "audit",
              "disabled"
            ],
            "defaultValue": "modify",
            "metadata": {
              "displayName": "Recovery Vault ASR Health Monitor Policy Effect",
              "description": "Policy effect for the alert, modify will modify the alert if it exists, or audit if it does not exist"
            },
            "type": "string"
          }
        },
        "policyDefinitionGroups": null,
        "policyDefinitions": [
          {
            "policyDefinitionReferenceId": "ALZ_RVBackupHealthMonitor",
            "parameters": {
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "effect": {
                "value": "[parameters('RVBackupHealthMonitorPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_RecoveryVault_BackupHealthMonitor_Alert"
          },
          {
            "policyDefinitionReferenceId": "ALZ_RVASRHealthMonitor",
            "parameters": {
              "MonitorDisableTagValues": {
                "value": "[parameters('ALZMonitorDisableTagValues')]"
              },
              "MonitorDisableTagName": {
                "value": "[parameters('ALZMonitorDisableTagName')]"
              },
              "effect": {
                "value": "[parameters('RVASRHealthMonitorPolicyEffect')]"
              }
            },
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyDefinitions/Deploy_RecoveryVault_ASRHealthMonitor_Alert"
          }
        ],
        "name": "Alerting-RecoveryServices",
        "displayName": "Deploy Azure Monitor Baseline Alerts for Recovery Services"
      }
    },
    "delete": {},
    "replace": {},
    "update": {}
  },
  "createdOn": "2024-12-20 03:26:52Z",
  "assignments": {
    "numberOfChanges": 15,
    "numberUnchanged": 0,
    "new": {
      "/providers/Microsoft.Management/managementGroups/mg-epacdev-platform/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-VM": {
        "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-VM",
        "managedIdentityLocation": "australiaeast",
        "nonComplianceMessages": [
          {
            "policyDefinitionReferenceId": null,
            "message": "Alerting must be deployed to Azure services."
          }
        ],
        "displayName": "Deploy Azure Monitor Baseline Alerts for Virtual Machines",
        "identity": {
          "type": "SystemAssigned"
        },
        "parameters": {
          "ALZMonitorResourceGroupLocation": "australiaeast",
          "ALZManagementSubscriptionId": "8da8d616-a90e-446a-9098-ad7381ce56a7",
          "ALZMonitorResourceGroupName": "alertsRG",
          "ALZUserAssignedManagedIdentityName": "id-amba-prod-001",
          "ALZMonitorResourceGroupTags": {
            "Project": "amba-monitoring"
          }
        },
        "enforcementMode": "Default",
        "name": "Deploy-AMBA-VM",
        "identityRequired": true,
        "description": "This initiative deploys Azure Monitor Baseline Alerts to monitor Azure Virtual Machines.",
        "metadata": {
          "assignedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary",
          "_deployed_by_amba": true,
          "pacOwnerId": "00000000-0000-0000-0000-000000000000"
        },
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev-platform/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-VM",
        "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-platform",
        "notScopes": [],
        "requiredRoleAssignments": [
          {
            "crossTenant": false,
            "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
            "roleDisplayName": "Contributor",
            "description": "Policy Assignment '/providers/Microsoft.Management/managementGroups/mg-epacdev-platform/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-VM': Role Assignment required by Policy, deployed by: 'epac/00000000-0000-0000-0000-000000000000/epac-canary'",
            "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-platform"
          }
        ]
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-RecoverySvc": {
        "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-RecoveryServices",
        "managedIdentityLocation": "australiaeast",
        "nonComplianceMessages": [
          {
            "policyDefinitionReferenceId": null,
            "message": "Alerting must be deployed to Azure services."
          }
        ],
        "displayName": "Deploy Azure Monitor Baseline Alerts for Recovery Services",
        "identity": {
          "type": "SystemAssigned"
        },
        "enforcementMode": "Default",
        "name": "Deploy-AMBA-RecoverySvc",
        "identityRequired": true,
        "description": "This initiative deploys Azure Monitor Baseline Alerts to monitor Recovery Services such as Azure Backup, and Azure Site Recovery.",
        "metadata": {
          "assignedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary",
          "_deployed_by_amba": true,
          "pacOwnerId": "00000000-0000-0000-0000-000000000000"
        },
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-RecoverySvc",
        "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones",
        "notScopes": [],
        "requiredRoleAssignments": [
          {
            "crossTenant": false,
            "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
            "roleDisplayName": "Contributor",
            "description": "Policy Assignment '/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-RecoverySvc': Role Assignment required by Policy, deployed by: 'epac/00000000-0000-0000-0000-000000000000/epac-canary'",
            "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones"
          }
        ]
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev-platform/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-HybridVM": {
        "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-HybridVM",
        "managedIdentityLocation": "australiaeast",
        "nonComplianceMessages": [
          {
            "policyDefinitionReferenceId": null,
            "message": "Alerting must be deployed to Azure services."
          }
        ],
        "displayName": "Deploy Azure Monitor Baseline Alerts for Hybrid VMs",
        "identity": {
          "type": "SystemAssigned"
        },
        "parameters": {
          "HybridVMHeartBeatRGWindowSize": "PT6H",
          "ALZMonitorResourceGroupTags": {
            "Project": "amba-monitoring"
          },
          "HybridVMDisconnectedAlertAutoMitigate": "false",
          "HybridVMOSDiskWriteLatencyThreshold": "30",
          "ALZManagementSubscriptionId": "8da8d616-a90e-446a-9098-ad7381ce56a7",
          "ALZMonitorResourceGroupLocation": "australiaeast",
          "ALZUserAssignedManagedIdentityName": "id-amba-prod-001",
          "ALZMonitorResourceGroupName": "alertsRG"
        },
        "enforcementMode": "Default",
        "name": "Deploy-AMBA-HybridVM",
        "identityRequired": true,
        "description": "This initiative deploys Azure Monitor Baseline Alerts to monitor Azure Arc-enabled Servers.",
        "metadata": {
          "assignedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary",
          "_deployed_by_amba": true,
          "pacOwnerId": "00000000-0000-0000-0000-000000000000"
        },
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev-platform/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-HybridVM",
        "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-platform",
        "notScopes": [],
        "requiredRoleAssignments": [
          {
            "crossTenant": false,
            "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
            "roleDisplayName": "Contributor",
            "description": "Policy Assignment '/providers/Microsoft.Management/managementGroups/mg-epacdev-platform/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-HybridVM': Role Assignment required by Policy, deployed by: 'epac/00000000-0000-0000-0000-000000000000/epac-canary'",
            "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-platform"
          }
        ]
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev-platform-management/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-Management": {
        "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-Management",
        "managedIdentityLocation": "australiaeast",
        "nonComplianceMessages": [
          {
            "policyDefinitionReferenceId": null,
            "message": "Alerting must be deployed to Azure services."
          }
        ],
        "displayName": "Deploy Azure Monitor Baseline Alerts for Management",
        "identity": {
          "type": "SystemAssigned"
        },
        "parameters": {
          "LAWDailyCapLimitEvaluationFrequency": "PT5M",
          "ALZMonitorResourceGroupTags": {
            "Project": "amba-monitoring"
          },
          "LAWDailyCapLimitWindowSize": "PT5M",
          "ALZManagementSubscriptionId": "8da8d616-a90e-446a-9098-ad7381ce56a7",
          "LAWDailyCapLimitSeverity": "1",
          "ALZMonitorResourceGroupLocation": "australiaeast",
          "ALZUserAssignedManagedIdentityName": "id-amba-prod-001",
          "ALZMonitorResourceGroupName": "alertsRG"
        },
        "enforcementMode": "Default",
        "name": "Deploy-AMBA-Management",
        "identityRequired": true,
        "description": "Initiative to deploy AMBA alerts relevant to the ALZ Management management group",
        "metadata": {
          "assignedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary",
          "_deployed_by_amba": true,
          "pacOwnerId": "00000000-0000-0000-0000-000000000000"
        },
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev-platform-management/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-Management",
        "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-platform-management",
        "notScopes": [],
        "requiredRoleAssignments": [
          {
            "crossTenant": false,
            "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
            "roleDisplayName": "Contributor",
            "description": "Policy Assignment '/providers/Microsoft.Management/managementGroups/mg-epacdev-platform-management/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-Management': Role Assignment required by Policy, deployed by: 'epac/00000000-0000-0000-0000-000000000000/epac-canary'",
            "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-platform-management"
          }
        ]
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-Web": {
        "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-Web",
        "managedIdentityLocation": "australiaeast",
        "nonComplianceMessages": [
          {
            "policyDefinitionReferenceId": null,
            "message": "Alerting must be deployed to Azure services."
          }
        ],
        "displayName": "Deploy Azure Monitor Baseline Alerts for Web",
        "identity": {
          "type": "SystemAssigned"
        },
        "enforcementMode": "Default",
        "name": "Deploy-AMBA-Web",
        "identityRequired": true,
        "description": "This initiative deploys Azure Monitor Baseline Alerts to monitor Web Services such as App Services.",
        "metadata": {
          "assignedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary",
          "_deployed_by_amba": true,
          "pacOwnerId": "00000000-0000-0000-0000-000000000000"
        },
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-Web",
        "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones",
        "notScopes": [],
        "requiredRoleAssignments": [
          {
            "crossTenant": false,
            "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
            "roleDisplayName": "Contributor",
            "description": "Policy Assignment '/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-Web': Role Assignment required by Policy, deployed by: 'epac/00000000-0000-0000-0000-000000000000/epac-canary'",
            "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones"
          }
        ]
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev-platform-connectivity/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-Connectivity": {
        "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-Connectivity",
        "managedIdentityLocation": "australiaeast",
        "nonComplianceMessages": [
          {
            "policyDefinitionReferenceId": null,
            "message": "Alerting must be deployed to Azure services."
          }
        ],
        "displayName": "Deploy Azure Monitor Baseline Alerts for Connectivity",
        "identity": {
          "type": "SystemAssigned"
        },
        "parameters": {
          "ALZMonitorResourceGroupLocation": "australiaeast",
          "ALZMonitorDisableTagName": "MonitorDisable",
          "ALZMonitorResourceGroupName": "alertsRG",
          "ALZMonitorResourceGroupTags": {
            "Project": "amba-monitoring"
          }
        },
        "enforcementMode": "Default",
        "name": "Deploy-AMBA-Connectivity",
        "identityRequired": true,
        "description": "This initiative deploys Azure Monitor Baseline Alerts to monitor Network components such as Azure Firewalls, ExpressRoute, VPN, and Private DNS Zones.",
        "metadata": {
          "assignedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary",
          "_deployed_by_amba": true,
          "pacOwnerId": "00000000-0000-0000-0000-000000000000"
        },
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev-platform-connectivity/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-Connectivity",
        "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-platform-connectivity",
        "notScopes": [],
        "requiredRoleAssignments": [
          {
            "crossTenant": false,
            "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
            "roleDisplayName": "Contributor",
            "description": "Policy Assignment '/providers/Microsoft.Management/managementGroups/mg-epacdev-platform-connectivity/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-Connectivity': Role Assignment required by Policy, deployed by: 'epac/00000000-0000-0000-0000-000000000000/epac-canary'",
            "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-platform-connectivity"
          }
        ]
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-HybridVM": {
        "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-HybridVM",
        "managedIdentityLocation": "australiaeast",
        "nonComplianceMessages": [
          {
            "policyDefinitionReferenceId": null,
            "message": "Alerting must be deployed to Azure services."
          }
        ],
        "displayName": "Deploy Azure Monitor Baseline Alerts for Hybrid VMs",
        "identity": {
          "type": "SystemAssigned"
        },
        "parameters": {
          "HybridVMHeartBeatRGWindowSize": "PT6H",
          "ALZMonitorResourceGroupTags": {
            "Project": "amba-monitoring"
          },
          "HybridVMDisconnectedAlertAutoMitigate": "false",
          "HybridVMOSDiskWriteLatencyThreshold": "30",
          "ALZManagementSubscriptionId": "8da8d616-a90e-446a-9098-ad7381ce56a7",
          "ALZMonitorResourceGroupLocation": "australiaeast",
          "ALZUserAssignedManagedIdentityName": "id-amba-prod-001",
          "ALZMonitorResourceGroupName": "alertsRG"
        },
        "enforcementMode": "Default",
        "name": "Deploy-AMBA-HybridVM",
        "identityRequired": true,
        "description": "This initiative deploys Azure Monitor Baseline Alerts to monitor Azure Arc-enabled Servers.",
        "metadata": {
          "assignedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary",
          "_deployed_by_amba": true,
          "pacOwnerId": "00000000-0000-0000-0000-000000000000"
        },
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-HybridVM",
        "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones",
        "notScopes": [],
        "requiredRoleAssignments": [
          {
            "crossTenant": false,
            "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
            "roleDisplayName": "Contributor",
            "description": "Policy Assignment '/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-HybridVM': Role Assignment required by Policy, deployed by: 'epac/00000000-0000-0000-0000-000000000000/epac-canary'",
            "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones"
          }
        ]
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-LoadBalance": {
        "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-LoadBalancing",
        "managedIdentityLocation": "australiaeast",
        "nonComplianceMessages": [
          {
            "policyDefinitionReferenceId": null,
            "message": "Alerting must be deployed to Azure services."
          }
        ],
        "displayName": "Deploy Azure Monitor Baseline Alerts for Load Balancing",
        "identity": {
          "type": "SystemAssigned"
        },
        "enforcementMode": "Default",
        "name": "Deploy-AMBA-LoadBalance",
        "identityRequired": true,
        "description": "This initiative deploys Azure Monitor Baseline Alerts to monitor Load Balancing Services such as Load Balancer, Application Gateway, Traffic Manager, and Azure Front Door.",
        "metadata": {
          "assignedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary",
          "_deployed_by_amba": true,
          "pacOwnerId": "00000000-0000-0000-0000-000000000000"
        },
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-LoadBalance",
        "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones",
        "notScopes": [],
        "requiredRoleAssignments": [
          {
            "crossTenant": false,
            "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
            "roleDisplayName": "Contributor",
            "description": "Policy Assignment '/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-LoadBalance': Role Assignment required by Policy, deployed by: 'epac/00000000-0000-0000-0000-000000000000/epac-canary'",
            "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones"
          }
        ]
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-NetworkChang": {
        "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-NetworkChanges",
        "managedIdentityLocation": "australiaeast",
        "nonComplianceMessages": [
          {
            "policyDefinitionReferenceId": null,
            "message": "Alerting must be deployed to Azure services."
          }
        ],
        "displayName": "Deploy Azure Monitor Baseline Alerts for Changes in Network Routing and Security",
        "identity": {
          "type": "SystemAssigned"
        },
        "parameters": {
          "ALZMonitorResourceGroupLocation": "australiaeast",
          "ALZMonitorResourceGroupName": "alertsRG",
          "ALZMonitorResourceGroupTags": {
            "Project": "amba-monitoring"
          }
        },
        "enforcementMode": "Default",
        "name": "Deploy-AMBA-NetworkChang",
        "identityRequired": true,
        "description": "This initiative implements Azure Monitor Baseline Alerts to monitor alterations in Network Routing and Security, such as modifications to Route Tables and the removal of Network Security Groups.",
        "metadata": {
          "assignedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary",
          "_deployed_by_amba": true,
          "pacOwnerId": "00000000-0000-0000-0000-000000000000"
        },
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-NetworkChang",
        "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones",
        "notScopes": [],
        "requiredRoleAssignments": [
          {
            "crossTenant": false,
            "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
            "roleDisplayName": "Contributor",
            "description": "Policy Assignment '/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-NetworkChang': Role Assignment required by Policy, deployed by: 'epac/00000000-0000-0000-0000-000000000000/epac-canary'",
            "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones"
          }
        ]
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev-platform-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-Identity": {
        "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-Identity",
        "managedIdentityLocation": "australiaeast",
        "nonComplianceMessages": [
          {
            "policyDefinitionReferenceId": null,
            "message": "Alerting must be deployed to Azure services."
          }
        ],
        "displayName": "Deploy Azure Monitor Baseline Alerts for Identity",
        "identity": {
          "type": "SystemAssigned"
        },
        "parameters": {
          "ALZMonitorResourceGroupLocation": "australiaeast",
          "ALZMonitorResourceGroupName": "alertsRG",
          "ALZMonitorResourceGroupTags": {
            "Project": "amba-monitoring"
          }
        },
        "enforcementMode": "Default",
        "name": "Deploy-AMBA-Identity",
        "identityRequired": true,
        "description": "Initiative to deploy AMBA alerts relevant to the ALZ Identity management group",
        "metadata": {
          "assignedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary",
          "_deployed_by_amba": true,
          "pacOwnerId": "00000000-0000-0000-0000-000000000000"
        },
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev-platform-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-Identity",
        "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-platform-identity",
        "notScopes": [],
        "requiredRoleAssignments": [
          {
            "crossTenant": false,
            "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
            "roleDisplayName": "Contributor",
            "description": "Policy Assignment '/providers/Microsoft.Management/managementGroups/mg-epacdev-platform-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-Identity': Role Assignment required by Policy, deployed by: 'epac/00000000-0000-0000-0000-000000000000/epac-canary'",
            "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-platform-identity"
          }
        ]
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-VM": {
        "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-VM",
        "managedIdentityLocation": "australiaeast",
        "nonComplianceMessages": [
          {
            "policyDefinitionReferenceId": null,
            "message": "Alerting must be deployed to Azure services."
          }
        ],
        "displayName": "Deploy Azure Monitor Baseline Alerts for Virtual Machines",
        "identity": {
          "type": "SystemAssigned"
        },
        "parameters": {
          "ALZMonitorResourceGroupLocation": "australiaeast",
          "ALZManagementSubscriptionId": "8da8d616-a90e-446a-9098-ad7381ce56a7",
          "ALZMonitorResourceGroupName": "alertsRG",
          "ALZUserAssignedManagedIdentityName": "id-amba-prod-001",
          "ALZMonitorResourceGroupTags": {
            "Project": "amba-monitoring"
          }
        },
        "enforcementMode": "Default",
        "name": "Deploy-AMBA-VM",
        "identityRequired": true,
        "description": "This initiative deploys Azure Monitor Baseline Alerts to monitor Azure Virtual Machines.",
        "metadata": {
          "assignedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary",
          "_deployed_by_amba": true,
          "pacOwnerId": "00000000-0000-0000-0000-000000000000"
        },
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-VM",
        "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones",
        "notScopes": [],
        "requiredRoleAssignments": [
          {
            "crossTenant": false,
            "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
            "roleDisplayName": "Contributor",
            "description": "Policy Assignment '/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-VM': Role Assignment required by Policy, deployed by: 'epac/00000000-0000-0000-0000-000000000000/epac-canary'",
            "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones"
          }
        ]
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-KeyMgmt": {
        "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-KeyManagement",
        "managedIdentityLocation": "australiaeast",
        "nonComplianceMessages": [
          {
            "policyDefinitionReferenceId": null,
            "message": "Alerting must be deployed to Azure services."
          }
        ],
        "displayName": "Deploy Azure Monitor Baseline Alerts for Key Management",
        "identity": {
          "type": "SystemAssigned"
        },
        "parameters": {
          "ALZMonitorResourceGroupLocation": "australiaeast",
          "ALZMonitorResourceGroupName": "alertsRG",
          "ALZMonitorResourceGroupTags": {
            "Project": "amba-monitoring"
          }
        },
        "enforcementMode": "Default",
        "name": "Deploy-AMBA-KeyMgmt",
        "identityRequired": true,
        "description": "This initiative deploys Azure Monitor Baseline Alerts to monitor Key Management Services such as Azure Key Vault, and Managed HSM.",
        "metadata": {
          "assignedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary",
          "_deployed_by_amba": true,
          "pacOwnerId": "00000000-0000-0000-0000-000000000000"
        },
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-KeyMgmt",
        "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones",
        "notScopes": [],
        "requiredRoleAssignments": [
          {
            "crossTenant": false,
            "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
            "roleDisplayName": "Contributor",
            "description": "Policy Assignment '/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-KeyMgmt': Role Assignment required by Policy, deployed by: 'epac/00000000-0000-0000-0000-000000000000/epac-canary'",
            "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones"
          }
        ]
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-SvcHealth": {
        "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-ServiceHealth",
        "managedIdentityLocation": "australiaeast",
        "nonComplianceMessages": [
          {
            "policyDefinitionReferenceId": null,
            "message": "Alerting must be deployed to Azure services."
          }
        ],
        "displayName": "Deploy Azure Monitor Baseline Alerts for Service Health",
        "identity": {
          "type": "SystemAssigned"
        },
        "parameters": {
          "ALZMonitorResourceGroupLocation": "australiaeast",
          "ALZMonitorResourceGroupName": "alertsRG",
          "ALZMonitorResourceGroupTags": {
            "Project": "amba-monitoring"
          }
        },
        "enforcementMode": "Default",
        "name": "Deploy-AMBA-SvcHealth",
        "identityRequired": true,
        "description": "This initiative deploys Azure Monitor Baseline Alerts to monitor Service Health Events such as Service issues, Planned maintenance, Health advisories, Security advisories, and Resource health.",
        "metadata": {
          "assignedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary",
          "_deployed_by_amba": true,
          "pacOwnerId": "00000000-0000-0000-0000-000000000000"
        },
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-SvcHealth",
        "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "notScopes": [],
        "requiredRoleAssignments": [
          {
            "crossTenant": false,
            "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
            "roleDisplayName": "Contributor",
            "description": "Policy Assignment '/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-SvcHealth': Role Assignment required by Policy, deployed by: 'epac/00000000-0000-0000-0000-000000000000/epac-canary'",
            "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev"
          }
        ]
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-Notification": {
        "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Notification-Assets",
        "managedIdentityLocation": "australiaeast",
        "nonComplianceMessages": [
          {
            "policyDefinitionReferenceId": null,
            "message": "Notification Assets must be deployed to Azure services."
          }
        ],
        "displayName": "Deploy Azure Monitor Baseline Alerts - Notification Assets",
        "identity": {
          "type": "SystemAssigned"
        },
        "parameters": {
          "ALZMonitorResourceGroupLocation": "australiaeast",
          "ALZMonitorResourceGroupName": "alertsRG",
          "ALZMonitorResourceGroupTags": {
            "Project": "amba-monitoring"
          }
        },
        "enforcementMode": "Default",
        "name": "Deploy-AMBA-Notification",
        "identityRequired": true,
        "description": "This initiative deploys Notification Assets for Azure Monitor Baseline Alerts. This includes the setup of an Alert Processing Rule and an Action Group to manage notifications and actions, along with a Notification Suppression Rule to manage alert notifications, as well as a Notification Suppression Rule to control alert notifications.",
        "metadata": {
          "assignedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary",
          "_deployed_by_amba": true,
          "pacOwnerId": "00000000-0000-0000-0000-000000000000"
        },
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-Notification",
        "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev",
        "notScopes": [],
        "requiredRoleAssignments": [
          {
            "crossTenant": false,
            "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
            "roleDisplayName": "Contributor",
            "description": "Policy Assignment '/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-Notification': Role Assignment required by Policy, deployed by: 'epac/00000000-0000-0000-0000-000000000000/epac-canary'",
            "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev"
          }
        ]
      },
      "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-Storage": {
        "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/mg-epacdev/providers/Microsoft.Authorization/policySetDefinitions/Alerting-Storage",
        "managedIdentityLocation": "australiaeast",
        "nonComplianceMessages": [
          {
            "policyDefinitionReferenceId": null,
            "message": "Alerting must be deployed to Azure services."
          }
        ],
        "displayName": "Deploy Azure Monitor Baseline Alerts for Storage",
        "identity": {
          "type": "SystemAssigned"
        },
        "parameters": {
          "ALZMonitorResourceGroupLocation": "australiaeast",
          "ALZMonitorResourceGroupName": "alertsRG",
          "ALZMonitorResourceGroupTags": {
            "Project": "amba-monitoring"
          }
        },
        "enforcementMode": "Default",
        "name": "Deploy-AMBA-Storage",
        "identityRequired": true,
        "description": "This initiative deploys Azure Monitor Baseline Alerts to monitor Storage Services such as Storage accounts.",
        "metadata": {
          "assignedBy": "epac/00000000-0000-0000-0000-000000000000/epac-canary",
          "_deployed_by_amba": true,
          "pacOwnerId": "00000000-0000-0000-0000-000000000000"
        },
        "id": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-Storage",
        "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones",
        "notScopes": [],
        "requiredRoleAssignments": [
          {
            "crossTenant": false,
            "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
            "roleDisplayName": "Contributor",
            "description": "Policy Assignment '/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AMBA-Storage': Role Assignment required by Policy, deployed by: 'epac/00000000-0000-0000-0000-000000000000/epac-canary'",
            "scope": "/providers/Microsoft.Management/managementGroups/mg-epacdev-landingzones"
          }
        ]
      }
    },
    "delete": {},
    "replace": {},
    "update": {}
  }
}
