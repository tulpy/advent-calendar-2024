---
name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

env:
  PSRULE_DIRECTORY: ./
  INFRA_WORKING_DIRECTORY: ./

concurrency:
  group: release # Change group concurrency to be explicit for your solution.

jobs:
  linting:
    name: Lint Testing
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: read
      statuses: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

        # Linting
      - name: Lint Testing
        uses: super-linter/super-linter@v7
        env:
          DEFAULT_BRANCH: "main"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_JSON: true
          VALIDATE_MARKDOWN: true
          VALIDATE_POWERSHELL: true
          VALIDATE_YAML: true
          FILTER_REGEX_EXCLUDE: ^(?:.*/src/modules/[^/]+/.*\.md|.*/docs/wiki/(?:Bicep|PS-Rule|Scripts)/.*/.*\.md)$

  ps-rule-orchestration:
    name: Run PSRule Tests [Orchestration]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check-Out Repository
        uses: actions/checkout@v4

      - name: Run PSRule Validation
        continue-on-error: true # This is to ensure that the workflow does not stop the next step while the modules are cleaned up
        uses: ./.github/actions/ps-rule
        with:
          option: "ps-rule.yaml"
          bicepPath: "src/orchestration"
          path: ${{ env.PSRULE_DIRECTORY }}

  ps-rule-modules:
    name: Run PSRule Tests [Modules]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check-Out Repository
        uses: actions/checkout@v4

      - name: Run PSRule Validation
        continue-on-error: true # This is to ensure that the workflow does not stop the next step while the modules are cleaned up
        uses: ./.github/actions/ps-rule
        with:
          option: "ps-rule.yaml"
          bicepPath: "src/modules"
          path: ${{ env.PSRULE_DIRECTORY }}

  generate-doc:
    name: Generate Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Check-Out Repository
        uses: actions/checkout@v4

      - name: Install Pandoc
        uses: ./.github/actions/pandoc
        with:
          version: 3.1.12.2

      # Run Convert-WikiMarkdowntoWord.ps1
      - name: Run ./scripts/Convert-WikiMarkdowntoWord.ps1
        uses: azure/powershell@v2
        with:
          inlineScript: |
            Write-Information "==> Running script..." -InformationAction Continue
            ./scripts/Convert-WikiMarkdowntoWord.ps1
          azPSVersion: "latest"

      # Upload the documentation to the repository
      - name: Upload Documentation as artefact
        uses: actions/upload-artifact@v4
        with:
          name: Word Documentation
          path: docs/*.docx

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - linting
      - ps-rule-modules
      - ps-rule-orchestration
    steps:
      - name: Check-Out Repository
        uses: actions/checkout@v4

      - name: Bicep Build
        uses: Azure/cli@v2.1.0
        with:
          inlineScript: |
            export DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1
            az bicep build -f ./src/orchestration/main.bicep --stdout

      - name: Copy Files for Artefact Upload
        run: rsync -av --exclude='build' --exclude={'.vscode/','.ps-rule/','.ps-docs/','*.md'} ./. ./build
        working-directory: ${{ env.INFRA_WORKING_DIRECTORY }}

      - name: Upload artefact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: infrastructure
          path: ${{ env.INFRA_WORKING_DIRECTORY }}

  # If you need additional environments, make a copy of the code block below and update the environmentName and templateParameterFile for each environment.
  # If you are creating multiple landing zones, e.g. one for Data, another for SAP, etc., make multiple copies of this release.yml file (e.g. release_SAP.yml) for each landing zone subscription vending.
  deploy_Sbx:
    name: Deploy Sandbox
    uses: ./.github/workflows/deploy.yml
    concurrency: "deploy"
    needs:
      - build
    with:
      artefactName: infrastructure
      environmentName: "sbx_SAP"
      location: ${{ vars.LOCATION }}
      managementGroupId: ${{ vars.MANAGEMENT_GROUP_ID }}
      templateFile: ./src/orchestration/main.bicep
      templateParameterFile: ./src/configuration/sub-sap-sbx-01.bicepparam
      moduleName: "sub-sbx-sap-01"
    secrets: inherit
